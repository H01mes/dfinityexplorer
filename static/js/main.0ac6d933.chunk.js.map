{"version":3,"sources":["Components/AboutPage/banner-x-horizon.png","Components/AboutPage/dfinity-explorer-logo-large.png","Components/AboutPage/apollo-logo-dark-mode.png","Components/AboutPage/apollo-logo-light-mode.png","Components/AboutPage/dfinity-logo-dark-mode.png","Components/AboutPage/dfinity-logo-light-mode.png","Components/AboutPage/github-octocat.png","Components/AboutPage/graphql-logo.png","Components/AboutPage/material-ui-logo.png","Components/AboutPage/nomics-logo-dark-mode.png","Components/AboutPage/nomics-logo-light-mode.png","Components/AboutPage/postgresql-logo.png","Components/AboutPage/postgresql-logo-text.png","Components/AboutPage/prisma-logo-dark-mode.png","Components/AboutPage/prisma-logo-light-mode.png","Components/AboutPage/react-logo-text.png","Components/AboutPage/styled-components-logo-dark-mode.png","Components/AboutPage/styled-components-logo-light-mode.png","Components/DEAppBar/dfinity-explorer-logo.png","constants.js","theme/globalStyle.js","Components/ResponsiveComponent/ResponsiveComponent.js","Components/TrackablePage/TrackablePage.js","utils/breakpoint.js","Components/DynamicTable/DynamicTable.js","graphql/queryBlocks.js","graphql/subscriptionBlock.js","Components/BlocksSlideTable/BlocksSlideTable.js","graphql/queryTransactions.js","graphql/subscriptionTransaction.js","utils/getHashString.js","Components/TransactionsFadeTable/TransactionsFadeTable.js","Components/DashCard/DashCard.js","graphql/queryNetworkStats.js","graphql/subscriptionNetworkStats.js","Components/BlockTimeCard/BlockTimeCard.js","Components/TransactionsCard/TransactionsCard.js","graphql/queryPrice.js","graphql/subscriptionPrice.js","Components/PriceCard/PriceCard.js","Components/AreaChart/AreaChart.js","graphql/queryDailyNetworkStatses.js","Components/TransactionsChart/TransactionsChart.js","graphql/queryCandles.js","Components/PriceChart/PriceChart.js","Components/HomePage/HomePage.js","Components/AccountsPage/AccountsPage.js","Components/TablePager/TablePager.js","Components/PagedTable/PagedTable.js","graphql/queryBlocksConnection.js","Components/BlocksPagedTable/BlocksPagedTable.js","Components/BlocksPage/BlocksPage.js","Components/BlockTransactionsTable/BlockTransactionsTable.js","graphql/queryBlock.js","Components/BlockDetailsPage/BlockDetailsPage.js","graphql/queryTransactionsConnection.js","Components/TransactionsPagedTable/TransactionsPagedTable.js","Components/TransactionsPage/TransactionsPage.js","graphql/queryTransaction.js","Components/TransactionDetailsPage/TransactionDetailsPage.js","Components/CanistersPage/CanistersPage.js","utils/getRandomInt.js","utils/getRandomNumber.js","Components/DfinitySymbolD3/DfinitySymbolD3.js","Components/ImageLinkGrid/ImageLinkGrid.js","Components/AboutPage/AboutPage.js","graphql/querySearchGetType.js","Components/SearchPage/SearchPage.js","graphql/querySearchAutoComplete.js","Components/DEAppBar/DEAppBar.js","Components/Footer/Footer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Constants","Object","freeze","URI_SERVER_HTTP","URI_SERVER_WEB_SOCKETS","URI_CDN_FONT_AWESOME","URI_CDN_GOOGLE_FONTS","URI_DFINITY_EXPLORER_TWITTER","URI_DFINITY_EXPLORER_GITHUB","URI_ABOUT_APOLLO","URI_ABOUT_NOMICS","URI_ABOUT_DFINITY","URI_ABOUT_GRAPHQL","URI_ABOUT_GRAPHQL_YOGA","URI_ABOUT_MATERIAL_UI","URI_ABOUT_POSTGRES","URI_ABOUT_PRISMA","URI_ABOUT_REACT","URI_ABOUT_STYLED_COMPONENTS","URI_GITHUB_CONTRIBUTORS","URI_GITHUB_DFINITY_EXPLORER_PROJECT","URI_GITHUB_DFINITY_EXPLORER_WIKI","URI_GITHUB_DYLAN","URI_GITHUB_MIT_LICENSE","URI_GITHUB_TODD","URI_NASA_EXPLORER","URI_TWITTER_DFINITY_EXPLORER","COLOR_DFINITY_BLACK","COLOR_DFINITY_BLACK_LIGHTER","COLOR_DFINITY_BLACK_DARKER","COLOR_DFINITY_LIGHT_ORANGE","COLOR_DFINITY_DARK_ORANGE","COLOR_DFINITY_BLUE_400","COLOR_DFINITY_BLUE_500","COLOR_DFINITY_BLUE_600","COLOR_DFINITY_BLUE_700","COLOR_DFINITY_BLUE_800","COLOR_DFINITY_BLUE_900","COLOR_TEXT_LIGHT","COLOR_DARK_TEXT","COLOR_DARK_TEXT_FADED","COLOR_TEXT_DARKER","COLOR_TEXT_DARKEST","COLOR_LIGHT_TEXT","COLOR_LIGHT_TEXT_FADED","COLOR_DARK_BODY_DARKER_MAC_OS","COLOR_DARK_BODY_LIGHTER_MAC_OS","COLOR_DARK_DRAWER_DIVIDER_MAC_OS","COLOR_DARK_DRAWER_DIVIDER_YOUTUBE","COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX","COLOR_DARK_TEXT_MAC_OS","COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE","COLOR_LIGHT_CHART_GOOGLE","COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE","COLOR_LIGHT_DRAWER_ICON_GOOGLE","COLOR_LIGHT_DRAWER_TEXT_GOOGLE","COLOR_TWITTER_BLUE","COLOR_TWITTER_GREEN","COLOR_TWITTER_ORANGE","COLOR_TWITTER_PURPLE","COLOR_GRAY_ON_WHITE","FONT_PRIMARY","MATERIAL_FONT_SIZE_H1","MATERIAL_FONT_SIZE_H2","MATERIAL_FONT_SIZE_H3","MATERIAL_FONT_SIZE_H4","MATERIAL_FONT_SIZE_H5","MATERIAL_FONT_SIZE_H6","MATERIAL_FONT_SIZE_SUBTITLE_1","MATERIAL_FONT_SIZE_SUBTITLE_2","MATERIAL_FONT_SIZE_BODY_1","MATERIAL_FONT_SIZE_BODY_2","MATERIAL_FONT_SIZE_BUTTON","MATERIAL_FONT_SIZE_CAPTION","MATERIAL_FONT_SIZE_OVERLINE","MATERIAL_CIRCULAR_INDICATOR_SIZE","MATERIAL_UI_ICON_BUTTON_FONT_SIZE","FONT_SIZE_TABLE_XS","BREAKPOINT_MIN_XS","BREAKPOINT_MAX_XS","BREAKPOINT_MIN_SM","BREAKPOINT_MAX_SM","BREAKPOINT_MIN_MD","BREAKPOINT_MAX_MD","BREAKPOINT_MIN_LG","BREAKPOINT_MAX_LG","BREAKPOINT_MIN_XL","BREAKPOINT_LG_MAX_WIDTH","DRAWER_WIDTH","FOOTER_HEIGHT","ICON_SVG_PATH_TPS","ICON_SVG_PATH_VOLUME","ICON_SVG_PATH_MARKET_CAP","ICON_SVG_PATH_BLOCK","ICON_SVG_PATH_PRICE","ICON_SVG_PATH_BLOCK_TIME","ICON_SVG_PATH_THEME_LIGHT","ICON_SVG_PATH_THEME_DARK","ICON_SVG_PATH_BITCOIN","ABOUT_PAGE_MARGIN_XS","ABOUT_PAGE_MARGIN_SM","ABOUT_PAGE_MARGIN_MD","ABOUT_PAGE_MARGIN_LG","HOME_PAGE_MARGIN_XS","HOME_PAGE_MARGIN_SM_AND_UP","TABLE_ROW_HEIGHT_XS","TABLE_ROW_HEIGHT_SM_AND_UP","ABOUT_PAGE_PROJECT_ICONS_HEIGHT","COINBASE_CHECKOUT_ID","GOOGLE_ANALYTICS_TRACKING_ID","GlobalStyle","createGlobalStyle","_templateObject","props","theme","colorBodyBackground","themeLight","isDark","colorAboutBackgroundPrimary","colorAboutBackgroundSecondary","colorAboutHeaderText","colorAboutTwitterBackground","colorAppBarBackground","colorAppBarTextButton","colorAppBarDfinityText","colorAppBarExplorerText","colorBodyButtonBackground","colorBodyButtonText","colorBodyButtonHoverBackground","colorBodyButtonHoverText","colorBodyText","colorBodyTextDim","colorBodyTextLink","colorDashCardBackground","colorDashCardIcon","colorDashCardIconOpacity","colorDrawerBackground","colorDrawerDivider","colorDrawerIcon","colorDrawerIconTextSelected","colorDrawerText","colorChartBackground","colorChartTooltipBackground","colorChartAxes","colorChartGrid","colorChartText","colorChartLine","colorChartActiveDotStroke","colorIconButtonHover","colorTableBackgroundPrimary","colorTableRowBorder","colorTableTextDim","colorFooterBackground","colorFooterTextIcon","colorSearchText","colorSearchIcon","opacityActionDisabled","opacityActionHover","themeDark","ResponsiveComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowResize","bind","assertThisInitialized","throttledHandleWindowResize","throttle","window","addEventListener","removeEventListener","forceUpdate","Component","TrackablePage","get","prototype","scrollTo","pathName","location","pathname","search","trackPage","prevProps","currentPathName","nextPathName","ReactGA","set","page","pageview","Breakpoints","XS","SM","MD","LG","XL","getBreakpoint","isDesktopDrawerOpen","drawerWidth","matchMedia","matches","isBreakpointGreaterOrEqualTo","breakpoint","isBreakpointLessOrEqualTo","BREAKPOINT_MAX_XL","StyledPaper","styled","Paper","DynamicTable_templateObject","TypographyTitle","Typography","_templateObject2","StyledTable","Table","_templateObject3","TableRowHeader","TableRow","_templateObject4","_ref","concat","TableRowBody","_templateObject5","StyledTableCell","TableCell","_templateObject6","_ref2","TableCellHeader","_templateObject7","StyledLink","Link","_templateObject8","TableRowFooter","_templateObject9","TableCellFooter","_templateObject10","DynamicTable","_this$props","columnWidths","footerRow","headerRow","title","react_default","a","createElement","elevation","map","width","index","key","index_es","cell","align","isNumeric","padding","link","to","value","getBodyRowElements","_this$props2","getBodyRows","maxRows","slide","rowHeight","rows","slice","renderprops","items","keys","bodyRow","mapKey","from","height","opacity","enter","leave","state","style","getBodyRowElement","in","timeout","rowIndex","cells","borderBottomStyle","container","direction","justify","alignItems","queryBlocks","gql","queryBlocks_templateObject","subscriptionBlock","subscriptionBlock_templateObject","BlocksSlideTableWithData","firstBlockAdded","handleQueryCompleted","_this2","react_apollo_esm","query","variables","first","onCompleted","loading","error","data","subscribeToMore","subscribeToNewObjects","BlocksSlideTable_BlocksSlideTable","blocks","length","handleAddNewBlock","_this3","document","updateQuery","prev","subscriptionData","block","node","toConsumableArray","BlocksSlideTable","_this4","Components_DynamicTable_DynamicTable","_this$props3","date","Date","timestamp","toLocaleString","numTransactions","queryTransactions","queryTransactions_templateObject","subscriptionTransaction","subscriptionTransaction_templateObject","getHashString","hash","maxLength","undefined","substring","substr","TransactionsFadeTableWithData","TransactionsFadeTable_TransactionsFadeTable","transactions","transaction","TransactionsFadeTable","amount","toFixed","toString","GridNoWrap","Grid","DashCard_templateObject","SvgIconCard","SvgIcon","DashCard_templateObject2","cardindex","DashCard_templateObject3","TypographyValue","DashCard_templateObject4","DashCard","cardIndex","className","svgIconPath","wrap","item","d","DashCard_TypographyTitle","noWrap","queryNetworkStats","queryNetworkStats_templateObject","subscriptionNetworkStats","subscriptionNetworkStats_templateObject","BlockTimeCard","secondsPerBlock","networkStats","Components_DashCard_DashCard","TransactionsCard","transactionsPerSecond","queryPrice","queryPrice_templateObject","subscriptionPrice","subscriptionPrice_templateObject","PriceCard","price","AreaChart_templateObject","AreaChart_templateObject2","StyledAreaChart","RechartsAreaChart","AreaChart_templateObject3","AreaChart","chartHeight","getData","AreaChart_StyledPaper","AreaChart_TypographyTitle","getTitle","es6","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","vertical","dataKey","getDataKeyX","tick","fill","tickFormatter","getGetTickX","tickMargin","tickSize","domain","dataMin","getDomainMinY","dataMax","getDomainMaxY","getGetTickY","tickLine","labelFormatter","getGetTooltipX","formatter","getGetTooltipY","contentStyle","background","border","borderRadius","fontSize","boxShadow","shadows","itemStyle","color","labelStyle","cursor","animationDuration","type","getDataKeyY","strokeWidth","fillOpacity","activeDot","r","Error","queryDailyNetworkStatses","queryDailyNetworkStatses_templateObject","TransactionsChartWithData","last","skip","TransactionsChart_TransactionsChart","dailyNetworkStatses","TransactionsChart","Math","floor","ceil","toLocaleDateString","k","Number","isInteger","propTypes","PropTypes","number","isRequired","array","bool","object","withTheme","queryCandles","queryCandles_templateObject","PriceChartWithData","startDate","setDate","getDate","endDate","start","toISOString","end","PriceChart_PriceChart","candles","PriceChart","GridSection","HomePage_templateObject","duration","standard","easing","easeInOut","GridSectionTables","HomePage_templateObject2","GridCard","HomePage_templateObject3","GridChart","HomePage_templateObject4","_ref3","GridTable","HomePage_templateObject5","_ref4","CardBlocks","HomePage_templateObject6","CardBlockTime","HomePage_templateObject7","CardTransactions","HomePage_templateObject8","CardPrice","HomePage_templateObject9","HomePage","blockHeight","getSectionCards","getSectionCharts","getSectionTables","Fade_default","delay","Components_TransactionsChart_TransactionsChart","Components_PriceChart_PriceChart","Components_BlocksSlideTable_BlocksSlideTable","Components_TransactionsFadeTable_TransactionsFadeTable","setState","TypographyHeading","AccountsPage_templateObject","TypographyBody","AccountsPage_templateObject2","AccountsPage","marginTop","marginLeft","TablePager_templateObject","StyledToolbar","Toolbar","TablePager_templateObject2","TypographyCaption","TablePager_templateObject3","TypographyRows","TablePager_templateObject4","TypographyCount","TablePager_templateObject5","StyledSelect","other","esm_extends","assign","classes","icon","root","TablePager_templateObject6","StyledMenuItem","MenuItem","TablePager_templateObject7","StyledIconButton","IconButton","TablePager_templateObject8","fade","StyledIconButtonNotLast","TablePager_templateObject9","TablePagerActions","count","onChangePage","rowsPerPage","objectWithoutProperties","lastPage","onClick","event","disabled","aria-label","FirstPage_default","KeyboardArrowLeft_default","KeyboardArrowRight_default","max","LastPage_default","TablePager","newLastPage","TablePager_StyledTableCell","colSpan","getToolbar","getRowsSelectCount","getActions","onChangeRowsPerPage","rowsPerPageOptions","rowsText","react","input","onChange","MenuProps","PaperProps","rowsPerPageOption","getCountText","total","_this$props4","min","t","m","_this$props5","TablePager_TablePagerActions","PagedTable_templateObject","PagedTable_templateObject2","DivCircularProgress","div","PagedTable_templateObject3","zIndex","modal","StyledCircularProgress","CircularProgress","PagedTable_templateObject4","PagedTable_templateObject5","StyledTableRow","PagedTable_templateObject6","PagedTable_templateObject7","PagedTable_templateObject8","PagedTable_templateObject9","PagedTable_templateObject10","PagedTable","pageIndex","priorPageIndex","priorStartCursor","priorEndCursor","firstId","startCursor","endCursor","handleChangePage","handleChangeRowsPerPage","PagedTable_StyledPaper","PagedTable_TypographyTitle","getTableElements","getDataConnection","_this$state","withCount","lastPageIndex","after","before","fetchPolicy","connection","aggregate","edges","pageInfo","mountOnEnter","unmountOnExit","size","PagedTable_StyledTable","getHeaderRowElement","getFooterRowElement","PagedTable_TableCellHeader","PagedTable_StyledLink","PagedTable_StyledTableCell","_this$state2","PagedTable_TableRowFooter","Components_TablePager_TablePager","prevState","target","queryBlocksConnection","queryBlocksConnection_templateObject","BlocksPagedTable","Components_PagedTable_PagedTable","blocksConnection","edge","BlocksPage_templateObject","GridPagedTable","BlocksPage_templateObject2","BlocksPage","BlocksPage_GridSection","Components_BlocksPagedTable_BlocksPagedTable","BlockTransactionsTable","queryBlock","queryBlock_templateObject","BlockDetailsPage_templateObject","BlockDetailsPage_templateObject2","BlockDetailsPage_templateObject3","BlockDetailsPage_templateObject4","BlockDetailsPage","parseInt","match","params","BlockDetailsPage_GridSection","BlockDetailsPage_TypographyHeading","BlockDetailsPage_TypographyBody","BlockDetailsPage_GridTable","Components_BlockTransactionsTable_BlockTransactionsTable","queryTransactionsConnection","queryTransactionsConnection_templateObject","TransactionsPagedTable","transactionsConnection","TransactionsPage_templateObject","TransactionsPage_templateObject2","TransactionsPage","TransactionsPage_GridSection","TransactionsPage_GridPagedTable","Components_TransactionsPagedTable_TransactionsPagedTable","queryTransaction","queryTransaction_templateObject","TransactionDetailsPage_templateObject","TransactionDetailsPage_templateObject2","TransactionDetailsPage_templateObject3","TransactionDetailsPage_templateObject4","TransactionDetailsPage","hashMaxLength","TransactionDetailsPage_GridSection","TransactionDetailsPage_TypographyHeading","TransactionDetailsPage_TypographyBody","TransactionDetailsPage_StyledLink","CanistersPage_templateObject","CanistersPage_templateObject2","CanistersPage","CanistersPage_TypographyHeading","CanistersPage_TypographyBody","getRandomInt","random","getRandomNumber","DfinitySymbolD3","dragStarted","dragged","dragEnded","rotate","stage","renderer","linksGraphics","simulationWidth","logoMode","simulationHeight","scaleSimulationToPixi","centerX","centerY","scaleToWindow","numSymbolNodes","numVertices","numNodes","forceManyBodyStrengthSymbolNodes","forceManyBodyStrengthNonSymbolNodes","linkDistance","nodeStrokeWidth","nodeRadius","nodeRadiusSelected","nodeSelectedFillColorArray","nodeSelectedStrokeColorArray","nodeOpacity","nodeOpacitySelected","linkStrokeWidth","linkStrokeWidthIncreaseAtMagnitude","symbolHeightMultiplier","rotateOffset","rotateTimeMs","rotateAmount","selectedNodeIndex","newBlockNodeStartTime","newBlockLinksStartTime","newBlockNodeTimerMs","newBlockLinksTimerMs","draw","destroy","pixiResizeRenderer","nodesData","forEach","pixiDrawNode","ref","el","element","addNodes","addLinks","createSimulation","pixiSetup","i","pos","getNodePosition","push","fx","fy","_fx","_fy","linkCount","PI","scale","cos","sin","linksData","indexSymbol","indexSymbolNext","addLink","vertexShapeTop","indexShapeTop","indexShapeTopNext","indexShapeAlmostTop","j","indexShapeNext","indexSpiralNext","indexSource","indexTarget","strength","source","_strength","_opacity","simulation","d3","force","link_force","distance","on","alphaDecay","_this5","PIXI","skipHello","antialias","transparent","resolution","autoResize","appendChild","view","graphics","addChild","subject","find","x","y","resize","position","nodeStrokeColor","nodeFillColor","selectedNodeMagnitude","arguments","rgbNumberFromArray","gradientColor","getNodeStrokeColorArray","clear","lineStyle","beginFill","filters","drawCircle","linkMagnitude","linkOpacity","alpha","getColorArray","moveTo","lineTo","numIndices","purple","pink","darkOrange","lightOrange","blue","transitionIndicesSmall","transitionIndicesGradual","lastPurpleIndex","lastPinkIndex","lastDarkOrangeIndex","lastLightOrangeIndex","lastBlueIndex","percentage","color1","color2","percent","p1","p2","round","active","alphaTarget","restart","_this6","pixiMoveNode","elapsedMs","pixiDrawLink","endFill","render","elapsed","ImageLinkGrid","widths","maxHeight","calculateMaxImageDimensions","arePropsChanged","imageLinks","imageLink","src","justifyRow","marginBetweenRows","perRow","containerHeight","imageLinkGrid","maxWidthColumn","Array","row","isShortRow","columnIndex","href","rel","alt","img","Image","onload","_event$currentTarget","currentTarget","naturalWidth","naturalHeight","PaperParallax","AboutPage_templateObject","GridParallax","AboutPage_templateObject2","TypographyParallax","AboutPage_templateObject3","AboutPage_templateObject4","GridSectionPrimary","AboutPage_templateObject5","GridSectionSecondary","AboutPage_templateObject6","GridItem","AboutPage_templateObject7","GridImageLeft","AboutPage_templateObject8","GridImageRight","AboutPage_templateObject9","_ref5","GridSymbolLeft","AboutPage_templateObject10","_ref6","GridText","_templateObject11","_ref7","GridTextLeft","_templateObject12","_ref8","GridTextRight","_templateObject13","_ref9","_templateObject14","_ref10","_templateObject15","StyledA","_templateObject16","ImgSection","_templateObject17","ButtonSubscribe","Button","_templateObject18","MailIconButton","MailIcon","_templateObject19","SpanHeart","span","_templateObject20","ButtonDonate","CoinbaseCommerceButton","_templateObject21","SvgIconButton","_templateObject22","PaperTwitter","_templateObject23","_ref11","ImageLinkGridThanks","_templateObject24","AboutPage","getHeader","getSectionMission","getSectionOpenSource","getSectionCommunity","getSectionContributors","getSectionThanks","dist","bgImage","bannerXHorizon","bgImageAlt","bgImageStyle","isThemeDark","Components_DfinitySymbolD3_DfinitySymbolD3","getDfinitySymbolD3Width","AboutPage_TypographyHeading","AboutPage_TypographyBody","Flip_default","dfinityExplorerLogo","dist_index_es","sourceType","screenName","options","noFooter","action","method","name","noValidate","aria-hidden","tabIndex","defaultValue","checkoutId","LightSpeed_default","githubOctocat","imagesPerRow","reactHeight","styledComponentsHeight","materialUiHeight","nomicsHeight","apolloHeight","graphqlHeight","prismaHeight","postgresHeight","dfinityHeight","reactLogo","styledComponentsLogoDark","styledComponentsLogoLight","materialUiLogo","nomicsLogoDark","nomicsLogoLight","apolloLogoDark","apolloLogoLight","graphqlLogo","prismaLogoDark","prismaLogoLight","postgresLogoDark","postgresLogoLight","dfinityLogoDark","dfinityLogoLight","contentWidth","innerWidth","querySearchGetType","querySearchGetType_templateObject","StyledTypography","SearchPage_templateObject","ExplorerTypography","SearchPage_templateObject2","SearchPage","searchGetType","Redirect","querySearchAutoComplete","querySearchAutoComplete_templateObject","StyledAppBar","AppBar","DEAppBar_templateObject","drawer","SearchAppBar","DEAppBar_templateObject2","DEAppBar_templateObject3","SearchToolbar","DEAppBar_templateObject4","ImgProductIcon","DEAppBar_templateObject5","TypographyAppName","DEAppBar_templateObject6","TypographyDfinity","DEAppBar_templateObject7","TypographyBorder","DEAppBar_templateObject8","TypographyExplorer","DEAppBar_templateObject9","InputSearch","Input","DEAppBar_templateObject10","ListSearch","List","DEAppBar_templateObject11","ListItemSearch","ListItem","DEAppBar_templateObject12","highlighted","SearchIconListSearch","SearchIcon","DEAppBar_templateObject13","DEAppBar_templateObject14","StyledMenuIcon","MenuIcon","DEAppBar_templateObject15","StyledSearchIcon","DEAppBar_templateObject16","StyledCloseIcon","CloseIcon","DEAppBar_templateObject17","StyledSwipeableDrawer","paper","DEAppBar_templateObject18","StyledDrawer","DEAppBar_templateObject19","StyledDivider","Divider","DEAppBar_templateObject20","DrawerListItemIcon","ListItemIcon","DEAppBar_templateObject21","DrawerListItemText","primary","DEAppBar_templateObject22","DrawerListItem","DEAppBar_templateObject23","selected","DEAppBar","isSearchOn","searchQuery","toolbarDivRef","React","createRef","maxSearchAutoCompleteItems","handleSearchClick","handleCloseClick","handleDownshiftStateChange","handleDownshiftChange","handleSearchSubmit","isActiveRoute","getToolbarSearchContent","getToolbarDefaultContent","getDrawer","handleAppBarResize","current","offsetHeight","isMobileDrawerOpen","handleMobileDrawerMenuClick","variant","flexGrow","downshift_esm","onStateChange","selectedItem","getInputProps","getItemProps","getMenuProps","isOpen","inputValue","highlightedIndex","onSubmit","autoFocus","disableUnderline","fullWidth","placeholder","searchAutoComplete","disableGutters","DEAppBar_StyledToolbar","getMenuButton","getAppTitle","getSearchButton","handleDesktopDrawerMenuClick","DEAppBar_StyledIconButton","textDecoration","getProductIconHeight","Zoom_default","open","onOpen","onClose","getDrawerContent","button","component","Home_default","AccountCircle_default","Description_default","Info_default","changes","performSearch","preventDefault","routerRef","history","routeName","func","withRouter","FooterToolbar","Footer_templateObject","OneThirdGrid","Footer_templateObject2","LeftThirdGrid","Footer_templateObject3","RightThirdGrid","Footer_templateObject4","FooterTypography","Footer_templateObject5","FooterA","Footer_templateObject6","AwesomeIconButtonGrid","Footer_templateObject7","AwesomeIconButton","Footer_templateObject8","AwesomeIcon","Icon","Footer_templateObject9","ThemeCheckbox","Checkbox","Footer_templateObject10","ThemeSvgIcon","Footer_templateObject11","Footer","loadCSS","querySelector","getCopyrightText","getSimulatedText","getNomicsTextDescription","getNomicsTextLink","checked","checkedIcon","handleThemeChange","httpLink","HttpLink","uri","wsLink","WebSocketLink","reconnect","split","_getMainDefinition","getMainDefinition","kind","operation","apolloClient","ApolloClient","cache","InMemoryCache","dataIdFromObject","initialize","anonymizeIp","ContentDiv","App_templateObject","enteringScreen","leavingScreen","ContentGrid","App_templateObject2","appbarheight","App","appBarHeight","isDesktopDrawerEnabled","setRouterRef","client","getTheme","styled_components_browser_esm","HashRouter","Components_DEAppBar_DEAppBar","onTransitionEnd","dispatchEvent","Event","Route","exact","path","Components_HomePage_HomePage","Components_BlocksPage_BlocksPage","Components_TransactionsPage_TransactionsPage","Components_AboutPage_AboutPage","Components_BlockDetailsPage_BlockDetailsPage","Components_TransactionDetailsPage_TransactionDetailsPage","Components_Footer_Footer","contentRect","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.0ac6d933.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-x-horizon.78a73653.png\";","module.exports = __webpack_public_path__ + \"static/media/dfinity-explorer-logo-large.6854aee0.png\";","module.exports = __webpack_public_path__ + \"static/media/apollo-logo-dark-mode.ff872a8a.png\";","module.exports = __webpack_public_path__ + \"static/media/apollo-logo-light-mode.d4f0ec1b.png\";","module.exports = __webpack_public_path__ + \"static/media/dfinity-logo-dark-mode.03f02872.png\";","module.exports = __webpack_public_path__ + \"static/media/dfinity-logo-light-mode.5a960076.png\";","module.exports = __webpack_public_path__ + \"static/media/github-octocat.c833384a.png\";","module.exports = __webpack_public_path__ + \"static/media/graphql-logo.8d2ae7fd.png\";","module.exports = __webpack_public_path__ + \"static/media/material-ui-logo.1d6a085f.png\";","module.exports = __webpack_public_path__ + \"static/media/nomics-logo-dark-mode.a32c7cc9.png\";","module.exports = __webpack_public_path__ + \"static/media/nomics-logo-light-mode.6f5390ee.png\";","module.exports = __webpack_public_path__ + \"static/media/postgresql-logo.42af44c0.png\";","module.exports = __webpack_public_path__ + \"static/media/postgresql-logo-text.f2ba6272.png\";","module.exports = __webpack_public_path__ + \"static/media/prisma-logo-dark-mode.590aa2e2.png\";","module.exports = __webpack_public_path__ + \"static/media/prisma-logo-light-mode.9d9ad809.png\";","module.exports = __webpack_public_path__ + \"static/media/react-logo-text.24432c06.png\";","module.exports = __webpack_public_path__ + \"static/media/styled-components-logo-dark-mode.3b3add6f.png\";","module.exports = __webpack_public_path__ + \"static/media/styled-components-logo-light-mode.33f922e4.png\";","module.exports = __webpack_public_path__ + \"static/media/dfinity-explorer-logo.52c54b15.png\";","/**\n * @file constants\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nconst Constants = Object.freeze({\n  // Development server URIs\n  //URI_SERVER_HTTP: 'http://localhost:4000',\n  //URI_SERVER_WEB_SOCKETS: 'ws://localhost:4000',\n  // Production server URIs\n  URI_SERVER_HTTP: 'https://dfinityexplorer-server.herokuapp.com/',\n  URI_SERVER_WEB_SOCKETS: 'wss://dfinityexplorer-server.herokuapp.com/',\n  URI_CDN_FONT_AWESOME:\n    'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css',\n  // Remove any fonts that aren't used!!!\n  URI_CDN_GOOGLE_FONTS:\n    'https://fonts.googleapis.com/css?family=Istok+Web:400|Muli:200,300,400,500',\n  URI_DFINITY_EXPLORER_TWITTER: 'https://twitter.com/dfinityexplorer',\n  URI_DFINITY_EXPLORER_GITHUB: 'https://github.com/dfinityexplorer/dfinityexplorer',\n  URI_ABOUT_APOLLO: 'https://www.apollographql.com/',\n  URI_ABOUT_NOMICS: 'https://p.nomics.com/cryptocurrency-bitcoin-api',\n  URI_ABOUT_DFINITY: 'https://dfinity.org/',\n  URI_ABOUT_GRAPHQL: 'https://graphql.org/',\n  URI_ABOUT_GRAPHQL_YOGA: 'https://github.com/prisma/graphql-yoga',\n  URI_ABOUT_MATERIAL_UI: 'https://material-ui.com/',\n  URI_ABOUT_POSTGRES: 'https://www.postgresql.org/',\n  URI_ABOUT_PRISMA: 'https://www.prisma.io/',\n  URI_ABOUT_REACT: 'https://reactjs.org/',\n  URI_ABOUT_STYLED_COMPONENTS: 'https://www.styled-components.com/',\n  URI_GITHUB_CONTRIBUTORS: 'https://github.com/orgs/dfinityexplorer/people',\n  URI_GITHUB_DFINITY_EXPLORER_PROJECT: 'https://github.com/dfinityexplorer/dfinityexplorer',\n  URI_GITHUB_DFINITY_EXPLORER_WIKI: 'https://github.com/dfinityexplorer/dfinityexplorer/wiki',\n  URI_GITHUB_DYLAN: 'https://github.com/dylancm4',\n  URI_GITHUB_MIT_LICENSE: 'https://github.com/dfinityexplorer/dfinityexplorer/blob/master/LICENSE',\n  URI_GITHUB_TODD: 'https://github.com/toddkitchens',\n  URI_NASA_EXPLORER: 'https://nssdc.gsfc.nasa.gov/multi/explorer.html',\n  URI_TWITTER_DFINITY_EXPLORER: 'https://twitter.com/dfinityexplorer',\n  // Remove colors that are not used!!!\n  COLOR_DFINITY_BLACK: 'rgb(41, 42, 46)', // from dfinity.org/press\n  COLOR_DFINITY_BLACK_LIGHTER: 'rgb(73, 75, 82)', //  COLOR_DFINITY_BLACK scaled lighter\n  COLOR_DFINITY_BLACK_DARKER: 'rgb(27, 28, 31)', // COLOR_DFINITY_BLACK scaled darker\n  COLOR_DFINITY_LIGHT_ORANGE: 'rgb(251, 176, 59)', // from dfinity.org style guide\n  COLOR_DFINITY_DARK_ORANGE: 'rgb(241, 90, 36)', // from dfinity.org style guide\n  COLOR_DFINITY_BLUE_400: '#29ABE2', // DFINITY logo blue\n  COLOR_DFINITY_BLUE_500: '#009DDD',\n  COLOR_DFINITY_BLUE_600: '#0090CF',\n  COLOR_DFINITY_BLUE_700: '#007DBC',\n  COLOR_DFINITY_BLUE_800: '#006DA8',\n  COLOR_DFINITY_BLUE_900: '#004E88',\n  COLOR_TEXT_LIGHT: '#FFFFFF', // This should be removed, replaced with COLOR_DARK_TEXT!!!\n  COLOR_DARK_TEXT: '#FFFFFF',\n  COLOR_DARK_TEXT_FADED: 'rgb(190, 191, 192)', // rgba(255, 255, 255, 0.7) on COLOR_DFINITY_BLACK, matches Material-UI Tab opacity\n  COLOR_TEXT_DARKER: 'rgb(148, 149, 151)', // rgba(255, 255, 255, 0.5) on COLOR_DFINITY_BLACK\n  COLOR_TEXT_DARKEST: 'rgb(106, 106, 109)', // rgba(255, 255, 255, 0.3) on COLOR_DFINITY_BLACK\n  COLOR_LIGHT_TEXT: '#000000',\n  COLOR_LIGHT_TEXT_FADED: 'rgb(77, 77, 77)', // rgba(0, 0, 0, 0.7) on white, matches Material-UI Tab opacity\n  COLOR_DARK_BODY_DARKER_MAC_OS: '#1B1B1B', // Calendar, Finder, iTunes, Messages\n  COLOR_DARK_BODY_LIGHTER_MAC_OS: '#262626', // Finder\n  COLOR_DARK_DRAWER_DIVIDER_MAC_OS: '#4B4B4B', // Calendar, Messages\n  COLOR_DARK_DRAWER_DIVIDER_YOUTUBE: '#333333',\n  COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX: '#808080',\n  COLOR_DARK_TEXT_MAC_OS: '#DCDCDC', // Calendar, iTunes\n  COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE: '#5F6368', // About, Account, Contacts, Docs, Drive, Gmail, Material\n  COLOR_LIGHT_CHART_GOOGLE: '#9E9E9E', // Analytics, Firebase\n  COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE: '#E3E3E3', // Docs, Sheets\n  COLOR_LIGHT_DRAWER_ICON_GOOGLE: '#5F6368', // Account, Docs, Drive, Calendar, Keep, Photos, Sheets\n  COLOR_LIGHT_DRAWER_TEXT_GOOGLE: '#3C4043', // Account, Docs, Calendar, News, Photos, Sheets\n  COLOR_TWITTER_BLUE: 'rgb(100, 164, 224)',\n  COLOR_TWITTER_GREEN: 'rgb(131, 175, 97)',\n  COLOR_TWITTER_ORANGE: 'rgb(244, 174, 78)',\n  COLOR_TWITTER_PURPLE: 'rgb(165, 144, 211)',\n  COLOR_GRAY_ON_WHITE: 'rgb(235, 235, 235)', // matches Material-UI IconButton hover\n  FONT_PRIMARY: '\\'Muli\\', sans-serif',\n  MATERIAL_FONT_SIZE_H1: '6rem', // 96px\n  MATERIAL_FONT_SIZE_H2: '3.75rem', // 60px\n  MATERIAL_FONT_SIZE_H3: '3rem', // 48px\n  MATERIAL_FONT_SIZE_H4: '2.125rem', // 34px\n  MATERIAL_FONT_SIZE_H5: '1.5rem', // 24px\n  MATERIAL_FONT_SIZE_H6: '1.25rem', // 20px\n  MATERIAL_FONT_SIZE_SUBTITLE_1: '1rem', // 16px\n  MATERIAL_FONT_SIZE_SUBTITLE_2: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_BODY_1: '1rem', // 16px\n  MATERIAL_FONT_SIZE_BODY_2: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_BUTTON: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_CAPTION: '0.75rem', // 12px\n  MATERIAL_FONT_SIZE_OVERLINE: '0.625rem', // 10px\n  MATERIAL_CIRCULAR_INDICATOR_SIZE: 48,\n  MATERIAL_UI_ICON_BUTTON_FONT_SIZE: 24,\n  FONT_SIZE_TABLE_XS: '0.6875rem', // 11px\n  BREAKPOINT_MIN_XS: 0,\n  BREAKPOINT_MAX_XS: 599,\n  BREAKPOINT_MIN_SM: 600,\n  BREAKPOINT_MAX_SM: 959,\n  BREAKPOINT_MIN_MD: 960,\n  BREAKPOINT_MAX_MD: 1279,\n  BREAKPOINT_MIN_LG: 1280,\n  BREAKPOINT_MAX_LG: 1919,\n  BREAKPOINT_MIN_XL: 1920,\n  BREAKPOINT_LG_MAX_WIDTH: 1140, // from Bootstrap\n  DRAWER_WIDTH: 256,\n  FOOTER_HEIGHT: 96,\n  ICON_SVG_PATH_TPS: 'M16 8V4l8 8-8 8v-4h-5V8h5zM9 8H7v8h2V8zM4.986 8H3v8h1.986V8zM1 8H0v8h1V8z',\n  ICON_SVG_PATH_VOLUME: 'M24 14.182h-6.545v7.636H24zm-8.727-12H8.727v19.636h6.546zM6.545 21.818H0v-12h6.545z',\n  ICON_SVG_PATH_MARKET_CAP: 'M24 3.621l-7.21 1.467 2.062 2.053-6.43 6.438-3.606-3.607L0 18.675l1.694 1.703 7.117-7.01 3.594 3.597 8.149-8.126 2.003 1.995z',\n  ICON_SVG_PATH_BLOCK: 'M12 0L1 6v12.131L12 24l11-5.869V6.065L12 0zm7.91 6.646l-7.905 4.218L4.133 6.57l7.862-4.289 7.915 4.365zM3 8.23l8 4.363V21.2l-8-4.268V8.23zM13 21.2v-8.6l8-4.269v8.6L13 21.2z',\n  ICON_SVG_PATH_PRICE: 'M19 16.166c0-4.289-4.465-5.483-7.887-7.091-2.079-1.079-1.816-3.658 1.162-3.832 1.652-.1 3.351.39 4.886.929l.724-3.295c-1.814-.551-3.437-.803-4.885-.841V0h-2v2.134c-3.89.535-5.968 2.975-5.968 5.7 0 4.876 5.693 5.62 7.556 6.487 2.54 1.136 2.07 3.5-.229 4.021-1.993.451-4.538-.337-6.45-1.079L5 20.551c1.787.923 3.931 1.417 6 1.453V24h2v-2.105c3.313-.464 6.005-2.293 6-5.729z',\n  ICON_SVG_PATH_BLOCK_TIME: 'M13 12l-.688-4h-.609L11 12a1.99 1.99 0 0 0-1 1.723 2 2 0 0 0 4 0A1.99 1.99 0 0 0 13 12zm-1-8C6.478 4 2 8.477 2 14s4.478 10 10 10 10-4.477 10-10S17.522 4 12 4zm0 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8zM10 2.181V0h4v2.181c-1.438-.243-2.592-.238-4 0zm9.179 2.226L20.586 3 22 4.414l-1.321 1.321a12.134 12.134 0 0 0-1.5-1.328z',\n  ICON_SVG_PATH_THEME_LIGHT: 'M.307 13.306a11.99 11.99 0 0 0 4.489 8.072 11.999 11.999 0 0 0 11.637 1.883 12.038 12.038 0 0 0 5.316-3.839 12.04 12.04 0 0 0 1.895-3.402.67.67 0 0 0-1.018-.775 9.122 9.122 0 0 1-2.15 1.124 9.114 9.114 0 0 1-8.842-1.43 9.11 9.11 0 0 1-3.412-6.136 9.11 9.11 0 0 1 1.926-6.751c.245-.308.52-.61.818-.9a.67.67 0 0 0-.572-1.144A12.044 12.044 0 0 0 2.84 4.425a11.987 11.987 0 0 0-2.533 8.88zm3.584-8.047a10.7 10.7 0 0 1 4.723-3.41l.027-.01a10.433 10.433 0 0 0-1.752 7.118 10.444 10.444 0 0 0 3.912 7.033 10.448 10.448 0 0 0 10.135 1.64c.196-.072.39-.15.583-.232A10.697 10.697 0 0 1 15.975 22 10.665 10.665 0 0 1 5.63 20.327a10.656 10.656 0 0 1-3.99-7.174A10.653 10.653 0 0 1 3.89 5.259z',\n  ICON_SVG_PATH_THEME_DARK: 'M.307 13.306a11.99 11.99 0 0 0 4.489 8.072 11.999 11.999 0 0 0 11.637 1.883 12.038 12.038 0 0 0 5.316-3.839 12.04 12.04 0 0 0 1.895-3.402.67.67 0 0 0-1.018-.775 9.122 9.122 0 0 1-2.15 1.124 9.114 9.114 0 0 1-8.842-1.43 9.11 9.11 0 0 1-3.412-6.136 9.11 9.11 0 0 1 1.926-6.751c.245-.308.52-.61.818-.9a.67.67 0 0 0-.572-1.144A12.044 12.044 0 0 0 2.84 4.425a11.987 11.987 0 0 0-2.533 8.88z',\n  ICON_SVG_PATH_BITCOIN: 'M21.018 9.648c.377-2.521-1.543-3.877-4.168-4.781l.852-3.416-2.08-.519-.829 3.326a86.982 86.982 0 0 0-1.666-.392l.835-3.348L11.884 0l-.852 3.415a69.57 69.57 0 0 1-1.328-.312l.002-.01-2.867-.717-.554 2.221s1.543.354 1.51.376c.843.21.995.767.97 1.21l-.97 3.89c.058.016.133.037.216.07l-.22-.054-1.36 5.451c-.103.256-.364.64-.953.494.02.03-1.511-.377-1.511-.377l-1.033 2.38 2.706.675c.504.126.997.258 1.483.382l-.86 3.455 2.076.519.853-3.419c.567.154 1.118.296 1.657.43l-.85 3.403 2.08.518.86-3.449c3.546.671 6.212.4 7.335-2.807.904-2.582-.045-4.071-1.91-5.042 1.358-.314 2.381-1.207 2.654-3.054zm-4.75 6.663c-.643 2.582-4.991 1.186-6.4.836l1.141-4.578c1.41.352 5.93 1.049 5.258 3.742zm.642-6.7c-.586 2.349-4.205 1.156-5.378.863l1.035-4.152c1.174.293 4.954.84 4.343 3.29z',\n  ABOUT_PAGE_MARGIN_XS: 8,\n  ABOUT_PAGE_MARGIN_SM: 48,\n  ABOUT_PAGE_MARGIN_MD: 64,\n  ABOUT_PAGE_MARGIN_LG: 128,\n  HOME_PAGE_MARGIN_XS: 8,\n  HOME_PAGE_MARGIN_SM_AND_UP: 32,\n  // Care must be taken if these table heights are changed, to avoid a glitch that occurs with\n  // certain heights where the row slide in has a 1px stutter following the animation.\n  TABLE_ROW_HEIGHT_XS: 38,\n  TABLE_ROW_HEIGHT_SM_AND_UP: 48,\n  ABOUT_PAGE_PROJECT_ICONS_HEIGHT: 55,\n  COINBASE_CHECKOUT_ID: '0d82d9e4-06c8-44b5-8f81-ef296be643e6',\n  GOOGLE_ANALYTICS_TRACKING_ID: 'UA-138212575-1'\n});\n\nexport default Constants;\n","/**\n * @file globalStyle\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport { createGlobalStyle } from 'styled-components';\nimport Constants from '../constants';\n\n/**\n * StyledComponent that handles global styles.\n */\nexport const GlobalStyle = createGlobalStyle`\n   body {\n    margin: 0;\n    padding: 0;\n    background: ${props => props.theme.colorBodyBackground};\n   }\n`;\n\n/**\n * The styled-components ThemeProvider light theme.\n */\nexport const themeLight = {\n  // Should use constants for all!!!\n  isDark: false,\n  colorAboutBackgroundPrimary: '#FFFFFF',\n  colorAboutBackgroundSecondary: '#F8F9FA', // Google Analytics (verified), Wikipedia (verified)\n  //!!!colorAboutBackgroundSecondary: '#FAFAFA', // YouTube (verified), Google Translate (verified), DFINITY\n  colorAboutHeaderText: '#FFFFFF',\n  colorAboutTwitterBackground: '#FFFFFF',\n  colorAppBarBackground: '#FFFFFF',\n  colorAppBarTextButton: Constants.COLOR_LIGHT_TEXT_FADED, // (#4D4D4D)\n  colorAppBarDfinityText: '#000000', // consider matching to colorBodyText!!!\n  colorAppBarExplorerText: Constants.COLOR_DFINITY_BLUE_700,\n  colorBodyBackground: '#F8F9FA', // Wikipedia (verified)\n  colorBodyButtonBackground: Constants.COLOR_DFINITY_BLUE_700,\n  colorBodyButtonText: Constants.COLOR_TEXT_LIGHT,\n  colorBodyButtonHoverBackground: Constants.COLOR_DFINITY_BLUE_500,\n  colorBodyButtonHoverText: Constants.COLOR_TEXT_LIGHT,\n  colorBodyText: '#202124', // Google text (verified)\n  colorBodyTextDim: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorBodyTextLink: Constants.COLOR_DFINITY_BLUE_700,\n  colorDashCardBackground: '#FFFFFF',\n  // Remove extraneous colorDashCardIcon settings once finalized!!!\n  //!!!colorDashCardIcon: [Constants.COLOR_DFINITY_BLUE_700, '#722B8D', '#C40059', '#F07200'],\n  //!!!colorDashCardIcon: ['rgba(0, 125, 188, 1)', 'rgba(114, 43, 141, 0.8)', 'rgba(196, 0, 89, 0.8)', 'rgba(240, 114, 0, 0.8)'],\n  //!!!colorDashCardIcon: [Constants.COLOR_DFINITY_BLUE_700, '#843196', '#DA005E', '#F68200'],\n  colorDashCardIcon: [Constants.COLOR_DFINITY_BLUE_700, '#9440A6', '#DA005E', '#F79308'], // Ori's purple and orange\n  // Actual DFINITY symbol colors.\n  //!!!colorDashCardIcon: ['rgb(41, 171, 226)', 'rgb(99, 38, 132)', 'rgb(237, 30, 121)', 'rgb(251, 176, 59)'],\n  colorDashCardIconOpacity: 1.0,\n  colorDrawerBackground: '#FFFFFF',\n  colorDrawerDivider: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorDrawerIcon: Constants.COLOR_LIGHT_DRAWER_ICON_GOOGLE,\n  colorDrawerIconTextSelected: Constants.COLOR_DFINITY_BLUE_700,\n  colorDrawerText: Constants.COLOR_LIGHT_DRAWER_TEXT_GOOGLE,\n  colorChartBackground: '#FFFFFF',\n  colorChartTooltipBackground: 'rgba(255, 255, 255, 0.96)',\n  colorChartAxes: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorChartGrid: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorChartText: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorChartLine: Constants.COLOR_DFINITY_BLUE_700,\n  colorChartActiveDotStroke: '#FFFFFF',\n  colorIconButtonHover: '#000000',\n  colorTableBackgroundPrimary: '#FFFFFF',\n  colorTableRowBorder: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorTableTextDim: '#909090', // YouTube, footer text dim (verified)\n  colorFooterBackground: '#F5F5F5',\n  colorFooterTextIcon: '#909090', // YouTube (verified)\n  colorSearchText: '#202124', // Google text (verified)\n  colorSearchIcon: '#9E9E9E', //  Material Design icon(verified)\n  opacityActionDisabled: 0.26, // Material-UI createPalette.js theme.palette.action.disabled light theme\n  opacityActionHover: 0.08 // Material-UI createPalette.js theme.palette.action.hoverOpacity light theme\n}\n\n/**\n * The styled-components ThemeProvider dark theme.\n */\nexport const themeDark = {\n  isDark: true,\n  colorAboutBackgroundPrimary: Constants.COLOR_DARK_BODY_DARKER_MAC_OS,\n  colorAboutBackgroundSecondary: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorAboutHeaderText: '#FFFFFF',\n  colorAboutTwitterBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorAppBarBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorAppBarTextButton: Constants.COLOR_DARK_TEXT_FADED,\n  colorAppBarDfinityText: Constants.COLOR_DARK_TEXT,\n  colorAppBarExplorerText: Constants.COLOR_DFINITY_LIGHT_ORANGE,\n  colorBodyBackground: Constants.COLOR_DARK_BODY_DARKER_MAC_OS,\n  colorBodyButtonBackground: Constants.COLOR_DFINITY_BLUE_700,\n  colorBodyButtonText: Constants.COLOR_DARK_TEXT_MAC_OS,\n  colorBodyButtonHoverBackground: Constants.COLOR_DFINITY_BLUE_500,\n  colorBodyButtonHoverText: Constants.COLOR_TEXT_LIGHT,\n  colorBodyText: Constants.COLOR_DARK_TEXT_MAC_OS,\n  colorBodyTextDim: Constants.COLOR_DARK_TEXT_MAC_OS,\n  colorBodyTextLink: Constants.COLOR_DFINITY_BLUE_600,\n  colorDashCardBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorDashCardIcon: ['#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF'],\n  colorDashCardIconOpacity: 0.5,\n  colorDrawerBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorDrawerDivider: Constants.COLOR_DARK_DRAWER_DIVIDER_YOUTUBE,\n  colorDrawerIcon: Constants.COLOR_DARK_TEXT_FADED,\n  colorDrawerIconTextSelected: '#FFFFFF',\n  colorDrawerText: Constants.COLOR_DARK_TEXT_FADED,\n  colorChartBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorChartTooltipBackground: 'rgba(38, 38, 38, 0.96)',\n  colorChartAxes: Constants.COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX,\n  colorChartGrid: Constants.COLOR_DARK_DRAWER_DIVIDER_MAC_OS,\n  colorChartText: Constants.COLOR_DARK_TEXT_FADED,\n  colorChartLine: Constants.COLOR_DFINITY_BLUE_600,\n  colorChartActiveDotStroke: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorIconButtonHover: Constants.COLOR_DARK_TEXT,\n  colorTableBackgroundPrimary: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorTableRowBorder: Constants.COLOR_DARK_DRAWER_DIVIDER_YOUTUBE,\n  colorTableTextDim: '#717171', // YouTube (Dark), footer text dim (verified)\n  colorFooterBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorFooterTextIcon: Constants.COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX,\n  colorSearchText: '#202124', // Google text (verified)\n  colorSearchIcon: '#9E9E9E', //  Material Design icon (verified)\n  opacityActionDisabled: 0.3, // Material-UI createPalette.js theme.palette.action.disabled dark theme\n  opacityActionHover: 0.1 // Material-UI createPalette.js theme.palette.action.hoverOpacity dark theme\n}\n","/**\n * @file ResponsiveComponent\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport { Component } from 'react';\nimport { throttle } from 'throttle-debounce';\n\n/**\n * Base class component which re-renders when the window is resized.\n */\nclass ResponsiveComponent extends Component {\n  /**\n   * Create a ResponsiveComponent object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n\n    // Throttle the calls to handleWindowResize() so that we're not constantly re-rendering.\n    this.throttledHandleWindowResize = throttle(200, true, this.handleWindowResize);\n  }\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree).\n   * @public\n   */\n  componentDidMount() {\n    window.addEventListener('resize', this.throttledHandleWindowResize);\n  }\n\n  /**\n   * Invoked by React immediately before a component is unmounted and destroyed.\n   * @public\n   */\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.throttledHandleWindowResize);\n  }\n\n  /**\n   * Force the component to re-render when the window is resized.\n   * @private\n   */\n  handleWindowResize() {\n    this.forceUpdate();\n  }\n};\n\nexport default ResponsiveComponent;\n","/**\n * @file TrackablePage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport ReactGA from 'react-ga';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent';\n\n/**\n * Base class component for a page which is trackable by react-ga.\n */\nclass TrackablePage extends ResponsiveComponent {\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    // Scroll to the top on every page change.\n    window.scrollTo(0, 0);\n\n    const pathName = this.props.location.pathname + this.props.location.search;\n    this.trackPage(pathName);\n}\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @param {Object} prevProps The previous props.\n   * @public\n   */\n  componentDidUpdate(prevProps) {\n    const currentPathName = prevProps.location.pathname + prevProps.location.search;\n    const nextPathName = this.props.location.pathname + this.props.location.search;\n\n    if (currentPathName !== nextPathName)\n      this.trackPage(nextPathName);\n  }\n\n  /**\n   * Track the page using react-ga.\n   * @param {String} pathName The path name of the page.\n   * @private\n   */\n  trackPage(pathName) {\n    // Track production build, but not development build.\n    if (process.env.NODE_ENV === 'production') {\n      ReactGA.set({ page: pathName });\n      ReactGA.pageview(pathName);\n    }\n  }\n}\n\nexport default TrackablePage;\n","/**\n * @file breakpoint\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport Constants from '../constants';\n\nexport const Breakpoints = Object.freeze({\n  XS: 0,\n  SM: 1,\n  MD: 2,\n  LG: 3,\n  XL: 4\n});\n\n/**\n * Return the current breakpoint.\n * @param {Boolean} isDesktopDrawerOpen True if the desktop drawer (large screens) is open and\n *  caller wants the breakpoint to be calculated based on the non-drawer width of the window.\n * @return {Number} The current breakpoint.\n * @private\n */\nexport function getBreakpoint(isDesktopDrawerOpen) {\n  // Look at calls to this function and see if passing in isDesktopDrawerOpen is appropriate!!!\n  const drawerWidth =  isDesktopDrawerOpen ? Constants.DRAWER_WIDTH : 0;\n  if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_XS + drawerWidth) + 'px)').matches)\n    return Breakpoints.XS;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_SM + drawerWidth) + 'px)').matches)\n    return Breakpoints.SM;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_MD  + drawerWidth) + 'px)').matches)\n    return Breakpoints.MD;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_LG + drawerWidth) + 'px)').matches)\n    return Breakpoints.LG;\n  else\n    return Breakpoints.XL;\n}\n\n/**\n * Return true if the current breakpoint is greater than or equal to the specified breakpoint.\n * @param {Number} breakpoint The breakpoint to compare to the current breakpoint.\n * @return {Boolean} True if the current breakpoint is greater than or equal to the specified\n *  breakpoint.\n * @private\n */\nexport function isBreakpointGreaterOrEqualTo(breakpoint) {\n  switch (breakpoint) {\n    case Breakpoints.XS:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_XS + 'px)').matches;\n    case Breakpoints.SM:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_SM + 'px)').matches;\n    case Breakpoints.MD:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_MD + 'px)').matches;\n    case Breakpoints.LG:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_LG + 'px)').matches;\n    case Breakpoints.XL:\n    default:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_XL + 'px)').matches;\n  }\n}\n\n/**\n * Return true if the current breakpoint is less than or equal to the specified breakpoint.\n * @param {Number} breakpoint The breakpoint to compare to the current breakpoint.\n * @return {Boolean} True if the current breakpoint is less than or equal to the specified\n *  breakpoint.\n * @private\n */\nexport function isBreakpointLessOrEqualTo(breakpoint) {\n  switch (breakpoint) {\n    case Breakpoints.XS:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_XS + 'px)').matches;\n    case Breakpoints.SM:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_SM + 'px)').matches;\n    case Breakpoints.MD:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_MD + 'px)').matches;\n    case Breakpoints.LG:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_LG + 'px)').matches;\n    case Breakpoints.XL:\n    default:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_XL + 'px)').matches;\n  }\n}\n","/**\n * @file DynamicTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  Fade,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { Transition } from 'react-spring/renderprops';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorTableBackgroundPrimary};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 4px;\n    padding-left: 11px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n  }\n`;\n\nconst StyledTable = styled(Table)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    /* Needed for footer border-top to work. */\n    border-collapse: separate;\n  }\n`;\n\nconst TableRowHeader = styled(TableRow)`\n  && {\n    height: ${Constants.TABLE_ROW_HEIGHT_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: ${Constants.TABLE_ROW_HEIGHT_XS + 'px'};\n      `\n    }\n  }\n`;\n\n// The height for the table body rows is set dynamically, so that we can perform expand/collapse\n// animations.\nconst TableRowBody = styled(TableRow)`\n  && {\n    height: auto;\n  }\n`;\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    border-color: ${props => props.theme.colorTableRowBorder};\n    color: ${props => props.theme.colorBodyText};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    white-space: nowrap;\n    /* Reducing the font size for narrow page widths seems sufficient for resizing the table when\n       Grid spacing is 0 and padding='checkbox'. Other settings, such as 'overflow: hidden' and\n       'max-width: 0px', were also helpful in improving the table at narrow page widths, but do\n       not seem to be necessary with the current settings. Another useful setting is\n       'text-overflow: ellipsis', though we reduce the font size rather than using ellipsis. */\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.FONT_SIZE_TABLE_XS};\n      `\n    }\n  }\n`;\n\nconst TableCellHeader = styled(StyledTableCell)`\n  && {\n    border-bottom-style: solid;\n    border-bottom-width: 2px;\n    color: ${props => props.theme.colorBodyTextDim};\n    font-weight: 500;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst TableRowFooter = styled(TableRow)`\n  && {\n    height: 20px;\n  }\n`;\n\nconst TableCellFooter = styled(StyledTableCell)`\n  && {\n    border-top-style: solid;\n    border-top-width: 1px;\n    color: ${props => props.theme.colorTableTextDim};\n    font-size: 9px;\n  }\n`;\n\n/**\n * Class that implements a table component where new rows either slide in or fade in.\n */\nclass DynamicTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * An array that specifies the column widths of the table.\n     */    \n    columnWidths: PropTypes.array.isRequired,\n    /**\n     * Return an array of objects that describe the body rows, where each object contains:\n     *  mapKey: A unique key that identifies the row.\n     *  cells: An array of objects that describe the cells of the row, where each object contains:\n     *    value: String containing the value of the cell.\n     *    isNumeric: True if the cell contains a numeric value, false otherwise.\n     *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n     *      for no link.\n     * @return {Array} An array of objects that describe the body rows.\n     */\n    getBodyRows: PropTypes.func.isRequired,\n    /**\n     * An array of objects that describe the cells of the footer row, where each object contains:\n     *  value: String containing the value of the cell.\n     *  isNumeric: True if the cell contains a numeric value, false otherwise.\n     *  link: Optional string which provides a link for the cell (to= prop of Link). Set to null for\n     *    no link.\n     */\n    footerRow: PropTypes.array.isRequired,\n    /**\n     * An array of objects that describe the cells of the header row, where each object contains:\n     *  value: String containing the value of the cell.\n     *  isNumeric: True if the cell contains a numeric value, false otherwise.\n     *  link: Optional string which provides a link for the cell (to= prop of Link). Set to null for\n     *    no link.\n     */\n    headerRow: PropTypes.array.isRequired,\n    /**\n     * Indicates whether new rows should slide in rather than fade in, expanding when they are\n     * created and collapsing when they are destroyed.\n     */\n    slide: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * The title of the table.\n     */\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    // BUG: On Chrome, screen scrolls when collapsing row is on screen but expanding row is off screen!!!\n    const { breakpoint, columnWidths, footerRow, headerRow, title } = this.props;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle>{title}</TypographyTitle>\n        <StyledTable>\n          <colgroup>\n            {columnWidths.map((width, index) => {\n              // The column width settings seem to be ignored in many cases, depending on cell\n              // length. That is, when cell lengths are long, the widths are ignored.\n              return (\n                <col key={index} width={width} />\n              );\n            })}\n          </colgroup>\n          <TableHead>\n            <TableRowHeader breakpoint={breakpoint}>\n              {headerRow.map((cell, index) => {\n                return (\n                  // Using index as the key is fine here and for cells in other rows, since we never\n                  // add, remove, reorder, or filter items in the cell arrays.\n                  <TableCellHeader\n                    breakpoint={breakpoint}\n                    key={index}\n                    align={cell.isNumeric ? 'right' : 'inherit'}\n                    padding='checkbox'\n                  >\n                  {cell.link != null ?\n                    <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                    cell.value\n                  }\n                  </TableCellHeader>\n                );\n              })}\n            </TableRowHeader>\n          </TableHead>\n          <TableBody>\n            {this.getBodyRowElements()}\n          </TableBody>\n          <TableFooter>\n            <TableRowFooter>\n              {footerRow.map((cell, index) => {\n                return (\n                  <TableCellFooter\n                    breakpoint={breakpoint}\n                    key={index}\n                    align={cell.isNumeric ? 'right' : 'inherit'}\n                    padding='checkbox'\n                  >\n                  {cell.link != null ?\n                    <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                    cell.value\n                  }\n                  </TableCellFooter>\n                );\n              })}\n            </TableRowFooter>\n          </TableFooter>\n        </StyledTable>\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the elements for all of the body rows.\n   * @return {Object} The elements for all of the body rows.\n   * @private\n   */\n  getBodyRowElements() {\n    const { breakpoint, getBodyRows, maxRows, slide } = this.props;\n    const rowHeight = breakpoint === Breakpoints.XS ?\n      Constants.TABLE_ROW_HEIGHT_XS : Constants.TABLE_ROW_HEIGHT_SM_AND_UP;\n    let rows = getBodyRows().slice(0, maxRows);\n    if (slide) {\n      // Use a Transition element to expand (and fade in) entering rows and collapse (and fade out)\n      // leaving rows.\n      // BUG: On windows resize to/from XS, row heights are not changed on existing rows!!!\n      return (\n        <Transition\n          items={rows}\n          keys={bodyRow => bodyRow.mapKey}\n          from={{ height: 0, opacity: 0 }}\n          enter={{ height: rowHeight, opacity: 1 }}\n          leave={{ height: 0, opacity: 0 }}\n        >\n          {/* Function signature: (item, state, index) => props => ReactNode */}\n          {(bodyRow, state, index) => style => this.getBodyRowElement(bodyRow, state, index, style)}\n        </Transition>\n      );\n    }\n    else {\n      return rows.map((bodyRow, index) => {\n        // When not expanding/collapsing rows, use a Fade element to fade in and fade out.\n        return (\n          <Fade\n            key={bodyRow.mapKey}\n            in={true}\n            timeout={500}\n          >\n            {this.getBodyRowElement(bodyRow, 'update', index, { height: rowHeight })}\n          </Fade>\n        );\n      });  \n    }\n  }\n\n  /**\n   * Return the element for the specified body row.\n   * @param {Object} bodyRow Object that describes the body row.\n   * @param {String} state The item's transition state: enter, leave, or update.\n   * @param {Number} rowIndex The item's row index. \n   * @param {Object} style The style to apply to the table cell Grid, specifying the height.\n   * @return {Object} The element for the specified body row.\n   * @private\n   */\n  getBodyRowElement(bodyRow, state, rowIndex, style) {\n    const { breakpoint } = this.props;\n    return (\n      <TableRowBody>\n        {bodyRow.cells.map((cell, index) => {\n          return (\n            <StyledTableCell\n              breakpoint={breakpoint}\n              key={index}\n              padding='checkbox'\n              // Hide the border on rows that are leaving, so that table height remains consistent.\n              style={state === 'leave' ? {borderBottomStyle: 'hidden'} : null}\n            >\n              <Grid container\n                direction='row'\n                justify={cell.isNumeric ? 'flex-end' : 'flex-start'}\n                alignItems='center'\n                style={style}\n              >\n                {cell.link != null ?\n                  <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                  cell.value\n                }\n              </Grid>\n            </StyledTableCell>\n          );\n        })}\n      </TableRowBody>\n    );\n  }\n}\n\nexport default DynamicTable;\n","/**\n * @file queryBlocks\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get blocks.\n * @return {Array} The array of Block objects.\n */\nconst queryBlocks = gql`\n  query Blocks($first: Int) {\n    blocks(first: $first, orderBy: height_DESC) {\n      id\n      height\n      timestamp\n      numTransactions\n    }\n  }\n`;\n\nexport default queryBlocks;\n","/**\n * @file subscriptionBlock\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL subscription to receive a new block.\n * @return {Object} The new Block object.\n */\nconst subscriptionBlock = gql`\n  subscription {\n    block {\n      node {\n        id\n        height\n        timestamp\n        numTransactions\n      }\n    }\n  }\n`;\n\nexport default subscriptionBlock;\n","/**\n * @file BlocksSlideTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport queryBlocks from '../../graphql/queryBlocks';\nimport subscriptionBlock from '../../graphql/subscriptionBlock';\n\n/**\n * This component displays a table of Block objects with data retrieved via GraphQL.\n */\nclass BlocksSlideTableWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Callback fired when a new block is added.\n     */\n    handleAddNewBlock: PropTypes.func,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a BlocksSlideTableWithData object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.firstBlockAdded = false;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleQueryCompleted = this.handleQueryCompleted.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {breakpoint, maxRows} = this.props;\n    return (\n      <Query\n        query={queryBlocks}\n        variables={{ first: maxRows }}\n        onCompleted={this.handleQueryCompleted}\n      >\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n          if (loading)\n            return (\n              <BlocksSlideTable\n                blocks={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                loading\n              />\n            );\n          else if (error)\n            return (\n              <BlocksSlideTable\n                blocks={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                error\n              />\n            );\n          else {\n            return (\n              <BlocksSlideTable\n                blocks={data.blocks}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Callback fired when the Query is completed.\n   * @param {Object} data The query data.\n   * @private\n   */\n  handleQueryCompleted(data) {\n    if (!this.firstBlockAdded && data.blocks.length) {\n      this.firstBlockAdded = true;\n\n      // Add a new block to the parent.\n      if (this.props.handleAddNewBlock)\n        this.props.handleAddNewBlock(data.blocks[0]);\n    }\n  }\n\n  /**\n   * Subscribe to receive new objects of the body of the table using subscribeToMore and update the\n   * query's store by merging the subscription data with the previous data.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionBlock,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n\n        // Add a new block to the parent.\n        if (this.props.handleAddNewBlock)\n          this.props.handleAddNewBlock(subscriptionData.data.block.node);\n\n        // Add the new block to the front of the blocks[] array, keeping at most this.props.maxRows\n        // blocks.\n        return {\n          blocks: [\n            subscriptionData.data.block.node,\n            ...prev.blocks\n          ].slice(0, this.props.maxRows)\n        };\n      }\n    });\n\n  }\n}\n\n/**\n * This component displays a table of Block objects where new blocks slide in.\n */\nclass BlocksSlideTable extends Component {\n  static propTypes = {\n    /**\n     * Array of block objects.\n     */\n    blocks: PropTypes.array.isRequired,\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the body of the table.\n     */\n    subscribeToNewObjects: PropTypes.func\n  };\n  \n  /**\n   * Create a BlocksSlideTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the body of the table.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, error, loading, maxRows } = this.props;\n    return (\n      <DynamicTable\n        breakpoint={breakpoint}\n        title='Blocks'\n        columnWidths={['30%', '40%', '30%']}\n        maxRows={maxRows}\n        headerRow={[\n          {value: 'Height', isNumeric: false},\n          {value: 'Timestamp', isNumeric: false},\n          {value: 'Transactions', isNumeric: true}\n        ]}\n        getBodyRows={this.getBodyRows}\n        footerRow={[\n          {value: null, isNumeric: false},\n          {value: null, isNumeric: false},\n          {value: '(simulated data)', isNumeric: true}\n        ]}\n        slide={!loading && !error}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { blocks, loading, error } = this.props;\n    if (loading)\n      return [{mapKey: 'LOADING', cells: [{value: 'Loading...', isNumeric: false, link: null}]}];\n    else if (error)\n      return [{mapKey: 'ERROR', cells: [{value: 'Network error', isNumeric: false, link: null}]}];\n    else {\n      let bodyRows = blocks.map((block) => {\n        const date = new Date(block.timestamp);\n        return {\n          mapKey: block.height,\n          cells: [\n            {\n              value: block.height.toLocaleString(),\n              isNumeric: false,\n              link: `/block/${block.height}`\n            },\n            {value: date.toLocaleString(), isNumeric: false, link: null},\n            {value: block.numTransactions.toLocaleString(), isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n  }\n}\n\nexport default BlocksSlideTableWithData;\n","/**\n * @file queryTransactions\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get transactions.\n * @return {Array} The array of Transaction objects.\n */\nconst queryTransactions = gql`\n  query Transactions($first: Int) {\n    transactions(first: $first, orderBy: createdAt_DESC) {\n      id\n      hash\n      amount\n    }\n  }\n`;\n\nexport default queryTransactions;\n","/**\n * @file subscriptionTransaction\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL subscription to receive a new transaction.\n * @return {Object} The new Transaction object.\n */\nconst subscriptionTransaction = gql`\n  subscription {\n    transaction {\n      node {\n        id\n        hash\n        amount\n      }\n    }\n  }\n`;\n\nexport default subscriptionTransaction;\n","/**\n * @file getHashString\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\n/**\n * Return a string containing the hash which has been modified for display.\n * @param {String} hash The hash to modify for display.\n * @param {Number} maxLength The maximum length of the hash string.\n * @return {Array} A string containing the hash which has been modified for display.\n * @protected\n */\nexport default function getHashString(hash, maxLength) {\n  if (maxLength === undefined)\n    maxLength = 22;\n  hash = \"0x\" + hash;\n  if (maxLength !== 0 && hash.length > maxLength) {\n    const first = hash.substring(0, maxLength - 4);\n    const last = hash.substr(hash.length - 4);\n    return first + \"...\" + last;\n  }\n  else\n    return hash;\n}\n\n","/**\n * @file TransactionsFadeTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport queryTransactions from '../../graphql/queryTransactions';\nimport subscriptionTransaction from '../../graphql/subscriptionTransaction';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a table of Transaction objects with data retrieved via GraphQL.\n */\nclass TransactionsFadeTableWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {breakpoint, maxRows} = this.props;\n    return (\n      <Query query={queryTransactions} variables={{ first: maxRows }}>\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n          if (loading)\n            return (\n              <TransactionsFadeTable\n                transactions={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                loading\n              />\n            );\n          else if (error)\n            return (\n              <TransactionsFadeTable\n                transactions={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                error\n              />\n            );\n          else {\n            return (\n              <TransactionsFadeTable\n                transactions={data.transactions}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new objects of the body of the table using subscribeToMore and update the\n   * query's store by merging the subscription data with the previous data.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionTransaction,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n\n        // Add the new transaction to the front of the transactions[] array, keeping at most\n        // this.props.maxRows transactions.\n        return {\n          transactions: [\n            subscriptionData.data.transaction.node,\n            ...prev.transactions\n          ].slice(0, this.props.maxRows)\n        };\n      }\n    });\n  }\n}\n\n/**\n * This component displays a table of Transaction objects where new transacations fade in.\n */\nclass TransactionsFadeTable extends Component { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the body of the table.\n     */\n    subscribeToNewObjects: PropTypes.func,\n    /**\n     * Array of transaction objects.\n     */\n    transactions: PropTypes.array.isRequired\n  };\n  \n  /**\n   * Create a TransactionsFadeTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the body of the table.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, maxRows } = this.props;\n    return (\n      <DynamicTable\n        breakpoint={breakpoint}\n        title='Transactions'\n        columnWidths={['60%', '40%']}\n        maxRows={maxRows}\n        headerRow={[\n          {value: 'Hash', isNumeric: false},\n          {value: 'Amount', isNumeric: true}\n        ]}\n        getBodyRows={this.getBodyRows}\n        footerRow={[\n          {value: null, isNumeric: false},\n          {value: '(simulated data)', isNumeric: true}\n        ]}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { transactions, loading, error } = this.props;\n    if (loading)\n      return [{mapKey: 'LOADING', cells: [{value: 'Loading...', isNumeric: false, link: null}]}];\n    else if (error)\n      return [{mapKey: 'ERROR', cells: [{value: 'Network error', isNumeric: false, link: null}]}];\n    else {\n      let bodyRows = transactions.map((transaction) => {\n        return {\n          mapKey: transaction.hash,\n          cells: [\n            {\n              value: getHashString(transaction.hash),\n              isNumeric: false,\n              link: `/tx/0x${transaction.hash}`\n            },\n            {value: transaction.amount.toFixed(8).toString() + ' DFN', isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n  }\n}\n\nexport default TransactionsFadeTableWithData;\n","/**\n * @file DashCard\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Paper,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport Constants from '../../constants';\n\nconst GridNoWrap = styled(Grid)`\n  && {\n    /* Setting min-width to 0px allows the Grid to narrow past the implied width of its children. */\n    min-width: 0px;\n  }\n`;\n\nconst SvgIconCard = styled(SvgIcon)`\n  && {\n    /* The combination of margin, padding, and font-size explicitly set the height of the card. */\n    margin: 30px;\n    font-size: 42px;\n    opacity: ${props => props.theme.colorDashCardIconOpacity};\n    color: ${props => props.theme.colorDashCardIcon[props.cardindex]};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-weight: 300;\n    font-size: 14px;\n  }\n`;\n\nconst TypographyValue = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-weight: 200;\n    font-size: 28px;\n  }\n`;\n\n/**\n * This component displays a dashboard card.\n */\nclass DashCard extends Component { \n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string,\n    /**\n     * The d attribute of the SvgIcon path.\n     */\n    svgIconPath: PropTypes.string.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the card using GraphQL.\n     */\n    subscribeToNewObjects: PropTypes.func,\n    /**\n     * The title string of the card.\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * The value string of the card.\n     */\n    value: PropTypes.string.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the card using GraphQL.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let {\n      cardIndex,\n      className,\n      svgIconPath,\n      title,\n      value\n    } = this.props;\n\n    return (\n      <Paper className={className} elevation={1}>\n        <Grid container direction='row' justify='flex-start' alignItems='center' wrap='nowrap'>\n          <Grid item>\n            <SvgIconCard cardindex={cardIndex}>\n              <path d={svgIconPath} />\n            </SvgIconCard>\n          </Grid>\n          <GridNoWrap container direction='column' justify='center' alignItems='flex-start'>\n            {/* The usage of Grid elements here is required to get Typography noWrap to work. */}\n            <Grid container direction='row' justify='flex-start' alignItems='center'>\n              <GridNoWrap item>\n                <TypographyTitle className={className} noWrap>\n                  {title}\n                </TypographyTitle>\n              </GridNoWrap>\n            </Grid>\n            <Grid container direction='row' justify='flex-start' alignItems='center'>\n              <GridNoWrap item>\n                <TypographyValue className={className} noWrap>\n                  {value}\n                </TypographyValue>\n              </GridNoWrap>\n            </Grid>\n          </GridNoWrap>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default DashCard;\n","/**\n * @file queryNetworkStats\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get the current NetworkStats object.\n * @return {Number} The current NetworkStats object.\n */\nconst queryNetworkStats = gql`\n  {\n    networkStats {\n      secondsPerBlock\n      transactionsPerSecond\n    }\n  }\n`;\n\nexport default queryNetworkStats;\n","/**\n * @file subscriptionNetworkStats\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL subscription to receive a NetworkStats updates.\n * @return {Object} The updated NetworkStats object.\n */\nconst subscriptionNetworkStats = gql`\n  subscription {\n    networkStats {\n      node {\n        secondsPerBlock\n        transactionsPerSecond\n      }\n    }\n  }\n`;\n\nexport default subscriptionNetworkStats;\n","/**\n * @file BlockTimeCard\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryNetworkStats from '../../graphql/queryNetworkStats';\nimport subscriptionNetworkStats from '../../graphql/subscriptionNetworkStats';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with seconds per block retrieved via GraphQL.\n */\nclass BlockTimeCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query query={queryNetworkStats}>\n      {({ loading, error, data, subscribeToMore }) => {\n        const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n        let secondsPerBlock;\n        if (loading)\n          secondsPerBlock = 'Loading...';\n        else if (error)\n          secondsPerBlock = 'Network error';\n        else\n          secondsPerBlock = data.networkStats.secondsPerBlock.toFixed(1) + ' s';\n        return (\n          <DashCard\n            className={className}\n            cardIndex={cardIndex}\n            title='Avg Block Time'\n            value={secondsPerBlock}\n            svgIconPath={Constants.ICON_SVG_PATH_BLOCK_TIME}\n            subscribeToNewObjects={subscribeToNewObjects}\n          />\n        );\n      }}\n    </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new NetworkStats objects using subscribeToMore, and update the query's\n   * store by replacing the previous NetworkStats Object with the new NetworkStats object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionNetworkStats,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {networkStats: subscriptionData.data.networkStats.node};\n      }\n    });\n  }\n}\n\nexport default BlockTimeCard;\n","/**\n * @file TransactionsCard\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryNetworkStats from '../../graphql/queryNetworkStats';\nimport subscriptionNetworkStats from '../../graphql/subscriptionNetworkStats';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with transactions per second retrieved via GraphQL.\n */\nclass TransactionsCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query query={queryNetworkStats}>\n      {({ loading, error, data, subscribeToMore }) => {\n        const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n        let transactionsPerSecond;\n        if (loading)\n          transactionsPerSecond = 'Loading...';\n        else if (error)\n          transactionsPerSecond = 'Network error';\n        else\n          transactionsPerSecond = data.networkStats.transactionsPerSecond.toFixed(1) + ' tps';\n        return (\n          <DashCard\n            className={className}\n            cardIndex={cardIndex}\n            title='Avg Transactions'\n            value={transactionsPerSecond}\n            svgIconPath={Constants.ICON_SVG_PATH_TPS}\n            subscribeToNewObjects={subscribeToNewObjects}\n          />\n        );\n      }}\n    </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new NetworkStats objects using subscribeToMore, and update the query's\n   * store by replacing the previous NetworkStats Object with the new NetworkStats object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionNetworkStats,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {networkStats: subscriptionData.data.networkStats.node};\n      }\n    });\n  }\n}\n\nexport default TransactionsCard;\n","/**\n * @file queryPrice\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get the the current price.\n * @return {Object} The current Price object.\n */\nconst queryPrice = gql`\n  {\n    price {\n      price\n    }\n  }\n`;\n\nexport default queryPrice;\n","/**\n * @file subscriptionPrice\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL subscription to receive price updates.\n * @return {Object} The updated Price object.\n */\nconst subscriptionPrice = gql`\n  subscription {\n    price {\n      node {\n        price\n      }\n    }\n  }\n`;\n\nexport default subscriptionPrice;\n","/**\n * @file PriceCard\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryPrice from '../../graphql/queryPrice';\nimport subscriptionPrice from '../../graphql/subscriptionPrice';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with price data retrieved via GraphQL.\n */\nclass PriceCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query query={queryPrice}>\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n          let price;\n          if (loading)\n            price = 'Loading...';\n          else if (error)\n            price = 'Network error';\n          else\n            price = '$' + data.price.price.toFixed(2);\n          return (\n            <DashCard\n              className={className}\n              cardIndex={cardIndex}\n              title='Price'\n              value={price}\n              svgIconPath={Constants.ICON_SVG_PATH_PRICE}\n              subscribeToNewObjects={subscribeToNewObjects}\n            />\n          );\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new Price objects using subscribeToMore, and update the query's store by\n   * replacing the previous Price Object with the new Price object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionPrice,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {price: subscriptionData.data.price.node};\n      }\n    });\n  }\n}\n\nexport default PriceCard;\n","/**\n * @file AreaChart\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Paper,\n  Typography\n} from '@material-ui/core';\nimport shadows from '@material-ui/core/styles/shadows';\nimport {\n  Area,\n  AreaChart as RechartsAreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorChartBackground};\n    padding-right: 16px;\n    padding-bottom: 16px;\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 8px;\n    padding-left: 11px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    }\n  }\n`;\n\nconst StyledAreaChart = styled(RechartsAreaChart)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n    font-weight: 400;\n  }\n`;\n\n/**\n * Base class that implements an area chart component.\n */\nclass AreaChart extends Component {\n  static propTypes = {\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { chartHeight, theme } = this.props;\n    const data = this.getData();\n    const tooltipElevation = 2;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle>{this.getTitle()}</TypographyTitle>\n        { data.length > 0 &&\n          <ResponsiveContainer width='100%' height={chartHeight}>\n            <StyledAreaChart\n              data={data}\n              margin={{ top: 0, right: 0, left: 4, bottom: 0 }}\n              // Setting width to 0 here is a workaround for a problem where ResponsiveContainer\n              // does not resize correctly from large to small.\n              // https://github.com/recharts/recharts/issues/172\n              style={{width: 0}}\n            >\n              <defs>\n                <linearGradient id='colorY' x1='0' y1='0' x2='0' y2='1'>\n                  <stop offset='5%' stopColor={theme.colorChartLine} stopOpacity={0.2}/>\n                  <stop offset='95%' stopColor={theme.colorChartLine} stopOpacity={0.1}/>\n                </linearGradient>\n              </defs>\n              <CartesianGrid\n                stroke={theme.colorChartGrid}\n                vertical={false}\n              />\n              <XAxis\n                dataKey={this.getDataKeyX()}\n                stroke={theme.colorChartAxes}\n                tick={{ fill: theme.colorChartText }}\n                tickFormatter={(tick) => this.getGetTickX(tick)}\n                tickMargin={8}\n                tickSize={6}\n              />\n              <YAxis\n                domain={[\n                  dataMin => this.getDomainMinY(dataMin),\n                  dataMax => this.getDomainMaxY(dataMax)\n                ]}\n                stroke={theme.colorChartAxes}\n                tick={{ fill: theme.colorChartText }}\n                tickFormatter={(tick) => this.getGetTickY(tick)}\n                tickLine={false}\n              />\n              <Tooltip\n                labelFormatter={(value) => this.getGetTooltipX(value)}\n                formatter={(value) => [this.getGetTooltipY(value)]}\n                contentStyle={{\n                  background: theme.colorChartTooltipBackground,\n                  border: null,\n                  borderRadius: 4,\n                  fontSize: Constants.MATERIAL_FONT_SIZE_BODY_2,\n                  boxShadow: shadows[tooltipElevation]\n                }}\n                itemStyle={{ color: theme.colorChartLine }}\n                labelStyle={{ color: theme.colorBodyText }}\n                cursor={{ stroke: theme.colorChartGrid }}\n                animationDuration={300}\n              />\n              <Area\n                type='monotone'\n                dataKey={this.getDataKeyY()}\n                stroke={theme.colorChartLine}\n                strokeWidth={2}\n                fillOpacity={1}\n                fill='url(#colorY)'\n                activeDot={{ stroke: theme.colorChartActiveDotStroke, r: 5 }}\n                animationDuration={1000}\n              />\n            </StyledAreaChart>\n          </ResponsiveContainer>\n        }\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    throw new Error('AreaChart.getTitle() not implemented.');\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    throw new Error('AreaChart.getData() not implemented.');\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    throw new Error('AreaChart.getDataKeyX() not implemented.');\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    throw new Error('AreaChart.getDataKeyY() not implemented.');\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    throw new Error('AreaChart.getDomainMinY() not implemented.');\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    throw new Error('AreaChart.getDomainMaxY() not implemented.');\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    throw new Error('AreaChart.getGetTickX() not implemented.');\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    throw new Error('AreaChart.getGetTickY() not implemented.');\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    throw new Error('AreaChart.getGetTooltipX() not implemented.');\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    throw new Error('AreaChart.getGetTooltipY() not implemented.');\n  }\n}\n\nexport default AreaChart;\n","/**\n * @file queryDailyNetworkStatses\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get daily DFINITY network stats for the specified number of days.\n * @return {Array} The array of DailyNetworkStats objects.\n */\nconst queryDailyNetworkStatses = gql`\n  query DailyNetworkStatses($last: Int, $skip: Int) {\n    dailyNetworkStatses(last: $last, skip: $skip, orderBy: date_ASC) {\n      date\n      numBlocks\n      numTransactions\n    }\n  }\n`;\n\nexport default queryDailyNetworkStatses;\n","/**\n * @file TransactionsChart\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { Query } from \"react-apollo\";\nimport AreaChart from '../AreaChart/AreaChart';\nimport queryDailyNetworkStatses from '../../graphql/queryDailyNetworkStatses';\n\n/**\n * This component displays a number of transactions chart with data retrieved via GraphQL.\n */\nclass TransactionsChartWithData extends Component {\n  static propTypes = {\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { chartHeight, theme } = this.props;\n    return (\n      <Query\n        query={queryDailyNetworkStatses}\n        // To get the last 14 days of complete data, we skip the current day.\n        variables={{ last: 14, skip: 1 }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                loading\n              />\n            );\n          }\n          else if (error) {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                error\n              />\n            );\n          }\n          else {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={data.dailyNetworkStatses}\n                chartHeight={chartHeight}\n                theme={theme}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass TransactionsChart extends AreaChart { \n  static propTypes = {\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * Array of DailyNetworkStatses objects.\n     */\n    dailyNetworkStatses: PropTypes.array.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n  \n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    const { error } = this.props;\n    let title = 'Transaction History';\n    if (error)\n      title += ' - Network Error'\n    return title;\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    const { dailyNetworkStatses } = this.props;\n    return dailyNetworkStatses;\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    return 'date';\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    return 'numTransactions';\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    return Math.floor(dataMin / 10000) * 10000;\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    return Math.ceil(dataMax / 10000) * 10000;\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    return new Date(value).toLocaleDateString();\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    if (value >= 1000) {\n      const k = value / 1000;\n      return k.toFixed(Number.isInteger(k) ? 0 : 1) + 'k';\n    }\n    else\n      return value;\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    return new Date(value).toLocaleDateString();\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    return `Transactions: ${value.toLocaleString()}`;\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(TransactionsChartWithData);\n","/**\n * @file queryCandles\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get DFN OHLCV candles for the specified date range.\n * @return {Array} The array of Candle objects.\n */\nconst queryCandles = gql`\n  query Candles($start: DateTime!, $end: DateTime!) {\n    candles(start: $start, end: $end) {\n      timestamp\n      open\n      high\n      low\n      close\n      volume\n    }\n  }\n`;\n\nexport default queryCandles;\n","/**\n * @file PriceChart\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { Query } from \"react-apollo\";\nimport AreaChart from '../AreaChart/AreaChart';\nimport queryCandles from '../../graphql/queryCandles';\n\n/**\n * This component displays a chart of Candle objects with data retrieved via GraphQL.\n */\nclass PriceChartWithData extends Component {\n  static propTypes = {\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Create a PriceChartWithData object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n \n    this.startDate = new Date();\n    this.startDate.setDate(this.startDate.getDate() - 14);\n    this.endDate = new Date();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { chartHeight, theme } = this.props;\n    return (\n      <Query\n        query={queryCandles}\n        variables={{ start: this.startDate.toISOString(), end: this.endDate.toISOString() }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) {\n            return (\n              <PriceChart\n                candles={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                loading\n              />\n            );\n          }\n          else if (error) {\n            return (\n              <PriceChart\n                candles={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                error\n              />\n            );\n          }\n          else {\n            return (\n              <PriceChart\n                candles={data.candles}\n                chartHeight={chartHeight}\n                theme={theme}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass PriceChart extends AreaChart { \n  static propTypes = {\n    /**\n     * Array of Candle objects.\n     */\n    candles: PropTypes.array.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n  \n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    const { error } = this.props;\n    let title = 'Price History';\n    if (error)\n      title += ' - Network Error'\n    return title;\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    const { candles } = this.props;\n    return candles;\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    return 'timestamp';\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    return 'close';\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    return Math.floor(dataMin);\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    return Math.ceil(dataMax);\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    return new Date(value).toLocaleDateString();\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    return `$${value.toFixed(2)}`;\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    return new Date(value).toLocaleDateString();\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    return `DFN Price: $${value.toFixed(2)}`;\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(PriceChartWithData);\n","/**\n * @file HomePage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport BlocksSlideTable from '../BlocksSlideTable/BlocksSlideTable';\nimport TransactionsFadeTable from '../TransactionsFadeTable/TransactionsFadeTable';\nimport DashCard from '../DashCard/DashCard';\nimport BlockTimeCard from '../BlockTimeCard/BlockTimeCard';\nimport TransactionsCard from '../TransactionsCard/TransactionsCard';\nimport PriceCard from '../PriceCard/PriceCard';\nimport TransactionsChart from '../TransactionsChart/TransactionsChart';\nimport PriceChart from '../PriceChart/PriceChart';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridSectionTables = styled(GridSection)`\n  && {\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n  }\n`;\n\nconst GridCard = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        width: calc(25% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP*3/4 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.MD || breakpoint === Breakpoints.SM) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridChart = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG || breakpoint === Breakpoints.MD) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridTable = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG || breakpoint === Breakpoints.MD) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst CardBlocks = styled(DashCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst CardBlockTime = styled(BlockTimeCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst CardTransactions = styled(TransactionsCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst CardPrice = styled(PriceCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\n/**\n * Component for the home page.\n */\nclass HomePage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a HomePage object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      blockHeight: 0\n    };\n\n    // Bind to make 'this' work in callbacks.\n    this.handleAddNewBlock = this.handleAddNewBlock.bind(this);\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.getSectionCards()}\n        {this.getSectionCharts()}\n        {this.getSectionTables()}\n      </div>\n    );\n  }\n\n  /**\n   * Return the elements for the Cards section based on the current breakpoint.\n   * @return {Object} The elements for the Cards section based on the current breakpoint.\n   * @private\n   */\n  getSectionCards()\n  {\n    const { breakpoint } = this.props;\n    const { blockHeight } = this.state;\n\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <CardBlocks\n              cardIndex={0}\n              title='Blocks'\n              value={blockHeight ? blockHeight.toLocaleString() : 'Loading...'}\n              svgIconPath={Constants.ICON_SVG_PATH_BLOCK}\n            />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <CardBlockTime cardIndex={1} />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={100}\n            timeout={500}\n          >\n            <CardTransactions cardIndex={2} />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={150}\n            timeout={500}\n          >\n            <CardPrice cardIndex={3} />\n          </Fade>\n        </GridCard>\n      </GridSection>\n    );\n  }\n\n  /**\n   * Return the elements for the Charts section based on the current breakpoint.\n   * @return {Object} The elements for the Charts section based on the current breakpoint.\n   * @private\n   */\n  getSectionCharts()\n  {\n    const { breakpoint } = this.props;\n\n    const chartHeight = 352;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridChart item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <TransactionsChart chartHeight={chartHeight} />\n          </Fade>\n        </GridChart>\n        <GridChart item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <PriceChart chartHeight={chartHeight} />\n          </Fade>\n        </GridChart>\n      </GridSection>\n    );\n  }\n\n  /**\n   * Return the elements for the Tables section based on the current breakpoint.\n   * @return {Object} The elements for the Tables section based on the current breakpoint.\n   * @private\n   */\n  getSectionTables()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionTables container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridTable item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <BlocksSlideTable\n              breakpoint={breakpoint}\n              maxRows={8}\n              handleAddNewBlock={this.handleAddNewBlock}\n            />\n          </Fade>\n        </GridTable>\n        <GridTable item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <TransactionsFadeTable breakpoint={breakpoint} maxRows={8} />\n          </Fade>\n        </GridTable>\n      </GridSectionTables>\n    );\n  }\n\n  /**\n   * Callback fired when a block is added.\n   * @param {Object} block The block object being added.\n   * @private\n   */\n  handleAddNewBlock(block) {\n    this.setState({\n      blockHeight: block.height\n    });\n  }\n}\n\nexport default HomePage;\n","/**\n * @file AccountsPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport Constants from '../../constants';\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nclass AccountsPage extends TrackablePage {\n  render() {\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading>Accounts</TypographyHeading>\n        <TypographyBody>Accounts page coming soon.</TypographyBody>\n      </div>\n    );\n  }\n}\n\nexport default AccountsPage;\n","/**\n * @file TablePager\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { withTheme } from 'styled-components';\nimport {\n  Grid,\n  IconButton,\n  InputBase,\n  MenuItem,\n  Select,\n  TableCell,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    &:last-child {\n      padding: 0px;\n    }\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  && {\n    color: ${props => props.theme.colorBodyTextDim};\n    min-height: auto;\n    padding-left: 2px;\n    padding-right: 2px;\n  }\n`;\n\nconst TypographyCaption = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n  }\n`;\n\nconst TypographyRows = styled(TypographyCaption)`\n  && {\n    margin-left: 6px;\n    margin-right: 14px;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        margin-right: 7px;\n      `\n    }\n  }\n`;\n\nconst TypographyCount = styled(TypographyCaption)`\n  && {\n    margin-left: 41px;\n    margin-right: 2px;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        margin-left: 20px;\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        margin-left: 20px;\n        margin-right: 6px;\n      `)\n    }\n  }\n`;\n\nconst StyledSelect = styled(({ ...other }) => (\n    <Select\n      classes={{\n        icon: 'icon',\n        root: 'root'\n      }}\n      {...other}\n    />\n  ))`\n  && {\n    color: ${props => props.theme.colorBodyTextDim};\n    padding-left: 4px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n    & .icon {\n      color: ${props => props.theme.colorBodyTextDim};\n      top: 0px;\n    }\n    & .root {\n      margin-top: 3px;\n      /**\n       * Used to move the rows per page number and the down arrow closer together. Note that this\n       * causes problems (number abbreviated with ellipses) for a rows per page number with more\n       * than two digits, so if support is desired for more than 99 rows per page, we need to figure\n       * out how to move the arrow closer in a different way, or we could simply remove the line\n       * below and not move it closer.\n       */\n      margin-right: -6px;\n    }\n  }\n`;\n\nconst StyledMenuItem = styled(MenuItem)`\n  && {\n    color: ${props => props.theme.colorBodyTextDim};\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n  }\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  && {\n    padding: ${\n      ((Constants.TABLE_ROW_HEIGHT_SM_AND_UP - Constants.MATERIAL_UI_ICON_BUTTON_FONT_SIZE) / 2) + 'px'\n    };\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding: ${\n          ((Constants.TABLE_ROW_HEIGHT_XS - Constants.MATERIAL_UI_ICON_BUTTON_FONT_SIZE) / 2) + 'px'\n        };\n      `\n    }\n    &:disabled {\n      color: ${props => fade(props.theme.colorBodyTextDim, props.theme.opacityActionDisabled)};\n    }\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: inherit;\n      }\n    }\n  }\n`;\n\nconst StyledIconButtonNotLast = styled(StyledIconButton)`\n  && {\n    margin-right: 4px;\n  }\n`;\n\n/**\n * Component that provides table pagination actions. The Material-UI TablePaginationActions\n * component is basic (e.g., no first and last buttons) and does not provide enough access for\n * styling (e.g., IconButton cannot by styled).\n */\nclass TablePagerActions extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The total number of rows.\n     */\n    count: PropTypes.number.isRequired,\n    /**\n     * Callback fired when the page is changed.\n     *\n     * @param {object} event The event source of the callback.\n     * @param {number} page The selected page.\n     */\n    onChangePage: PropTypes.func.isRequired,\n    /**\n     * The zero-based index of the current page.\n     */\n    page: PropTypes.number.isRequired,\n    /**\n     * The number of rows per page.\n     */\n    rowsPerPage: PropTypes.number.isRequired\n  };\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      breakpoint,\n      count,\n      onChangePage,\n      page,\n      rowsPerPage,\n      ...other\n    } = this.props;\n\n    const lastPage = Math.ceil(count / rowsPerPage) - 1;\n    return (\n      <div {...other}>\n        <StyledIconButtonNotLast\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, 0)}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          <FirstPageIcon />\n        </StyledIconButtonNotLast>\n        <StyledIconButtonNotLast\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, page - 1)}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          <KeyboardArrowLeft />\n        </StyledIconButtonNotLast>\n        <StyledIconButtonNotLast\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, page + 1)}\n          disabled={page >= lastPage}\n          aria-label=\"Next Page\"\n        >\n          <KeyboardArrowRight />\n        </StyledIconButtonNotLast>\n        <StyledIconButton\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, Math.max(0, lastPage))}\n          disabled={page >= lastPage}\n          aria-label=\"Last Page\"\n        >\n          <LastPageIcon />\n        </StyledIconButton>\n      </div>\n    );\n  }\n}\n\n/**\n * A TableCell-based component for placing inside a TableFooter for pagination. The Material-UI\n * TablePagination component does not provide enough access for styling (e.g., its pop-up menu\n * cannot be fully styled at this time), so we implement our own Material Design pagination\n * component.\n * \n * Spacing is styled to match table at console.firebase.google.com/.../authentication/users\n * \n */\nclass TablePager extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The total number of rows.\n     */\n    count: PropTypes.number.isRequired,\n    /**\n     * Callback fired when the page is changed.\n     *\n     * @param {object} event The event source of the callback.\n     * @param {number} page The selected page.\n     */\n    onChangePage: PropTypes.func.isRequired,\n    /**\n     * Callback fired when the number of rows per page is changed.\n     *\n     * @param {object} event The event source of the callback.\n     */\n    onChangeRowsPerPage: PropTypes.func,\n    /**\n     * The zero-based index of the current page.\n     */\n    page: PropTypes.number.isRequired,\n    /**\n     * The number of rows per page.\n     */\n    rowsPerPage: PropTypes.number.isRequired,\n    /**\n     * Customizes the options of the rows per page select field. If less than two options are\n     * available, no select field will be displayed.\n     */\n    rowsPerPageOptions: PropTypes.array.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @public\n   */\n  componentDidUpdate() {\n    const { count, onChangePage, page, rowsPerPage } = this.props;\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page > newLastPage) {\n      onChangePage(null, newLastPage);\n    }\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const colSpan = 1000; // span all table columns\n    return (\n      <StyledTableCell colSpan={colSpan} padding='checkbox'>\n        {this.getToolbar()}\n      </StyledTableCell>\n    );\n  }\n\n  /**\n   * Return the elements for the Toolbar component.\n   * @return {Object} The elements for the Toolbar component.\n   * @private\n   */\n  getToolbar() {\n    const { breakpoint } = this.props;\n    return (\n      breakpoint === Breakpoints.XS ?\n        // For XS, put the actions buttons on a second row, and center both rows.\n        <StyledToolbar>\n          <Grid container direction='column' justify='flex-start' alignItems='center'>\n            <Grid container direction='row' justify='center' alignItems='center' wrap='nowrap'>\n              {this.getRowsSelectCount()}\n            </Grid>\n            <Grid container direction='row' justify='center' alignItems='center' wrap='nowrap'>\n              {this.getActions()}\n            </Grid>\n          </Grid>\n        </StyledToolbar>\n      :\n        <StyledToolbar>\n          <Grid container direction='row' justify='flex-end' alignItems='center' wrap='nowrap'>\n            {this.getRowsSelectCount()}\n            {this.getActions()}\n          </Grid>\n        </StyledToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the rows text, the Select component, and the count text.\n   * @return {Object} The elements for the rows text, the Select component, and the count text.\n   * @private\n   */\n  getRowsSelectCount() {\n    const {\n      breakpoint,\n      onChangeRowsPerPage,\n      rowsPerPage,\n      rowsPerPageOptions,\n      theme\n    } = this.props;\n    const rowsText = (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) ?\n      'Rows:' : 'Rows per page:';\n    return (\n      <Fragment>  \n        {rowsPerPageOptions.length > 1 && (\n          <Fragment>\n            <TypographyRows breakpoint={breakpoint} color='inherit'>\n              {rowsText}\n            </TypographyRows>\n            <StyledSelect\n              input={<InputBase />}\n              value={rowsPerPage}\n              onChange={onChangeRowsPerPage}\n              // Unable to style the Menu background using styled-components.\n              MenuProps={{\n                PaperProps: {style: {background: theme.colorTableBackgroundPrimary}}\n              }}\n            >\n              {rowsPerPageOptions.map(rowsPerPageOption => (\n                <StyledMenuItem\n                  key={rowsPerPageOption}\n                  value={rowsPerPageOption}\n                >\n                  {rowsPerPageOption}\n                </StyledMenuItem>\n              ))}\n            </StyledSelect>\n          </Fragment>\n        )}\n        <TypographyCount breakpoint={breakpoint} color='inherit'>\n          {this.getCountText()}\n        </TypographyCount>\n      </Fragment>\n    );\n  }\n\n  /**\n   * Return the text for the count (e.g., 1-10 of 120).\n   * @return {Object} The text for the count.\n   * @private\n   */\n  getCountText() {\n    const {\n      breakpoint,\n      count,\n      page,\n      rowsPerPage\n    } = this.props;\n\n    const from = count === 0 ? 0 : page * rowsPerPage + 1;\n    const to = Math.min(count, (page + 1) * rowsPerPage);\n\n    let total;\n    if (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) {\n      if (count >= 1000000000) {\n        const t = count / 1000000000;\n        total = t.toFixed(Number.isInteger(t) ? 0 : 1) + 'T';\n      }\n      else if (count >= 1000000) {\n        const m = count / 1000000;\n        total = m.toFixed(Number.isInteger(m) ? 0 : 1) + 'M';\n      }\n      else if (count >= 1000) {\n        const k = count / 1000;\n        total = k.toFixed(Number.isInteger(k) ? 0 : 1) + 'k';\n      }\n      else\n      total = count.toFixed(0);\n    }\n    else\n      total = count.toLocaleString();\n\n    return `${from.toLocaleString()}-${to.toLocaleString()} of ${total}`;\n  }\n\n  /**\n   * Return the elements for the TablePagerActions component.\n   * @return {Object} The elements for the TablePagerActions component.\n   * @private\n   */\n  getActions() {\n    const {\n      breakpoint,\n      count,\n      onChangePage,\n      page,\n      rowsPerPage\n    } = this.props;\n    return (\n      <TablePagerActions\n        breakpoint={breakpoint}\n        count={count}\n        onChangePage={onChangePage}\n        page={page}\n        rowsPerPage={rowsPerPage}\n      />\n    );\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(TablePager);\n","/**\n * @file PagedTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  CircularProgress,\n  Fade,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport TablePager from '../TablePager/TablePager';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorTableBackgroundPrimary};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 4px;\n    padding-left: 11px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n  }\n`;\n\nconst DivCircularProgress = styled.div`\n  && {\n    position: absolute;\n    /* Set to modal z-index so that progress indicator is above table.  */\n    z-index: ${zIndex.modal};\n    /* Add padding under the progress indicator for XS to compensate for the larger footer. */\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-bottom: 30px;\n      `\n    }\n  }\n`;\n\nconst StyledCircularProgress = styled(CircularProgress)`\n  && {\n    color: ${props => props.theme.colorBodyButtonBackground};\n  }\n`;\n\nconst StyledTable = styled(Table)`\n  && {\n    /* Same easing as Material-UI . */\n    transition: ${'opacity ' + duration.standard + 'ms ' + easing.easeInOut};\n    opacity: ${props => props.loading ? 0.5 : 1.0};\n    font-family: ${Constants.FONT_PRIMARY};\n  }\n`;\n\nconst StyledTableRow = styled(TableRow)`\n  && {\n    height: ${Constants.TABLE_ROW_HEIGHT_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: ${Constants.TABLE_ROW_HEIGHT_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst TableRowFooter = styled(StyledTableRow)`\n  && {\n    border-top-color: ${props => props.theme.colorTableRowBorder};\n    border-top-style: solid;\n    border-top-width: 2px;\n  }\n`;\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    border-color: ${props => props.theme.colorTableRowBorder};\n    color: ${props => props.theme.colorBodyText};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    white-space: nowrap;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.FONT_SIZE_TABLE_XS};\n      `\n    }\n  }\n`;\n\nconst TableCellHeader = styled(StyledTableCell)`\n  && {\n    border-bottom-style: solid;\n    border-bottom-width: 2px;\n    color: ${props => props.theme.colorBodyTextDim};\n    font-weight: 500;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n/**\n * Class that implements a table component that supports pagination.\n */\nclass PagedTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * An array that specifies the column widths of the table.\n     */    \n    columnWidths: PropTypes.array.isRequired,\n    /**\n     * Return the Relay-compliant connection object from the data retrieved by the query.\n     * @param {Object} data The data retrieved by the query.\n     * @return {Object} The connection object.\n     */\n    getDataConnection: PropTypes.func.isRequired,\n    /**\n     * Return an array of objects that describe the body rows, where each object contains:\n     *  mapKey: A unique key that identifies the row.\n     *  cells: An array of objects that describe the cells of the row, where each object contains:\n     *    value: String containing the value of the cell.\n     *    isNumeric: True if the cell contains a numeric value, false otherwise.\n     *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n     *      for no link.\n     * @param {Object} data The data retrieved by the query.\n     * @return {Array} An array of objects that describe the body rows.\n     */\n    getBodyRows: PropTypes.func.isRequired,\n    /**\n     * An array of objects that describe the cells of the header row, where each object contains:\n     *  value: String containing the value of the cell.\n     *  isNumeric: True if the cell contains a numeric value, false otherwise.\n     *  link: Optional string which provides a link for the cell (to= prop of Link). Set to null for\n     *    no link.\n     */\n    headerRow: PropTypes.array.isRequired,\n    /**\n     * A Relay-compliant connection query document (gql`...`) to retrieve the table data. See\n     * queryBlocksConnection.js for an example of the required query parameters and shape.\n     */\n    query: PropTypes.object.isRequired,\n    /**\n     * The title of the table.\n     */\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Create a PagedTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.state = {\n      pageIndex: 0,\n      priorPageIndex: 0,\n      priorStartCursor: null,\n      priorEndCursor: null,\n      rowsPerPage: 10\n    };\n\n    this.data = null;\n    this.count = 0;\n    this.firstId = null;\n    this.startCursor = null;\n    this.endCursor = null;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { title } = this.props;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle>{title}</TypographyTitle>\n        {this.getTableElements()}\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the elements for the table.\n   * @return {Object} The elements for the table.\n   * @private\n   */\n  getTableElements() {\n    const { breakpoint, columnWidths, getDataConnection, query } = this.props;\n    const { pageIndex, priorPageIndex, priorStartCursor, priorEndCursor, rowsPerPage } = this.state;\n\n    // Determine the query variables for the current page.\n    let variables;\n    const withCount = this.count === 0;\n    if (withCount)\n      variables = {first: rowsPerPage, withCount: withCount};\n    else {\n      const lastPageIndex = Math.ceil(this.count / rowsPerPage) - 1;\n      if (pageIndex === priorPageIndex + 1)\n        variables = {after: priorEndCursor, first: rowsPerPage, withCount: withCount};\n      else if (pageIndex === priorPageIndex - 1)\n        variables = {before: priorStartCursor, last: rowsPerPage, withCount: withCount};\n      else if (pageIndex === lastPageIndex) {\n        const lastPageRows = this.count - pageIndex * rowsPerPage;\n        variables = {last: lastPageRows, withCount: withCount};\n      }\n      else\n        // We query the first rowsPerPage even in the case when the first page button is clicked.\n        // We count on the Apollo cache returning the same rows every time for this query.\n        // Alternatively, we could query starting at firstId (see commented out code below), which\n        // makes no assumptions about the Apollo cache, but that results in a double query when the\n        // table is first loaded. If the current code causes problems, we can change to the version\n        // which makes no assumptions about the cache.\n        variables = {first: rowsPerPage, withCount: withCount};\n        //variables = {where: { id_lte: this.firstId }, first: rowsPerPage, withCount: false};\n    }\n\n    return (\n      <Query\n        // Do not use the Apollo cache when withCount is true.\n        fetchPolicy={withCount ? 'network-only' : null}\n        query={query}\n        variables={variables}\n      >\n        {({ loading, error, data }) => {\n          if (!loading && !error)\n          {\n            this.data = data;\n            const connection = getDataConnection(this.data);\n            if (this.data.total) { // first query\n              this.count = this.data.total.aggregate.count;\n              if (connection.edges.length)\n                this.firstId = connection.edges[0].node.id;\n            }\n            this.startCursor = connection.pageInfo.startCursor;\n            this.endCursor = connection.pageInfo.endCursor;\n          }\n          return (\n            <Grid container\n              direction='column'\n              justify='center'\n              alignItems='center'\n            >\n              <Fade in={loading} timeout={duration.standard} mountOnEnter unmountOnExit>\n                <DivCircularProgress breakpoint={breakpoint}>\n                  <StyledCircularProgress size={Constants.MATERIAL_CIRCULAR_INDICATOR_SIZE} />\n                </DivCircularProgress>\n              </Fade>\n              <StyledTable loading={loading ? 1 : 0}>\n                <colgroup>\n                  {columnWidths.map((width, index) => {\n                    // The column width settings seem to be ignored in many cases, depending on cell\n                    // length. That is, when cell lengths are long, the widths are ignored.\n                    return (\n                      <col key={index} width={width} />\n                    );\n                  })}\n                </colgroup>\n                <TableHead>\n                  {this.getHeaderRowElement()}\n                </TableHead>\n                <TableBody>\n                  {this.getBodyRowElements()}\n                </TableBody>\n                <TableFooter>\n                  {this.getFooterRowElement()}\n                </TableFooter>\n              </StyledTable>\n            </Grid>\n          );\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Return the element for the header row.\n   * @return {Object} The element for the header row.\n   * @private\n   */\n  getHeaderRowElement() {\n    const { breakpoint, headerRow } = this.props;\n    return (\n      <StyledTableRow breakpoint={breakpoint}>\n        {headerRow.map((cell, index) => {\n          return (\n            // Using index as the key is fine here and for cells in other rows, since we never add,\n            // remove, reorder, or filter items in the cell arrays.\n            <TableCellHeader\n              breakpoint={breakpoint}\n              key={index}\n              align={cell.isNumeric ? 'right' : 'inherit'}\n              padding='checkbox'\n            >\n              {cell.link != null ?\n                <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                cell.value\n              }\n            </TableCellHeader>\n          );\n        })}\n      </StyledTableRow>\n    );\n  }\n\n  /**\n   * Return the elements for all of the body rows.\n   * @return {Object} The elements for all of the body rows.\n   * @private\n   */\n  getBodyRowElements() {\n    const { getBodyRows } = this.props;\n    if (this.data) {\n      let rows = getBodyRows(this.data);\n      return rows.map((bodyRow, index) => {\n        return this.getBodyRowElement(bodyRow);\n      });\n    }\n    else\n      return null;\n  }\n\n  /**\n   * Return the element for the specified body row.\n   * @param {Object} bodyRow Object that describes the body row.\n   * @return {Object} The element for the specified body row.\n   * @private\n   */\n  getBodyRowElement(bodyRow) {\n    const { breakpoint } = this.props;\n    return (\n      <StyledTableRow breakpoint={breakpoint} key={bodyRow.mapKey}>\n        {bodyRow.cells.map((cell, index) => {\n          return (\n            <StyledTableCell\n              breakpoint={breakpoint}\n              key={index}\n              align={cell.isNumeric ? 'right' : 'inherit'}\n              padding='checkbox'\n            >\n              {cell.link != null ?\n                <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                cell.value\n              }\n            </StyledTableCell>\n          );\n        })}\n      </StyledTableRow>\n    );\n  }\n\n  /**\n   * Return the element for the footer row.\n   * @return {Object} The element for the footer row.\n   * @private\n   */\n  getFooterRowElement() {\n    const { breakpoint, } = this.props;\n    const { pageIndex, rowsPerPage } = this.state;\n    return (\n      <TableRowFooter breakpoint={breakpoint}>\n        <TablePager\n          breakpoint={breakpoint}\n          rowsPerPageOptions={[10, 25, 50]}\n          rowsPerPage={rowsPerPage}\n          page={pageIndex}\n          count={this.count}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </TableRowFooter>\n    );\n  }\n\n  /**\n   * Callback fired when the page is changed.\n   * @param {Object} event The event source of the callback.\n   * @param {Object} page The selected page.\n   * @private\n   */\n  handleChangePage(event, page) {\n    this.setState(prevState => ({\n      pageIndex: page,\n      priorPageIndex: prevState.pageIndex,\n      priorStartCursor: this.startCursor,\n      priorEndCursor: this.endCursor\n    }));\n  }\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   * @param {Object} event The event source of the callback.\n   * @private\n   */\n  handleChangeRowsPerPage(event) {\n    // When rows per page is changed, reset everything.\n    const { rowsPerPage } = this.state;\n    if (rowsPerPage !== event.target.value) {\n      this.data = null;\n      this.count = 0;\n      this.firstId = null;\n      this.startCursor = null;\n      this.endCursor = null;\n      this.setState({\n        pageIndex: 0,\n        priorPageIndex: 0,\n        priorStartCursor: null,\n        priorEndCursor: null,\n        rowsPerPage: event.target.value\n      });\n    }\n  }\n}\n\nexport default PagedTable;\n","/**\n * @file queryBlocksConnection\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL Relay-compliant connection query to get a BlockConnection object.\n * @return {Object} The BlockConnection object.\n */\nconst queryBlocksConnection = gql`\n  query BlocksConnection(\n    $where: BlockWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int,\n    $withCount: Boolean!) {\n    blocksConnection(\n      where: $where, orderBy: height_DESC, skip: $skip, after: $after, before: $before,\n      first: $first, last: $last) {\n      edges {\n        node {\n          id\n          height\n          timestamp\n          numTransactions\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n      }\n    }\n    # Use @include directive to conditionally query the total count of blocks.\n    total: blocksConnection @include(if: $withCount) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nexport default queryBlocksConnection;\n","/**\n * @file BlocksPagedTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PagedTable from '../PagedTable/PagedTable';\nimport queryBlocksConnection from '../../graphql/queryBlocksConnection';\n\n/**\n * This component displays a paged table of Block objects.\n */\nclass BlocksPagedTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a BlocksPagedTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <PagedTable\n        breakpoint={breakpoint}\n        title='Blocks'\n        columnWidths={['30%', '40%', '30%']}\n        headerRow={[\n          {value: 'Height', isNumeric: false},\n          {value: 'Timestamp', isNumeric: false},\n          {value: 'Transactions', isNumeric: true}\n        ]}\n        query={queryBlocksConnection}\n        getDataConnection={data => data.blocksConnection}\n        getBodyRows={this.getBodyRows}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @param {Object} data The data retrieved by getQuery().\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows(data) {\n    let bodyRows = data.blocksConnection.edges.map((edge) => {\n      const block = edge.node;\n      const date = new Date(block.timestamp);\n      return {\n        mapKey: block.height,\n        cells: [\n          {\n            value: block.height.toLocaleString(),\n            isNumeric: false,\n            link: `/block/${block.height}`\n          },\n          {value: date.toLocaleString(), isNumeric: false},\n          {value: block.numTransactions.toLocaleString(), isNumeric: true}\n        ]\n      };\n    });\n    return bodyRows;\n  }\n}\n\nexport default BlocksPagedTable;\n","/**\n * @file BlocksPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport BlocksPagedTable from '../BlocksPagedTable/BlocksPagedTable';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridPagedTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nclass BlocksPage extends TrackablePage {\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridPagedTable item breakpoint={breakpoint}>\n          <Fade timeout={500}>\n            <BlocksPagedTable breakpoint={breakpoint} />\n          </Fade>\n        </GridPagedTable>\n      </GridSection>\n    );\n  }\n}\n\nexport default BlocksPage;\n","/**\n * @file BlockTransactionsTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a table of a block's Transaction objects.\n */\nclass BlockTransactionsTable extends Component { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Array of transaction objects.\n     */\n    transactions: PropTypes.array.isRequired\n  };\n\n  /**\n   * Create a BlockTransactionsTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, maxRows } = this.props;\n    return (\n      <DynamicTable\n        breakpoint={breakpoint}\n        title='Transactions'\n        columnWidths={['60%', '40%']}\n        maxRows={maxRows}\n        headerRow={[\n          {value: 'Hash', isNumeric: false},\n          {value: 'Amount', isNumeric: true}\n        ]}\n        getBodyRows={this.getBodyRows}\n        footerRow={[\n          {value: null, isNumeric: false},\n          {value: '(simulated data)', isNumeric: true}\n        ]}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { transactions } = this.props;\n    if (transactions) {\n      let bodyRows = transactions.map((transaction) => {\n        return {\n          mapKey: transaction.hash,\n          cells: [\n            {\n              value: getHashString(transaction.hash),\n              isNumeric: false,\n              link: `/tx/0x${transaction.hash}`\n            },\n            {value: transaction.amount.toFixed(8).toString() + ' DFN', isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n    else\n      return [];\n  }\n}\n\nexport default BlockTransactionsTable;\n","/**\n * @file queryBlock\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get a block.\n * @param {Number} height The height of the block to fetch.\n * @return {Object} The Block object with the specified height.\n */\nconst queryBlock = gql`\n  query Block($height: Int!) {\n    block(height: $height) {\n      id\n      height\n      timestamp\n      numTransactions\n      transactions {\n        id\n        hash\n        amount\n      }\n    }\n  }\n`;\n\nexport default queryBlock;\n","/**\n * @file BlockDetailsPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport BlockTransactionsTable from '../BlockTransactionsTable/BlockTransactionsTable'\nimport queryBlock from '../../graphql/queryBlock';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\n/**\n * The Block Details Page shows details about a block.\n */\nclass BlockDetailsPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n\n    const height = parseInt(this.props.match.params.height, 10);\n    return (\n      <GridSection container\n        direction='column'\n        justify='flex-start'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <Grid item>\n          <TypographyHeading breakpoint={breakpoint}>Block Details</TypographyHeading>\n        </Grid>\n        <Query query={queryBlock} variables={{ height }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <Grid item>\n                  <TypographyBody>Searching...</TypographyBody>\n                </Grid>\n              );\n            else if (error)\n              return (\n                <Grid item>\n                  <TypographyBody>Network error</TypographyBody>\n                </Grid>\n              );\n            else if (data.block) {\n              const date = new Date(data.block.timestamp);\n              return (\n                <Fragment>\n                  <Grid item>\n                    <TypographyBody>\n                      Height: {data.block.height.toLocaleString()}\n                    </TypographyBody>\n                    <TypographyBody>\n                      Timestamp: {date.toLocaleString()}\n                    </TypographyBody>\n                  </Grid>\n                  <br />\n                  <GridTable item>\n                    <BlockTransactionsTable\n                      breakpoint={breakpoint}\n                      maxRows={100}\n                      transactions={data.block.transactions}\n                    />\n                  </GridTable>\n                </Fragment>\n              );\n            }\n            else\n              return (\n                <Grid item>\n                  <TypographyBody>Block not found.</TypographyBody>\n                </Grid>\n              );\n          }}\n        </Query>\n      </GridSection>\n    );\n  }\n}\n\nexport default BlockDetailsPage;\n","/**\n * @file queryTransactionsConnection\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL Relay-compliant connection query to get a TransactionsConnection object.\n * @return {Object} The TransactionsConnection object.\n */\nconst queryTransactionsConnection = gql`\n  query TransactionsConnection(\n    $where: TransactionWhereInput, $skip: Int, $after: String, $before: String, $first: Int,\n    $last: Int, $withCount: Boolean!) {\n    transactionsConnection(\n      where: $where, orderBy: createdAt_DESC, skip: $skip, after: $after, before: $before,\n      first: $first, last: $last) {\n      edges {\n        node {\n          id\n          hash\n          amount\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n      }\n    }\n    # Use @include directive to conditionally query the total count of transactions.\n    total: transactionsConnection @include(if: $withCount) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nexport default queryTransactionsConnection;\n","/**\n * @file TransactionsPagedTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PagedTable from '../PagedTable/PagedTable';\nimport queryTransactionsConnection from '../../graphql/queryTransactionsConnection';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a paged table of Transaction objects.\n */\nclass TransactionsPagedTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a TransactionsPagedTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <PagedTable\n        breakpoint={breakpoint}\n        title='Transactions'\n        columnWidths={['60%', '40%']}\n        headerRow={[\n          {value: 'Hash', isNumeric: false},\n          {value: 'Amount', isNumeric: true}\n        ]}\n        query={queryTransactionsConnection}\n        getDataConnection={data => data.transactionsConnection}\n        getBodyRows={this.getBodyRows}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @param {Object} data The data retrieved by getQuery().\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows(data) {\n    let bodyRows = data.transactionsConnection.edges.map((edge) => {\n      const transaction = edge.node;\n      return {\n        mapKey: transaction.hash,\n        cells: [\n          {\n            value: getHashString(transaction.hash),\n            isNumeric: false,\n            link: `/tx/0x${transaction.hash}`\n          },\n          {value: transaction.amount.toFixed(8).toString() + ' DFN', isNumeric: true}\n        ]\n      };\n    });\n    return bodyRows;\n  }\n}\n\n\nexport default TransactionsPagedTable;\n","/**\n * @file TransactionsPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport TransactionsPagedTable from '../TransactionsPagedTable/TransactionsPagedTable';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridPagedTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nclass TransactionsPage extends TrackablePage {\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridPagedTable item breakpoint={breakpoint}>\n          <Fade timeout={500}>\n            <TransactionsPagedTable breakpoint={breakpoint} />\n          </Fade>\n        </GridPagedTable>\n      </GridSection>\n    );\n  }\n}\n\nexport default TransactionsPage;\n","/**\n * @file queryTransaction\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get a transaction.\n * @param {String} id The hash of the transaction to fetch.\n * @return {Object} The Transaction object with the specified hash.\n */\nconst queryTransaction = gql`\n  query Transaction($hash: String!) {\n    transaction(hash: $hash) {\n      id\n      hash\n      amount\n      block {\n        id\n        height\n      }\n    }\n  }\n`;\n\nexport default queryTransaction;\n","/**\n * @file TransactionDetailsPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport queryTransaction from '../../graphql/queryTransaction';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport getHashString from '../../utils/getHashString';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n/**\n * The Transaction Details Page shows details about a transaction.\n */\nclass TransactionDetailsPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    const { hash } = this.props.match.params;\n\n    const hashMaxLength = breakpoint === Breakpoints.XS || breakpoint === Breakpoints.SM ? 24 : 0;\n    return (\n      <GridSection container\n        direction='column'\n        justify='flex-start'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <TypographyHeading breakpoint={breakpoint}>Transaction Details</TypographyHeading>\n        <Query query={queryTransaction} variables={{ hash }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <Grid item>\n                  <TypographyBody>Searching...</TypographyBody>\n                </Grid>\n              );\n            else if (error)\n              return (\n                <Grid item>\n                  <TypographyBody>Network error</TypographyBody>\n                </Grid>\n              );\n            else if (data.transaction)\n              return (\n                <Grid item>\n                  <TypographyBody>\n                    {'Hash: '}\n                    {getHashString(data.transaction.hash, hashMaxLength)}\n                  </TypographyBody>\n                  <TypographyBody>\n                    {'Amount: '}\n                    {data.transaction.amount.toFixed(8).toString()}\n                    {' DFN'}\n                  </TypographyBody>\n                  <TypographyBody>\n                    {'Block Height: '}\n                    <StyledLink to={`/block/${data.transaction.block.height}`}>\n                      {data.transaction.block.height.toLocaleString()}\n                    </StyledLink>\n                  </TypographyBody>\n                </Grid>\n              );\n            else\n              return (\n                <Grid item>\n                  <TypographyBody>Transaction not found.</TypographyBody>\n                </Grid>\n              );\n          }}\n        </Query>\n      </GridSection>\n    );\n  }\n}\n\nexport default TransactionDetailsPage;\n","/**\n * @file CanistersPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport Constants from '../../constants';\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nclass CanistersPage extends TrackablePage {\n  render() {\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading>Canisters</TypographyHeading>\n        <TypographyBody>Canisters page coming soon.</TypographyBody>\n      </div>\n    );\n  }\n}\n\nexport default CanistersPage;\n","/**\n * @file getRandomInt\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\nimport getRandomNumber from './getRandomNumber'\n\n/**\n * Return a random integer between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random integer.\n * @private\n */\nexport default function getRandomInt(start, end) {\n  return Math.floor(getRandomNumber(start, end));\n}\n","/**\n * @file getRandomNumber\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\n /**\n * Return a random number between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random number.\n * @private\n */\nexport default function getRandomNumber(start, end) {\n  return Math.random() * (end - start) + start;\n}\n","/**\n * @file DfinitySymbolD3\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport * as PIXI from 'pixi.js';\nimport * as filters from 'pixi-filters';\nimport getRandomInt from '../../utils/getRandomInt';\n\n/**\n * This class draws the DFINITY logo infinity symbol using a d3 force-directed graph.\n */\nclass DfinitySymbolD3 extends Component  {\n  static propTypes = {\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired,\n    /**\n     * True for logo mode, where the symbol is shaped more like the DFINITY logo, and various\n     * adjustments are made with the intention of rendering at small sizes (e.g., in an app bar).\n     */\n    logoMode: PropTypes.bool,\n    /**\n     * The width of the component, or 0 for use built-in simulationWidth.\n     */\n    width: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a DfinitySymbolD3 object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n\n    // Bind to make 'this' work in callbacks.\n    this.dragStarted = this.dragStarted.bind(this);\n    this.dragged = this.dragged.bind(this);\n    this.dragEnded = this.dragEnded.bind(this);\n    this.tick = this.tick.bind(this);\n    this.rotate = this.rotate.bind(this);\n\n    // A force-directed graph can be a difficult beast to tame. Most changes to settings in this\n    // class will likely change the shape of the graph and require changing other settings through\n    // trial and error in order to get the graph back to the DFINITY logo shape. Any number of the\n    // settings below could be made into constructor parameters. Another idea would be to pre-define\n    // different groups of settings that produce a shape which approximates the DFINITY logo\n    // shape, and then allow the caller to specify which group of settings to use. Since there is\n    // currently only one group of settings defined, settings groups would not currently be useful.\n\n    // PixiJS members.\n    this.stage = null;\n    this.renderer = null;\n    this.linksGraphics = null;\n\n    // Code is customized for this window size. Modifying these values will cause the d3 force-\n    // directed graph to change shape unless scaleToWindow is adjusted to keep the object the same\n    // size.\n    this.simulationWidth = this.props.logoMode ? 780 : 800;\n    this.simulationHeight = 400;\n    this.scaleSimulationToPixi = 1.0;\n\n    this.centerX = this.simulationWidth / 2;\n    this.centerY = this.simulationHeight / 2;\n    this.scaleToWindow = this.simulationWidth / 2 * 0.8;\n\n    // Specify the number of symbol nodes and the number of vertices for each symbol node. The\n    // current values of 36 symbol nodes and 8 vertices (octagon) was arrived at after trial and\n    // error to produce a shape which resembles the DFINITY logo.\n    this.numSymbolNodes = this.props.logoMode ? 41 : 36;\n    this.numVertices = this.props.logoMode ? 10 : 8;\n    this.numNodes = this.numSymbolNodes * this.numVertices;\n\n    // Specify the charge of the symbol nodes and the non-symbol nodes. \"A positive value causes\n    // nodes to attract each other, similar to gravity, while a negative value causes nodes to\n    // repel each other, similar to electrostatic charge.\" The default value is -30, but we specify\n    // much lower in magnitude values because we do not want the nodes to repel very much. For the\n    // fixed nodes which draw the infinity symbol, we do not want any force at all.\n    this.forceManyBodyStrengthSymbolNodes = 0;\n    this.forceManyBodyStrengthNonSymbolNodes = this.props.logoMode ? -3.75 : -9;\n\n    // Specify the link distance. \"The link force pushes linked nodes together or apart according to\n    // the desired link distance.\" The default value is 30.\n    this.linkDistance = this.props.logoMode ? 19 : 14;\n\n    // Specify node and link drawing properties.\n    this.nodeStrokeWidth = 1;\n    this.nodeRadius = 4.5;\n    this.nodeRadiusSelected = this.props.logoMode ? 11 : 5.5;\n    // DCM 01.mar.2019: Always use same node fill color as stroke color.\n    //this.nodeFillColorArray = [127, 127, 127];\n    this.nodeSelectedFillColorArray = [255, 255, 255];\n    this.nodeSelectedStrokeColorArray = [255, 255, 255];\n    this.nodeOpacity = 0.5;\n    this.nodeOpacitySelected = 0.75;\n    this.linkStrokeWidth = this.props.logoMode ? 3 : 2; // why do lines get blurry when this is increased?\n    this.linkStrokeWidthIncreaseAtMagnitude = this.props.logoMode ? 1.5 : 0;\n\n    // Adjust the symbolHeightMultiplier to make the symbol shorter or taller. A value of 1.0\n    // represents normal height.\n    this.symbolHeightMultiplier = this.props.logoMode ? 1.325 : 1.111111;\n\n    // The initial rotateOffset does two things: it determines which part of the symbol goes in\n    // front (blue is on top in the DFINITY logo), and it makes a small adjustment to align the\n    // colors correctly.\n    this.rotateOffset = this.numSymbolNodes / 2 - 1.2;\n\n    // The rotate interval frequency.\n    this.rotateTimeMs = 33.3; // 30 frames/sec max\n\n    // The amount of rotation for every rotate interval.\n    this.rotateAmount = this.props.logoMode ? 0 : 0.000015;\n\n    // The currently selected node index.\n    this.selectedNodeIndex = -1;\n\n    // New block timer members.\n    this.newBlockNodeStartTime = null;\n    this.newBlockLinksStartTime = null;\n    this.newBlockNodeTimerMs = 1000;\n    this.newBlockLinksTimerMs = 1500;\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Set the value of scaleSimulationToPixi based on the width prop. We scale the force-directed\n    // graph by keeping the d3 simulation as is, since it is finely tuned to appear in a certain\n    // way, and instead scaling coordinates from simulation space to PixiJS space when rendering.\n    // In this way, the graph can be scaled to any width by changing the widths prop. A width prop\n    // of 0 indicates no scaling. Note that drag/drop is not currently implemented when scaling.\n    this.scaleSimulationToPixi = this.props.width ? this.props.width / this.simulationWidth : 1.0;\n\n    // Draw the DFINITY logo infinity symbol.\n    this.draw();\n  }\n\n  /**\n   * Invoked by React immediately before a component is unmounted and destroyed.\n   * @public\n   */\n  componentWillUnmount() {\n    // Cleanup PixiJS properties.\n    this.renderer.destroy();\n    this.stage.destroy();\n  }\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @public\n   */\n  componentDidUpdate() {\n    // Make the necessary PixiJS adjustments when the width prop changes.\n    const scaleSimulationToPixi = this.props.width ? this.props.width / this.simulationWidth : 1.0;\n    if (this.scaleSimulationToPixi !== scaleSimulationToPixi) {\n      this.scaleSimulationToPixi = scaleSimulationToPixi;\n\n      // Resize the renderer.\n      this.pixiResizeRenderer();\n\n      // Draw circles for the nodes.\n      if (this.nodesData) {\n        this.nodesData.forEach((node) => { this.pixiDrawNode(node); });\n      }\n    }\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return <div ref={(el) => { this.element = el }}/>;\n  }\n\n  /**\n   * Draw the DFINITY logo infinity symbol.\n   * @public\n   */\n  draw() {\n    // Set up the nodes and links of the graph.\n    this.addNodes();\n    this.addLinks();\n\n    // Create the d3 simulation.\n    this.createSimulation();\n\n    // Set up PixiJS to draw the simulation.\n    this.pixiSetup();\n  }\n\n  /**\n   * Add a new block.\n   * @public\n   */\n  addNewBlock() {\n    // If there is a selected node still animating, stop the animation and return it to normal.\n    if (this.newBlockNodeStartTime) {\n        const node = this.nodesData[this.selectedNodeIndex];\n        this.pixiDrawNode(node);\n    }\n\n    // Select node and enable new block timers.\n    this.selectedNodeIndex = getRandomInt(0, this.numNodes - 1);\n    this.newBlockNodeStartTime = this.newBlockLinksStartTime = new Date();\n  }\n\n  /**\n   * Populate nodesData[] with the nodes of the graph.\n   * @private\n   */\n  addNodes() {\n    // Add the symbol nodes to nodesData[] at fixed positions (fx, fy). _fx and _fy save the fixed\n    // position across drag/drop operations, linkCount is used to calculate the strength of the\n    // force of a link.\n    this.nodesData = [];\n    for (let i = 0; i < this.numSymbolNodes; i++) {\n      const pos = this.getNodePosition(i);\n      this.nodesData.push({\n        'fx' : pos[0],\n        'fy' : pos[1],\n        '_fx' : pos[0],\n        '_fy' : pos[1],\n        'linkCount' : 0});\n    }\n\n    // Add the non-symbol nodes at non-fixed positions.\n    for (let i = this.numSymbolNodes; i < this.numNodes; i++) {\n      this.nodesData.push({'linkCount' : 0});\n    }\n  }\n\n  /**\n   * Get the position of the node with the specified index.\n   * @param {Number} index The node index.\n   * @return {Array} An array containing the [x, y] position of the node.\n   * @private\n   */\n  getNodePosition(index) {\n    const t =\n      2 * Math.PI * ((index + this.rotateOffset) % this.numSymbolNodes) / this.numSymbolNodes;\n    const scale = 2 / (3 - Math.cos(2 * t));\n    const fx = this.centerX + scale * Math.cos(t) * this.scaleToWindow;\n    const fy =\n      this.centerY +\n      scale * Math.sin(2 * t) * this.symbolHeightMultiplier / 2 * this.scaleToWindow;\n    return [fx, fy];\n  }\n\n  /**\n   * Populate linksData[] with the links of the graph.\n   * @private\n   */\n  addLinks() {\n    this.linksData = [];\n    for (let i = 0; i < this.numSymbolNodes; i++) {   \n      // Define the ith link of the symbol.\n      const indexSymbol = i;\n      const indexSymbolNext = (i + 1) % this.numSymbolNodes;\n      this.addLink(indexSymbol, indexSymbolNext, 0, 1);\n           \n      // Link at top of shape, parallel to symbol link, invisible.\n      const vertexShapeTop = this.numVertices / 2;\n      const indexShapeTop = vertexShapeTop * this.numSymbolNodes + i;\n      const indexShapeTopNext =\n        vertexShapeTop * this.numSymbolNodes + (i + 1) % this.numSymbolNodes;\n      this.addLink(indexShapeTop, indexShapeTopNext, 1, 0);\n      \n      // Cross bar, invisible. This pulls the graph in and provides stability. Rather than linking\n      // the cross bar from the link at top of shape to the symbol index, we link it from the shape\n      // node prior. Found that this produces a more interesting graph. Note that previously this\n      // code was in the for loop below and executed when j === 3, but with the same parameters to\n      // addLink(). This produced a slightly different/thicker graph.\n      const vertexShapeAlmostTop = vertexShapeTop - 1;\n      const indexShapeAlmostTop = vertexShapeAlmostTop * this.numSymbolNodes + i;\n      this.addLink(indexShapeAlmostTop, indexSymbol, 1, 0);\n      \n      for (let j = 0; j < this.numVertices; j++) {     \n        // Define the jth link of the shape (e.g., if numVertices is 6, shape is 6-sided polygon).\n        const index = j * this.numSymbolNodes + i;\n        const indexShapeNext = (index + this.numSymbolNodes) % this.numNodes;\n        this.addLink(index, indexShapeNext, 0, 0.7);\n      \n        // Define the jth link of the spiral which spirals around the shapes. Two spirals are used\n        // for better stability.\n        const indexSpiralNext =\n          (j + 1) % this.numVertices * this.numSymbolNodes + (i + 1) % this.numSymbolNodes;            \n        this.addLink(index, indexSpiralNext, 0.65, 0.5);\n        this.addLink(index, indexSpiralNext, 0.65, 0.5);\n      }\n    }\n  }\n\n  /**\n   * Add a link of the graph to linksData[].\n   * @param {Number} indexSource The index of the source node of the link.\n   * @param {Number} indexTarget The index of the target node of the link.\n   * @param {Number} The strength of the link, or 0 for use default strength.\n   * @param {Number} opacity The opacity of the link.\n   * @private\n   */\n  addLink(indexSource, indexTarget, strength, opacity) {\n    this.linksData.push({\n      'source': indexSource.toString(),\n      'target': indexTarget.toString(),\n      '_strength' : strength,\n      'opacity' : opacity,\n      '_opacity' : opacity});\n    this.nodesData[indexSource].linkCount++;\n    this.nodesData[indexTarget].linkCount++;\n  }\n\n  /**\n   * Create the d3 simulation of the force-directed graph. Nodes and links must be added before\n   * calling this function.\n   * @private\n   */\n  createSimulation() {\n    // Create a new simulation containing the nodes.\n    this.simulation = d3.forceSimulation(this.nodesData);\n\n    // Add a charge to each node and a centering force.\n    this.simulation\n      .force('charge', d3.forceManyBody()\n        .strength((d) => {\n          return d.index < this.numSymbolNodes ?\n            this.forceManyBodyStrengthSymbolNodes : this.forceManyBodyStrengthNonSymbolNodes;\n        }))\n      .force('center', d3.forceCenter(this.simulationWidth / 2, this.simulationHeight / 2));\n\n    // Add the links, with the strength of the force of a link optionally specified by the link's\n    // _strength.\n    const link_force =  d3.forceLink(this.linksData)\n      .strength((d) => {\n        return d._strength > 0 ?\n          d._strength :\n          1 / Math.min(d.source.linkCount, d.target.linkCount); // default\n      })\n      .distance(this.linkDistance);        \n      this.simulation.force('links', link_force);\n\n    // Call tick() for every tick.\n    this.simulation.on('tick', this.tick);\n\n    // Set the decay rate to zero to have the simulation run forever at the current alpha.\n    this.simulation.alphaDecay(0);\n\n    // Rotate the symbol using a d3 interval.\n    if (this.rotateAmount)\n      d3.interval(this.rotate, this.rotateTimeMs);\n  }\n\n  /**\n   * Set up PixiJS to draw the simulation using WebGL (with Canvas fallback for older platforms).\n   * @private\n   */\n  pixiSetup() {\n    // Disable PIXI console log message.\n    PIXI.utils.skipHello();\n    \n    // Create PixiJS WebGL renderer element to hold the force-directed graph. We set the resolution\n    // to 3, then auto-resize the window back down to the correct size in order to increase the\n    // resolution. With resolution set to 1, it looks low resolution and pixelated.\n    this.stage = new PIXI.Container();\n    this.renderer = PIXI.autoDetectRenderer(\n      this.simulationWidth * this.scaleSimulationToPixi,\n      this.simulationHeight * this.scaleSimulationToPixi,\n      {antialias: true, transparent: true, resolution: 3}\n    );\n    this.renderer.autoResize = true;\n    this.pixiResizeRenderer();\n    this.element.appendChild(this.renderer.view);\n\n    // Draw circles for the nodes.\n    this.nodesData.forEach((node) => {\n      node.graphics = new PIXI.Graphics();\n      this.pixiDrawNode(node);\n      this.stage.addChild(node.graphics);\n    });\n\n    // Set up drag/drop.\n    d3.select(this.renderer.view)\n      .call(d3.drag()\n        .container(this.renderer.view)\n        .subject(() => this.simulation.find(d3.event.x, d3.event.y))\n        .on('start', this.dragStarted)\n        .on('drag', this.dragged)\n        .on('end', this.dragEnded));\n\n    // Set up graphics for the links.\n    this.linksGraphics = new PIXI.Graphics();\n    this.stage.addChild(this.linksGraphics);\n  }\n\n  /**\n   * Resize the PixiJS renderer based on the width and height.\n   * @private\n   */\n   pixiResizeRenderer() {\n    this.renderer.resize(\n      this.simulationWidth * this.scaleSimulationToPixi,\n      this.simulationHeight * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Move the PixiJS position of the specified node.\n   * @param {Object} node The node to move the position of.\n   * @private\n   */\n  pixiMoveNode(node) {\n    let { x, y, graphics } = node;\n    graphics.position =\n      new PIXI.Point(x * this.scaleSimulationToPixi, y * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Use PixiJS to draw the circle for a node.\n   * @param {Object} node The node to draw the circle for.\n   * @param {Number} selectedNodeMagnitude If this is the currently selected node, indicates the\n   * magnitude percentage (0 - 1.0) of the selection. A value of 0 indicates that this is not the\n   * currently selected node.\n   * @private\n   */\n  pixiDrawNode(node, selectedNodeMagnitude = 0) {\n    let nodeStrokeColor;\n    let nodeFillColor;\n    let nodeOpacity;\n    let nodeRadius;\n    if (selectedNodeMagnitude) {\n      // Scale the node properties based on the magnitude.\n      nodeStrokeColor = this.rgbNumberFromArray(\n        this.gradientColor(\n          this.nodeSelectedStrokeColorArray,\n          this.getNodeStrokeColorArray(node),\n          selectedNodeMagnitude));\n      nodeFillColor = this.rgbNumberFromArray(\n        this.gradientColor(\n          this.nodeSelectedFillColorArray,\n          // DCM 01.mar.2019: Always use same node fill color as stroke color.\n          this.getNodeStrokeColorArray(node),\n          //this.props.logoMode ? this.getNodeStrokeColorArray(node) : this.nodeFillColorArray,\n          selectedNodeMagnitude));\n      nodeOpacity =\n        this.nodeOpacity + (this.nodeOpacitySelected - this.nodeOpacity) * selectedNodeMagnitude;\n      nodeRadius =\n        this.nodeRadius + (this.nodeRadiusSelected - this.nodeRadius) * selectedNodeMagnitude;\n    }\n    else {\n      nodeStrokeColor = this.rgbNumberFromArray(this.getNodeStrokeColorArray(node));\n      // DCM 01.mar.2019: Always use same node fill color as stroke color.\n      nodeFillColor = nodeStrokeColor;\n      //nodeFillColor = this.rgbNumberFromArray(\n      //  this.props.logoMode ?\n      //    this.getNodeStrokeColorArray(node) : this.nodeFillColorArray);\n\n      nodeOpacity = this.nodeOpacity;\n      nodeRadius = this.nodeRadius;\n    }\n\n    node.graphics.clear();\n    node.graphics.lineStyle(\n      this.nodeStrokeWidth * this.scaleSimulationToPixi,\n      nodeStrokeColor,\n      nodeOpacity);\n    node.graphics.beginFill(nodeFillColor, nodeOpacity);\n    if (selectedNodeMagnitude) {\n      node.graphics.filters = [\n        new filters.GlowFilter(\n          5,                          // distance\n          4 * selectedNodeMagnitude,  // outerStrength\n          0,                          // innerStrength\n          nodeStrokeColor,            // color\n          0.5)                        // quality\n      ]\n    }\n    else\n      node.graphics.filters = null;\n    node.graphics.drawCircle(0, 0, nodeRadius * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Use PixiJS to draw the line for a link between nodes.\n   * @param {Object} link The link to draw the line for.\n   * @param {Number} linkMagnitude Indicates the magnitude percentage (0 - 1.0) of the link opacity\n   * boost.\n   * @private\n   */\n  pixiDrawLink(link, linkMagnitude) {\n    let { source, target, opacity } = link;\n    const linkOpacity = opacity + 0.25 * (this.props.logoMode ? 1 : linkMagnitude);\n    this.linksGraphics.alpha = linkOpacity;\n    this.linksGraphics.lineStyle(\n      (this.linkStrokeWidth + this.linkStrokeWidthIncreaseAtMagnitude * linkMagnitude) *\n        this.scaleSimulationToPixi,\n      this.rgbNumberFromArray(this.getColorArray(link.index, this.linksData.length)));\n      this.linksGraphics.moveTo(\n        source.x * this.scaleSimulationToPixi, source.y * this.scaleSimulationToPixi);\n      this.linksGraphics.lineTo(\n        target.x * this.scaleSimulationToPixi, target.y * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Return the color based on the specified index and number of indices.\n   * @param {Number} index The index to return the color of.\n   * @param {Number} numIndices The total number of indices used to determine the color.\n   * @return {Array} The color arrayof the specified index.\n   * @private\n   */\n  getColorArray(index, numIndices) {\n    // These colors come from the DFINITY logo.\n    const purple = [99,38,132];\n    const pink = [237,30,121];\n    const darkOrange = [241,90,36];\n    const lightOrange = [251,176,59];\n    const blue = [41,171,226];\n\n    // Certain color transitions in the DFINITY logo are small, others are gradual.\n    const transitionPercentSmall = 0.02;\n    const transitionPercentGradual = 0.1;\n    const transitionIndicesSmall = numIndices * transitionPercentSmall;\n    const transitionIndicesGradual = numIndices * transitionPercentGradual;\n\n    // The number of indices of each color was determined by analyzing the DFINITY logo.\n    const lastPurpleIndex = numIndices * 0.15 - transitionIndicesGradual;\n    const lastPinkIndex =\n      lastPurpleIndex + transitionIndicesGradual + numIndices * 0.15 - transitionIndicesSmall;\n    const lastDarkOrangeIndex =\n      lastPinkIndex + transitionIndicesSmall + numIndices * 0.15 - transitionIndicesGradual;\n    const lastLightOrangeIndex =\n      lastDarkOrangeIndex + transitionIndicesGradual + numIndices * 0.15 - transitionIndicesSmall;\n    const lastBlueIndex =\n      lastLightOrangeIndex + transitionIndicesSmall + numIndices * 0.4 - transitionIndicesSmall;\n\n    // Determine the color based on the color zone the index is in.\n    if (index <= lastPurpleIndex)\n      return purple;\n    else if (index <= lastPurpleIndex + transitionIndicesGradual)\n    {\n      const percentage = (index - lastPurpleIndex) / transitionIndicesGradual;\n      return this.gradientColor(pink, purple, percentage);\n    }\n    else if (index <= lastPinkIndex)\n      return pink;\n    else if (index <= lastPinkIndex + transitionIndicesSmall)\n    {\n      const percentage = (index - lastPinkIndex) / transitionIndicesSmall;\n      return this.gradientColor(darkOrange, pink, percentage);\n    }\n    else if (index <= lastDarkOrangeIndex)\n      return darkOrange;\n    else if (index <= lastDarkOrangeIndex + transitionIndicesGradual)\n    {\n      const percentage = (index - lastDarkOrangeIndex) / transitionIndicesGradual;\n      return this.gradientColor(lightOrange, darkOrange, percentage);\n    }\n    else if (index <= lastLightOrangeIndex)\n      return lightOrange;\n    else if (index <= lastLightOrangeIndex + transitionIndicesSmall)\n    {\n      const percentage = (index - lastLightOrangeIndex) / transitionIndicesSmall;\n      return this.gradientColor(blue, lightOrange, percentage);\n    }     \n    else if (index <= lastBlueIndex)\n      return blue;\n    else\n    {\n      const percentage = (index - lastBlueIndex) / transitionIndicesSmall;\n      return this.gradientColor(purple, blue, percentage);\n    }\n  }\n\n  /**\n   * Return the gradient color based on the specified parameters.\n   * @param {Array} color1 The RGB array of color 1.\n   * @param {Array} color2 The RGB array of color 2.\n   * @param {Number} percent The percentage of the gradient.\n   * @return {Array} The RGB array of the gradient color.\n   * @private\n   */\n  gradientColor(color1, color2, percent) {\n    const p1 = percent;\n    const p2 = 1 - p1;\n    const rgb = [\n      Math.round(color1[0] * p1 + color2[0] * p2),\n      Math.round(color1[1] * p1 + color2[1] * p2),\n      Math.round(color1[2] * p1 + color2[2] * p2)];\n    return rgb;\n  }\n\n  /**\n   * Return the RGB color number corresponding to the specified RGB color array.\n   * @param {Array} array The RGB array.\n   * @return {Number} The RGB color number.\n   * @private\n   */\n  rgbNumberFromArray(array) {\n    let color = 0;\n    array.forEach(element => {\n      color = (color << 8) + element;\n    });\n    return Number(color);\n  }\n\n/**\n   * Return the stroke color of the specified node.\n   * @param {Object} node The node to return the stroke color of.\n   * @return {Array} The stroke color array of the specified node.\n   * @private\n   */\n  getNodeStrokeColorArray(node) {\n    return this.getColorArray(node.index % this.numSymbolNodes, this.numSymbolNodes)\n  }\n\n/**\n   * Start dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragStarted(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    const isSimulationRunning = this.simulation.alphaDecay() === 0;\n    if (!isSimulationRunning) {\n      if (!d3.event.active)\n        this.simulation.alphaTarget(0.3).restart();\n    }\n    d3.event.subject.fx = d3.event.subject.x;\n    d3.event.subject.fy = d3.event.subject.y;\n  }\n\n  /**\n   * Continue dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragged(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    d3.event.subject.fx = d3.event.x;\n    d3.event.subject.fy = d3.event.y;\n  }\n\n  /**\n   * Stop dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragEnded(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    const isSimulationRunning = this.simulation.alphaDecay() === 0;\n    if (!isSimulationRunning) {\n      if (!d3.event.active)\n        this.simulation.alphaTarget(0);\n    }\n    d3.event.subject.fx = d3.event.subject._fx;\n    d3.event.subject.fy = d3.event.subject._fy;\n  }\n\n  /**\n   * Update the node and link positions on each tick of the simulation.\n   * @private\n   */\n  tick() {\n    // Move the node positions.\n    this.nodesData.forEach((node) => { this.pixiMoveNode(node); });\n\n    // Animate the selected node to grow larger and change to white, then shrink smaller and change\n    // back to original colors.\n    if (this.newBlockNodeStartTime != null) {\n      const node = this.nodesData[this.selectedNodeIndex];\n      const elapsedMs = new Date() - this.newBlockNodeStartTime;\n      if (elapsedMs > this.newBlockNodeTimerMs) {\n        // Draw a normal node circle.\n        this.pixiDrawNode(node);\n\n        // Disable new block node timer.\n        this.newBlockNodeStartTime = null;\n      }\n      else {\n        // Calculate the magnitude based on the timer.\n        const selectedNodeMagnitude =\n          (elapsedMs <= this.newBlockNodeTimerMs / 2 ?\n            elapsedMs :\n            this.newBlockNodeTimerMs - elapsedMs) /\n          (this.newBlockNodeTimerMs / 2);\n\n        // Draw a modifified node circle based on the magnitude.\n        this.pixiDrawNode(node, selectedNodeMagnitude);\n      }\n    }\n\n    // Calculate link magnitude.\n    let linkMagnitude = 0;\n    if (this.newBlockLinksStartTime != null) {\n      const elapsedMs = new Date() - this.newBlockLinksStartTime;\n      if (elapsedMs > this.newBlockLinksTimerMs) {\n        // Disable new block links timer.\n        this.newBlockLinksStartTime = null;\n      }\n      else {\n        // Calculate the magnitude based on the timer.\n        linkMagnitude =\n          elapsedMs <= this.newBlockLinksTimerMs / 3 ?\n            elapsedMs / (this.newBlockLinksTimerMs / 3) :\n            (this.newBlockLinksTimerMs - elapsedMs) /\n              (this.newBlockLinksTimerMs * 2 / 3);\n      }\n    }\n\n    // Draw lines for the links.\n    this.linksGraphics.clear();\n    this.linksData.forEach((link) => {\n      this.pixiDrawLink(link, linkMagnitude);\n    });\n    this.linksGraphics.endFill();\n\n    this.renderer.render(this.stage);\n  }\n\n  /**\n   * Rotate the symbol.\n   * @param {Number} elapsed Elapsed time since the timer became active.\n   * @private\n   */\n  rotate(elapsed) {\n    // In order to increase efficiency, it might be possible to decrease the frequency at which we\n    // rotate, then use d3 transition so that the movement is smooth. The problem is, non-symbol\n    // nodes will still be moving based on the simulation, so it's unknown whether this will\n    // actually improve performance. Since it does not seem like d3.interval() can be counted on to\n    // call this function with precision, this may not be a feasible approach, since if you do not\n    // know when the next call will be, you cannot know how long to make the transition.\n    // See webpage \"D3.selectAll(...).transition() Explained\"\n    // (http://bl.ocks.org/Kcnarf/9e4813ba03ef34beac6e)\n\n    for (let i = 0; i < this.numSymbolNodes; i++) {\n      this.rotateOffset += this.rotateAmount;\n      const pos = this.getNodePosition(i);\n      this.nodesData[i].fx = this.nodesData[i]._fx = pos[0];\n      this.nodesData[i].fy = this.nodesData[i]._fy = pos[1];\n    }\n  }\n}\n\nexport default DfinitySymbolD3;\n","/**\n * @file ImageLinkGrid\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid\n} from '@material-ui/core';\nimport Fade from 'react-reveal/Fade';\n\n/**\n * This component displays a grid of images that link to other pages.\n */\nclass ImageLinkGrid extends Component {\n  static propTypes = {\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string,\n    /**\n     * An array of objects describing the image links, where each object contains:\n     *  src: The <img> src attribute.\n     *  height: The <img> height attribute.\n     *  alt: The <img> alt attribute.\n     *  href: The <a> href attribute.\n     */    \n    imageLinks: PropTypes.array.isRequired,\n    /**\n     * The Material-UI justify prop to apply to each row.\n     * @see See [Material-UI Grid documentation](https://material-ui.com/api/grid/).\n     */\n    justifyRow: PropTypes.string,\n    /**\n     * The amount of space between rows.\n     */\n    marginBetweenRows: PropTypes.number,\n    /**\n     * The number of images per row.\n     */\n    perRow: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a ImageLinkGrid object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {widths: [], maxHeight: 0};\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    this.calculateMaxImageDimensions();\n  }\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @param {Object} prevProps The previous props.\n   * @public\n   */\n  componentDidUpdate(prevProps) {\n    // Determine whether the props have changed.\n    let arePropsChanged = false;\n    const { imageLinks } = this.props;\n    if (imageLinks.length === prevProps.imageLinks.length) {\n      imageLinks.forEach((imageLink, index) => {\n        if (imageLink.src !== prevProps.imageLinks[index].src ||\n            imageLink.height !== prevProps.imageLinks[index].height)\n          arePropsChanged = true;\n      });\n    }\n    else\n      arePropsChanged = true;\n\n    // Only calculate max image dimensions if props have changed, otherwise we would cause an\n    // infinite loop of updating the state.\n    if (arePropsChanged)\n      this.calculateMaxImageDimensions();\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      className,\n      imageLinks,\n      justifyRow,\n      marginBetweenRows,\n      perRow\n    } = this.props;\n    const { widths } = this.state;\n\n    // Make the container slightly taller than the max image height to account for Grid bug where\n    // there are a few pixels of whitespace added under the image. This '+ 4' can be removed once\n    // the Grid bug is fixed.\n    const containerHeight = this.state.maxHeight + 4;\n\n    // The image grid is an array of rows, where each row is an array of image objects. Creating\n    // a two-dimensional array like this is an extra step, but makes the code below more readable.\n    // TODO: Consider an alternate approach to solve the problem of the center column of 3-item rows\n    // not being centered. Use the same maxWidth for all cells. For cells on left, left align. For\n    // cells on right, right align. For all other cells, center. To do this, we'd likely need a cell\n    // within a cell, so that columns could first be centered relative to the column, then placed\n    // in a second wrapper cell (Grid) aligned either left, right, or center. Would need to test\n    // with different row lengths and numbers of images to see what effect it has on spacing for all\n    // conditions. It seems possible this would look wrong for rows longer than 3, since the spacing\n    // at the edges could be greater because the cell within the cell at the edges is not centered.!!!\n    let imageLinkGrid = [];\n    let maxWidthColumn = Array(perRow).fill(0);\n    for (let i = 0; i < imageLinks.length;) {\n      let row = [];\n      const isShortRow = imageLinks.length - i < perRow;\n      for (var j = 0; j < perRow && i < imageLinks.length; j++) {\n        // Do not update maxWidthColumn[j] if this is a short row (last row with fewer columns).\n        if (!isShortRow && widths[i])\n          maxWidthColumn[j] = Math.max(widths[i], maxWidthColumn[j]);\n        row.push(imageLinks[i++]);\n      }\n      imageLinkGrid.push(row);\n    }\n    \n    return (\n      <div className={className}>\n        {imageLinkGrid.map((row, rowIndex) => {\n          const isShortRow = row.length < perRow;\n          return (\n            <Grid container\n              direction='row'\n              // Always set justify='space-around' for a short row (last row with fewer columns).\n              justify={isShortRow ? 'space-around' : (justifyRow || 'space-between')}\n              alignItems='center'\n              key={rowIndex}\n              style={{ marginTop: (rowIndex && marginBetweenRows) ? marginBetweenRows : 0 }}\n            >\n              {row.map((imageLink, columnIndex) => {\n                const index = rowIndex * perRow + columnIndex;\n                return (\n                  <Grid container\n                    direction='column'\n                    justify='center'\n                    alignItems='center'\n                    key={columnIndex}\n                    // Do not use maxWidthColumn[j] if this is a short row (last row with fewer\n                    // columns).\n                    style={{\n                      width: isShortRow ? widths[index] : maxWidthColumn[columnIndex],\n                      height: containerHeight\n                    }}\n                  >\n                    <Grid item>\n                      <a href={imageLink.href} target='_blank' rel='noopener noreferrer'>\n                        <Fade\n                          bottom\n                          delay={index * 50}\n                          timeout={500}\n                        >\n                          <img\n                            src={imageLink.src}\n                            height={imageLink.height}\n                            alt={imageLink.alt}>\n                          </img>\n                        </Fade>\n                      </a>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          );\n        })}\n      </div>\n    );\n  }\n\n  /**\n   * Calculate the maximum width and height of all images by loading the images. This allows us to\n   * create Grid containers for the images which are all the same size. An image will be\n   * horizontally and vertically centered in its container.\n   * @private\n   */\n  calculateMaxImageDimensions() {\n    const { imageLinks } = this.props;\n    this.setState({\n      widths: Array(imageLinks.length).fill(0),\n      maxHeight: 0\n    });\n\n    // Calculate the widths[] and maxHeight of the images by loading them.\n    imageLinks.forEach((imageLink, index) => {\n      const img = new Image();\n      img.onload = event => {\n        const { naturalWidth, naturalHeight } = event.currentTarget;\n        if (naturalHeight) {\n          // Scale width from natural width to image link width.\n          const width = imageLink.height / naturalHeight * naturalWidth;\n          this.setState(prevState => ({\n            widths: [\n              ...prevState.widths.slice(0, index),\n              width,\n              ...prevState.widths.slice(index + 1)\n            ],\n            maxHeight: Math.max(imageLink.height, prevState.maxHeight)\n          }));\n        }\n      }\n      // Setting src after we have set the onload event will cause the event to be triggered after\n      // the image has loaded.\n      img.src = imageLink.src;\n    });\n  }\n}\n\nexport default ImageLinkGrid;\n","/**\n * @file AboutPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Button,\n  Grid,\n  Paper,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport MailIcon from '@material-ui/icons/MailOutline';\nimport { Parallax } from 'react-parallax';\nimport Fade from 'react-reveal/Fade';\nimport Flip from 'react-reveal/Flip';\nimport LightSpeed from 'react-reveal/LightSpeed';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport CoinbaseCommerceButton from 'react-coinbase-commerce';\nimport 'react-coinbase-commerce/dist/coinbase-commerce-button.css';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport DfinitySymbolD3 from '../DfinitySymbolD3/DfinitySymbolD3';\nimport ImageLinkGrid from '../ImageLinkGrid/ImageLinkGrid';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\nimport bannerXHorizon from './banner-x-horizon.png';\nimport dfinityExplorerLogo from './dfinity-explorer-logo-large.png';\nimport apolloLogoDark from './apollo-logo-dark-mode.png';\nimport apolloLogoLight from './apollo-logo-light-mode.png';\nimport dfinityLogoDark from './dfinity-logo-dark-mode.png';\nimport dfinityLogoLight from './dfinity-logo-light-mode.png';\nimport githubOctocat from './github-octocat.png';\nimport graphqlLogo from './graphql-logo.png';\nimport materialUiLogo from './material-ui-logo.png';\nimport nomicsLogoDark from './nomics-logo-dark-mode.png';\nimport nomicsLogoLight from './nomics-logo-light-mode.png';\nimport postgresLogoDark from './postgresql-logo.png';\nimport postgresLogoLight from './postgresql-logo-text.png';\nimport prismaLogoDark from './prisma-logo-dark-mode.png';\nimport prismaLogoLight from './prisma-logo-light-mode.png';\nimport reactLogo from './react-logo-text.png';\nimport styledComponentsLogoDark from './styled-components-logo-dark-mode.png';\nimport styledComponentsLogoLight from './styled-components-logo-light-mode.png';\n\nconst PaperParallax = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorBodyBackground};\n    /* Allows shadow to overlap the element below it. */\n    position: relative;\n  }\n`;\n\nconst GridParallax = styled(Grid)`\n  && {\n    height: 280px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: 200px;       \n      `\n    }\n  }\n`;\n\nconst TypographyParallax = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 200;\n    color: ${props => props.theme.colorAboutHeaderText};  \n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.SM && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};\n      `)\n    }\n  }\n`;\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: 96px;\n    padding-bottom: 96px;\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.SM && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-top: 64px;\n        padding-bottom: 64px;\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n      `)\n    }\n  }\n`;\n\nconst GridSectionPrimary = styled(GridSection)`\n  && {\n    background: ${props => props.theme.colorAboutBackgroundPrimary};\n  }\n`;\n\nconst GridSectionSecondary = styled(GridSection)`\n  && {\n    background: ${props => props.theme.colorAboutBackgroundSecondary};\n  }\n`;\n\nconst GridItem = styled(Grid)`\n  && {\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        width: calc(50% - ${Constants.ABOUT_PAGE_MARGIN_LG/2 + 'px'});\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        width: calc(50% - ${Constants.ABOUT_PAGE_MARGIN_MD/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridImageLeft = styled(GridItem)`\n  && {\n    order: 1;\n  }\n`;\n\nconst GridImageRight = styled(GridItem)`\n  && {\n    order: 2;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 1;\n      `\n    }\n  }\n`;\n\nconst GridSymbolLeft = styled(GridImageLeft)`\n  && {\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-top: -32px;\n        margin-bottom: -32px;     \n      `\n    }\n  }\n`;\n\nconst GridText = styled(GridItem)`\n  && {\n    ${({ breakpoint }) =>\n    (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        margin-top: 48px;\n      `\n    }\n  }\n`;\n\nconst GridTextLeft = styled(GridText)`\n  && {\n    order: 1;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 2;\n      `\n    }\n  }\n`;\n\nconst GridTextRight = styled(GridText)`\n  && {\n    order: 2;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 2;\n      `\n    }\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 300;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\n// From the Material Design documentation: \"The ideal length for legibility of body copy is 40-60\n// characters per line.\"\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nconst StyledA = styled.a`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst ImgSection = styled.img`\n  && {\n    max-width: 100%;\n    max-height: 300px;\n  }\n`;\n\nconst ButtonSubscribe = styled(Button)`\n  && {\n    height: 48px;\n    border-radius: 24px;\n    margin-top: 24px;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n    font-weight: 400;\n    text-transform: capitalize;\n    background: ${props => props.theme.colorBodyButtonBackground};\n    color: ${props => props.theme.colorBodyButtonText};\n    &:hover {\n      background: ${props => props.theme.colorBodyButtonHoverBackground};\n      color: ${props => props.theme.colorBodyButtonHoverText};\n    }    \n  }\n`;\n\nconst MailIconButton = styled(MailIcon)`\n  && {\n    margin-right: 14px;\n  }\n`;\n\nconst SpanHeart = styled.span`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n  }\n`;\n\nconst ButtonDonate = styled(CoinbaseCommerceButton)`\n  && {\n    height: 48px;\n    border: none;\n    border-radius: 24px;\n    margin-top: 24px;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n    font-weight: 400;\n    background: ${props => props.theme.colorBodyButtonBackground};\n    color: ${props => props.theme.colorBodyButtonText};\n    &:hover {\n      cursor: pointer;\n      background: ${props => props.theme.colorBodyButtonHoverBackground};\n      color: ${props => props.theme.colorBodyButtonHoverText};\n    }    \n  }\n`;\n\nconst SvgIconButton = styled(SvgIcon)`\n  && {\n    margin-right: 14px;\n  }\n`;\n\nconst PaperTwitter = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorAboutTwitterBackground};\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        max-width: 640px;\n        margin: auto;\n      `\n    }\n  }\n`;\n\nconst ImageLinkGridThanks = styled(ImageLinkGrid)`\n  && {\n    margin-top: ${Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT/2 + 'px'};\n  }\n`;\n\n/**\n * Component for the about page.\n */\nclass AboutPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * True if the desktop drawer (large screens) is open.\n     */    \n    isDesktopDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.getHeader()}\n        {this.getSectionMission()}\n        {this.getSectionOpenSource()}\n        {this.getSectionCommunity()}\n        {this.getSectionContributors()}\n        {this.getSectionThanks()}\n      </div>\n    );\n  }\n\n  /**\n   * Return the elements for the header based on the current breakpoint.\n   * @return {Object} The elements for the header based on the current breakpoint.\n   * @private\n   */\n  getHeader()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <PaperParallax elevation={2}>\n        <Fade timeout={1200}>\n          <Parallax bgImage={bannerXHorizon} bgImageAlt='banner' bgImageStyle={{marginTop: '-100px'}} strength={500}>\n            <GridParallax container direction='column' justify='center' alignItems='flex-start' breakpoint={breakpoint}>\n              <Grid item>\n                <TypographyParallax breakpoint={breakpoint}>\n                  An open-source block explorer\n                  <br />\n                  built by the DFINITY community\n                </TypographyParallax>\n              </Grid>\n            </GridParallax>\n          </Parallax>\n        </Fade>\n      </PaperParallax>\n    );\n  }\n\n  /**\n   * Return the elements for the Mission section based on the current breakpoint.\n   * @return {Object} The elements for the Mission section based on the current breakpoint.\n   * @private\n   */\n  getSectionMission()\n  {\n    const { breakpoint, isThemeDark } = this.props;\n\n    return (\n      <GridSectionPrimary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridSymbolLeft item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <DfinitySymbolD3\n              width={this.getDfinitySymbolD3Width()}\n              isThemeDark={isThemeDark}\n            />\n          </Grid>\n        </GridSymbolLeft>\n        <GridTextRight item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Mission\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Our mission is to provide a bridge between you and the '}\n              <StyledA href={Constants.URI_ABOUT_DFINITY} target='_blank' rel='noopener noreferrer'>DFINITY</StyledA>\n              {' Internet Computer, allowing you to easily search for and retrieve information '}\n              {'which is useful in a format that is understandable, with everything you want to '}\n              {'know right at your fingertips.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'DFINITY aims to build their organization into a “NASA for decentralization”. '}\n              {'There have in fact been '}\n              <StyledA href={Constants.URI_NASA_EXPLORER} target='_blank' rel='noopener noreferrer'>89 NASA “Explorer” missions</StyledA>\n              {' since 1958, carrying a wide variety of scientific investigations. We want DFINITY '}\n              {'Explorer to be the perfect vehicle to explore the DFINITY universe.'}\n              &nbsp;&nbsp;🚀\n            </TypographyBody>\n          </Fade>\n        </GridTextRight>\n      </GridSectionPrimary>\n    );\n  }\n\n  /**\n   * Return the elements for the Open Source section based on the current breakpoint.\n   * @return {Object} The elements for the Open Source section based on the current breakpoint.\n   * @private\n   */\n  getSectionOpenSource()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionSecondary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridTextLeft item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Open, Transparent, Trusted\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'DFINITY Explorer is an open-source project under the '}\n              <StyledA href={Constants.URI_GITHUB_MIT_LICENSE} target='_blank' rel='noopener noreferrer'>MIT license</StyledA>\n              {', providing transparency, reliability, and security.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'We believe that all block explorers of public blockchains should be open source. '}\n              {'If you’re going to trust a block explorer to provide timely, accurate, and '}\n              {'uncensored information, the code should be open for all to see.'}\n            </TypographyBody>\n          </Fade>\n        </GridTextLeft>\n        <GridImageRight item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <Flip right timeout={800}>\n              <ImgSection\n                src={dfinityExplorerLogo}\n                alt='logo'>\n              </ImgSection>\n            </Flip>\n          </Grid>\n        </GridImageRight>\n      </GridSectionSecondary>\n    );\n  }\n\n  /**\n   * Return the elements for the Community section based on the current breakpoint.\n   * @return {Object} The elements for the Community section based on the current breakpoint.\n   * @private\n   */\n  getSectionCommunity()\n  {\n    const { breakpoint, isThemeDark } = this.props;\n\n    const theme = isThemeDark ? 'dark' : 'light';\n    return (\n      <GridSectionPrimary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridImageLeft item breakpoint={breakpoint}>\n          <Fade timeout={2000}>\n            {/* Twitter card looks better at elevation 2 than 1, since card/body are same color. */}\n            <PaperTwitter elevation={2} breakpoint={breakpoint}>\n              <TwitterTimelineEmbed\n                sourceType='profile'\n                screenName='dfinityexplorer'\n                theme={theme}\n                options={{height: 432}}\n                // Setting key here is a bit of a hack. Since TwitterTimelineEmbed only uses the theme\n                // prop when it mounts, the TwitterTimelineEmbed theme will not change if the user changes\n                // the theme after the page has loaded. By setting key to the theme string, we can force a\n                // remount of TwitterTimelineEmbed when the theme changes, so that it picks up the change\n                // to its theme prop. \n                key={theme}\n                noFooter\n                transparent\n              />\n            </PaperTwitter>\n          </Fade>\n        </GridImageLeft>\n        <GridTextRight item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Community\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Follow '}\n              <StyledA href={Constants.URI_TWITTER_DFINITY_EXPLORER} target='_blank' rel='noopener noreferrer'>@dfinityexplorer</StyledA>\n              {' on Twitter to learn about the latest DFINITY-related news, videos, and events.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Learn more about our project on '}\n              <StyledA href={Constants.URI_GITHUB_DFINITY_EXPLORER_PROJECT} target='_blank' rel='noopener noreferrer'>GitHub</StyledA>\n              {' and in our '}\n              <StyledA href={Constants.URI_GITHUB_DFINITY_EXPLORER_WIKI} target='_blank' rel='noopener noreferrer'>wiki</StyledA>\n              {'.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Join our mailing list today to stay up to date on development of our project. '}\n              {'We’ll let you know when DFINITY Explorer goes live along with the DFINITY network '}\n              {'later in 2019.'}\n            </TypographyBody>\n            {/* Begin MailChimp Signup Form */}\n            <form action='https://dfinityexplorer.us18.list-manage.com/subscribe/post?u=059dc252f5f0cea2fec413c42&amp;id=4ebbd6c248' method='post' id='mc-embedded-subscribe-form' name='mc-embedded-subscribe-form' className='validate' target='_blank' rel='noopener noreferrer' noValidate>\n              {/* real people should not fill this in and expect good things - do not remove this or risk form bot signups  */}\n              <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden='true'>\n                <input type='text' name='b_059dc252f5f0cea2fec413c42_4ebbd6c248' tabIndex='-1' defaultValue='' />\n              </div>\n              <div className='clear'>\n                <ButtonSubscribe type='submit'>\n                  <MailIconButton />\n                  Join Our Mailing List\n                </ButtonSubscribe>\n              </div>\n            </form>\n            {/* End MailChimp Signup Form */}\n          </Fade>\n        </GridTextRight>\n      </GridSectionPrimary>\n    );\n  }\n  \n  /**\n   * Return the elements for the Contributors section based on the current breakpoint.\n   * @return {Object} The elements for the Contributors section based on the current breakpoint.\n   * @private\n   */\n  getSectionContributors()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionSecondary container\n        direction='row'\n        justify='space-between'\n        alignItems='center'\n        breakpoint={breakpoint}\n      >\n        <GridTextLeft item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Contributors\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'DFINITY Explorer is a cooperative effort, made with '}\n              <SpanHeart>♥</SpanHeart>\n              {' by '}\n              <StyledA href={Constants.URI_GITHUB_DYLAN} target='_blank' rel='noopener noreferrer'>@dylancm4</StyledA>\n              {', '}\n              <StyledA href={Constants.URI_GITHUB_TODD} target='_blank' rel='noopener noreferrer'>@toddkitchens</StyledA>\n              {', and a friendly bunch of '}\n              <StyledA href={Constants.URI_GITHUB_CONTRIBUTORS} target='_blank' rel='noopener noreferrer'>contributors</StyledA>\n              {' from the DFINITY community. We are passionate about DFINITY and we want to build '}\n              {'things to help it to succeed.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Make a donation to help support the project! Open-source development is powered '}\n              {'by the support of people like you.'}\n            </TypographyBody>\n            <ButtonDonate checkoutId={Constants.COINBASE_CHECKOUT_ID}>\n              <Grid container direction='row' justify='flex-start' alignItems='center'>\n                <Grid item>\n                  <SvgIconButton>\n                    <path d={Constants.ICON_SVG_PATH_BITCOIN} />\n                  </SvgIconButton>\n                </Grid>\n                <Grid item>\n                  Donate With Crypto\n                </Grid>\n              </Grid>\n            </ButtonDonate>\n          </Fade>\n        </GridTextLeft>\n        <GridImageRight item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <LightSpeed right timeout={800}>\n              <ImgSection\n                src={githubOctocat}\n                alt='GitHub Octocat'>\n              </ImgSection>\n            </LightSpeed>\n          </Grid>\n        </GridImageRight>\n      </GridSectionSecondary>\n    );\n  }\n\n  /**\n   * Return the elements for the Thanks section based on the current breakpoint.\n   * @return {Object} The elements for the Thanks section based on the current breakpoint.\n   * @private\n   */\n  getSectionThanks() {\n    // Possibly add: GraphQL Yoga, Recharts!!!\n    const { breakpoint, isThemeDark } = this.props;\n    \n    // Adjust heights based on the perceived size of images (i.e., some images contain smaller logos\n    // to make room for the text, so those images need to be enlarged).\n    const reactHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.3;\n    const styledComponentsHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.4;\n    const materialUiHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const nomicsHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 0.9;\n    const apolloHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const graphqlHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.4;\n    const prismaHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.0;\n    const postgresHeight =\n      Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * (isThemeDark ? 1.0 : 1.4);\n    const dfinityHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.2;\n\n    // Define the image link objects for the ImageLinkGrid.\n    const imageLinks = [\n      {\n        src: reactLogo,\n        height: reactHeight,\n        alt: 'React logo',\n        href: Constants.URI_ABOUT_REACT\n      },\n      {\n        src: isThemeDark ? styledComponentsLogoDark : styledComponentsLogoLight,\n        height: styledComponentsHeight,\n        alt: 'Styled Components logo',\n        href: Constants.URI_ABOUT_STYLED_COMPONENTS\n      },\n      {\n        src: materialUiLogo,\n        height: materialUiHeight,\n        alt: 'Material-UI logo',\n        href: Constants.URI_ABOUT_MATERIAL_UI\n      },\n      {\n        src: isThemeDark ? nomicsLogoDark : nomicsLogoLight,\n        height: nomicsHeight,\n        alt: 'Nomics logo',\n        href: Constants.URI_ABOUT_NOMICS\n      },\n      {\n        src: isThemeDark ? apolloLogoDark : apolloLogoLight,\n        height: apolloHeight,\n        alt: 'Apollo logo',\n        href: Constants.URI_ABOUT_APOLLO\n      },\n      {\n        src: graphqlLogo,\n        height: graphqlHeight,\n        alt: 'GraphQL logo',\n        href: Constants.URI_ABOUT_GRAPHQL\n      },\n      {\n        src: isThemeDark ? prismaLogoDark : prismaLogoLight,\n        height: prismaHeight,\n        alt: 'Prisma logo',\n        href: Constants.URI_ABOUT_PRISMA\n      },\n      {\n        src: isThemeDark ? postgresLogoDark : postgresLogoLight,\n        height: postgresHeight,\n        alt: 'PostgreSQL logo',\n        href: Constants.URI_ABOUT_POSTGRES\n      },\n      {\n        src: isThemeDark ? dfinityLogoDark : dfinityLogoLight,\n        height: dfinityHeight,\n        alt: 'DFINITY logo',\n        href: Constants.URI_ABOUT_DFINITY\n      }\n    ];\n\n    // Calculate images per row based on the current breakpoint.\n    let imagesPerRow;\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        imagesPerRow = 1;\n        break;\n      case Breakpoints.SM:\n        imagesPerRow = 2;\n        break;\n      default:\n        imagesPerRow = 3;\n        break;\n    }\n\n    return (\n      <GridSectionPrimary container\n        direction='column'\n        justify='flex-start'\n        alignItems='stretch'\n        breakpoint={breakpoint}\n      >\n        <Grid container direction='row' justify='center' alignItems='center'>\n          <Grid item>\n            <Fade bottom timeout={500}>\n              <TypographyHeading breakpoint={breakpoint}>Special thanks to:</TypographyHeading>\n            </Fade>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <ImageLinkGridThanks\n            imageLinks={imageLinks}\n            perRow={imagesPerRow}\n            justifyRow={breakpoint === Breakpoints.XS ? 'center' : 'space-between'}\n            marginBetweenRows={Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT / 2}\n          />\n        </Grid>\n      </GridSectionPrimary>\n    );\n  }\n\n  /**\n   * Return the width of the DfinitySymbolD3 component based on the current breakpoint.\n   * @return {Number} The width of the DfinitySymbolD3 component based on the current breakpoint.\n   * @private\n   */\n  getDfinitySymbolD3Width() {\n    const { breakpoint, isDesktopDrawerOpen } = this.props;\n    const contentWidth =  window.innerWidth - (isDesktopDrawerOpen ? Constants.DRAWER_WIDTH : 0);\n\n    let width;\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        width = contentWidth - Constants.ABOUT_PAGE_MARGIN_XS*2;\n        break;\n      case Breakpoints.SM:\n        width = contentWidth - Constants.ABOUT_PAGE_MARGIN_SM*2;\n        break;\n      case Breakpoints.MD:\n        width = contentWidth*0.5 - Constants.ABOUT_PAGE_MARGIN_MD*3/2;\n        // This is a bit of a hack, but we scale the symbol slightly larger because it does not fill\n        // its window all the way to the edges.\n        width *= 1.2;\n        break;\n      default:\n        width = contentWidth*0.5 - Constants.ABOUT_PAGE_MARGIN_LG*3/2;\n        width *= 1.2;\n        break;\n    }\n    return width;\n  }\n}\n\nexport default AboutPage;\n","/**\n * @file querySearchGetType\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get type of object being searched for based on query string.\n * @return {String} The type of object being searched for.\n */\nconst querySearchGetType = gql`\n  query SearchGetType($query: String!) {\n    searchGetType(query: $query) {\n      type\n    }\n  }\n`;\n\nexport default querySearchGetType;\n","/**\n * @file SearchPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport querySearchGetType from '../../graphql/querySearchGetType';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport Constants from '../../constants';\n\nconst StyledTypography = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: 1em;\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst ExplorerTypography = styled(StyledTypography)`\n  && {\n    font-weight: 400;\n    font-size: 2em;\n    /* Why is letter-spacing set to 0 here?!!! */\n    letter-spacing: 0;\n    color: ${Constants.COLOR_DFINITY_LIGHT_ORANGE};\n  }\n`;\n\n/**\n * The Search Page shows details about a search.\n */\nclass SearchPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { query } = this.props.match.params;\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <ExplorerTypography>Search</ExplorerTypography>\n        <Query query={querySearchGetType} variables={{ query }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <StyledTypography>Searching...</StyledTypography>              \n              );\n            else if (error)\n              return (\n                <StyledTypography>Network error</StyledTypography>             \n              );\n            else if (data.searchGetType.type === \"Block\")\n              return (\n                <Redirect to={{ pathname: `/block/${query}` }}/>\n              );\n            else if (data.searchGetType.type === \"Transaction\")\n              return (\n                <Redirect to={{ pathname: `/tx/${query}` }}/>\n              );\n            else\n              return (              \n                <StyledTypography>Sorry, this is an invalid search string.</StyledTypography>             \n              );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","/**\n * @file querySearchAutoComplete\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get auto-complete items based on query string.\n * @return {Array} The array of auto-complete items.\n */\nconst querySearchAutoComplete = gql`\n  query SearchAutoComplete($query: String!, $first: Int) {\n    searchAutoComplete(query: $query, first: $first) {\n      items\n    }\n  }\n`;\n\nexport default querySearchAutoComplete;\n","/**\n * @file DEAppBar\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Query } from 'react-apollo';\nimport styled from 'styled-components';\nimport {\n  AppBar,\n  Divider,\n  Drawer,\n  Fade,\n  Grid,\n  IconButton,\n  Input,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  SvgIcon,\n  SwipeableDrawer,\n  Toolbar,\n  Typography,\n  Zoom\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RevealFade from 'react-reveal/Fade';\nimport RevealZoom from 'react-reveal/Zoom';\nimport Downshift from 'downshift';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent'\nimport querySearchAutoComplete from '../../graphql/querySearchAutoComplete';\nimport { Breakpoints, isBreakpointLessOrEqualTo, isBreakpointGreaterOrEqualTo } from '../../utils/breakpoint';\nimport Constants from '../../constants';\nimport dfinityExplorerLogo from './dfinity-explorer-logo.png';\n\nconst StyledAppBar = styled(AppBar)`\n  && {\n    background: ${props => props.theme.colorAppBarBackground};\n    /* AppBar is above Drawer */\n    z-index: ${zIndex.drawer + 1};\n  }\n`;\n\nconst SearchAppBar = styled(AppBar)`\n  && {\n    background: white;\n    /* AppBar is above Drawer */\n    z-index: ${zIndex.drawer + 1};\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  && {\n    padding-left: 12px;\n    padding-right: 12px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      padding-left: 4px;\n      padding-right: 4px;\n    }\n  }\n`;\n\nconst SearchToolbar = styled(Toolbar)`\n  && {\n    padding-top: 4px;\n    padding-bottom: 4px;\n    padding-left: 16px;\n    padding-right: 12px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      padding-top: 4px;\n      padding-bottom: 4px;\n      padding-left: 8px;\n      padding-right: 4px;\n    }\n  }\n`;\n\nconst ImgProductIcon = styled.img`\n  && {\n    margin-left: 12px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-left: 0px;\n    }\n  }\n`;\n\n// Specify font-size in px rather than rem for app name, since it should not change based on browser\n// settings.\nconst TypographyAppName = styled(Typography)`\n  && {\n    font-family: 'Istok Web', sans-serif;\n    font-weight: bold;\n    font-size: 20px;\n    user-select: none;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst TypographyDfinity = styled(TypographyAppName)`\n  && {\n    margin-left: 12px;\n    letter-spacing: 12px;\n    color: ${props => props.theme.colorAppBarDfinityText};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-left: 8.4px;\n      letter-spacing: 8.4px;\n    }\n  }\n`;\n\n/**\n * A separate div is used for the border between DFINITY and Explorer, so that it can be\n * animated. The height is based on TypographyAppName font-size, and matches exactly what\n * \"border-right: 1px solid\" in TypographyDfinity would look like.\n */\nconst TypographyBorder = styled.div`\n  && {\n    width: 0px;\n    height: 29px;\n    border-right: ${props => '1px solid ' + props.theme.colorAppBarDfinityText};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      height: 20.3px;\n    }\n  }\n`;\n\nconst TypographyExplorer = styled(TypographyAppName)`\n  && {\n    margin-left: 14px;\n    letter-spacing: 7.5px;\n    color: ${props => props.theme.colorAppBarExplorerText};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-left: 9.8px;\n      letter-spacing: 5.25px;\n    }\n  }\n`;\n\n// Need to use new breakpoint method here and elsewhere, but probably call GetBreakpoint without drawer from render()!!!\nconst InputSearch = styled(Input)`\n  && {\n    /*\n     * margin-top is used to center the Input vertically, and depends on font-size.\n     * DCM 21.apr.2018: After updating Material-UI, margin-top had to be adjusted for all\n     * breakpoints based on trial and error.\n     */\n    margin-top: 0.65rem;\n    color: ${props => props.theme.colorSearchText};\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_SM + 'px'}) {\n      margin-top: 0.875rem;\n      /* font-size \"Body 2\" is not small enough to fit a hash, but this is smallest we should go. */\n      font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    }\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-top: 0.625rem;\n    }\n  }\n`;\n\n/**\n * List for search auto-complete list.\n */\nconst ListSearch = styled(List)`\n  && {\n    /* The List component has top and bottom padding of 8px. Remove it. */\n    padding-top: 0px;\n    padding-bottom: 0px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    color:  ${props => props.theme.colorSearchText};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_SM + 'px'}) {\n      font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    }\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      /* This font size is smaller than Material Design standards, but fits a auto-complete hash. */\n      /* BUG: A full hash pushes the close button off of the screen with this font size!!! */\n      /* This bug existed in old code too, but you could see a tiny bit of the close button!!! */\n      /* It seems like this could have to do with style={{ flexGrow: '1' }}>!!! */\n      /* For now, changing the font size smaller than 0.5625rem to avoid bug!!! */\n      /* font-size: 0.5625rem; this is the size we would like!!! */\n      font-size: 7px;\n    }\n  }\n`;\n\n/**\n * ListItem for search auto-complete list.\n */\nconst ListItemSearch = styled(ListItem)`\n  && {\n    /* Use theme for the highlighted/focused color!!! */\n    background: ${props => props.highlighted ? Constants.COLOR_GRAY_ON_WHITE : 'initial'};\n  }\n`;\n\n/**\n * SearchIcon for search auto-complete list.\n */\nconst SearchIconListSearch = styled(SearchIcon)`\n  && {\n    color: ${props => props.theme.colorSearchIcon};\n    /* Sizes here are based on ListSearch font-sizes. */\n    width: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    height: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    /*\n     * DCM 21.apr.2018: After updating Material-UI, margin-right had to be adjusted for all\n     * breakpoints based on trial and error.\n     */\n    margin-right: 0px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_SM + 'px'}) {\n      width: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n      height: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    }\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      /* BUG: 0.5625rem is the size we would like (see above)!!! */\n      width: 7px;\n      height: 7px;\n      margin-right: -7px;\n    }\n  }\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  && {\n    color: ${props => props.theme.colorAppBarTextButton};\n\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: ${props => props.theme.colorAppBarTextButton};\n      }\n    }\n  }\n`;\n\nconst StyledMenuIcon = styled(MenuIcon)`\n  && {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  && {\n    width: 32px;\n    height: 32px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  && {\n    width: 32px;\n    height: 32px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n\nconst StyledSwipeableDrawer = styled(({ ...other }) => (\n  <SwipeableDrawer {...other} classes={{ paper: 'paper' }} />\n))`\n  & .paper {\n    width: ${Constants.DRAWER_WIDTH + 'px'};\n    background: ${props => props.theme.colorDrawerBackground};\n  }\n`;\n\nconst StyledDrawer = styled(({ ...other }) => (\n  <Drawer {...other} classes={{ paper: 'paper' }} />\n))`\n  & .paper {\n    width: ${Constants.DRAWER_WIDTH + 'px'};\n    background: ${props => props.theme.colorDrawerBackground};\n    border-right:\n      ${props => props.theme.isDark ? `1px solid ${props.theme.colorBodyBackground}` : '0px'};\n  }\n`;\n\nconst StyledDivider = styled(Divider)`\n  && {\n    background: ${props => props.theme.colorDrawerDivider};\n  }\n`;\n\nconst DrawerListItemIcon = styled(ListItemIcon)``;\n\nconst DrawerListItemText = styled(({ ...other }) => (\n  <ListItemText {...other} classes={{ primary: 'primary' }} />\n))``;\n\nconst DrawerListItem = styled(ListItem)`\n  && {\n    padding-top: 12px;\n    padding-bottom: 12px;\n    ${DrawerListItemIcon} {\n      margin-left: 8px;\n      color: ${\n        props => props.selected ?\n          props.theme.colorDrawerIconTextSelected :\n          props.theme.colorDrawerIcon\n      };\n    }\n    ${DrawerListItemText} {\n      margin-left: -8px;\n      & .primary {\n        font-family: ${Constants.FONT_PRIMARY};\n        font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n        font-weight: ${props => props.selected ? 600 : 400};\n        color: ${\n          props => props.selected ?\n            props.theme.colorDrawerIconTextSelected :\n            props.theme.colorDrawerText\n        };\n      }\n    }\n  }\n`;\n\n// DCM 2019-02-02: I tried for a few hours to change the \"selected\" background color of a ListItem\n// using styled-components, but I was unsuccessful even though it seems like the code below should\n// work. I was able to change the color using the Material-UI withStyles() technique of styling:\n// https://stackoverflow.com/questions/50371315/how-to-override-material-ui-menuitem-selected-background-color\n// However, that technique does not have access to props, so it would not work well with the way\n// we're currently doing theming. There is likely a way to get this working in a way that does not\n// use styled-components, but the \"selected\" background color is not important enough to spend the\n// time on this issue right now.\n/*const DrawerListItem = styled(({ ...other }) => (\n  <ListItem classes={{ selected: 'selected' }} {...other} />\n))`\n  && {\n    background: pink;\n    &:focus {\n      background: cyan;\n    }\n    &:hover {\n      background: red;\n    }\n    // All of the above colors work, but the \"selected\" background color does not work.\n    & .selected {\n      background: blue !important;\n    }\n  }\n`;*/\n\n/**\n * The App Bar provides content and actions related to the current screen.\n */\nclass DEAppBar extends ResponsiveComponent {\n  static propTypes = {\n    /**\n     * Callback fired when the App Bar is resized.\n     */\n    handleAppBarResize: PropTypes.func,\n    /**\n     * Callback fired when the desktop drawer (large screens) menu button is clicked.\n     */\n    handleDesktopDrawerMenuClick: PropTypes.func.isRequired,\n    /**\n     * Callback fired when the mobile drawer (small screens) menu button is clicked.\n     */\n    handleMobileDrawerMenuClick: PropTypes.func.isRequired,\n    /**\n     * True if the desktop drawer (large screens) is open.\n     */    \n    isDesktopDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * True if the mobile drawer (small screens) is open.\n     */    \n    isMobileDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * Object containing information about the current react-router location.\n     */\n    location: PropTypes.object.isRequired,\n    /**\n     * Reference to the <HashRouter> element.\n     */\n    routerRef: PropTypes.object\n  };\n\n  /**\n   * Create a DEAppBar object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {\n      isSearchOn: false,\n      searchQuery: ''\n    };\n\n    this.toolbarDivRef = React.createRef();\n\n    this.maxSearchAutoCompleteItems = 6;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.handleCloseClick = this.handleCloseClick.bind(this);\n    this.handleDownshiftStateChange = this.handleDownshiftStateChange.bind(this);\n    this.handleDownshiftChange = this.handleDownshiftChange.bind(this);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.isActiveRoute = this.isActiveRoute.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { isSearchOn } = this.state;\n    return (\n      <Fragment>\n        {/* Toolbar shim to compensate for AppBar position='fixed'. */}\n        <div ref={this.toolbarDivRef}>\n          <Toolbar />\n        </div>\n        <Fade in={isSearchOn} timeout={200} mountOnEnter unmountOnExit>\n          <SearchAppBar elevation={2}>\n            {this.getToolbarSearchContent()}\n          </SearchAppBar>\n        </Fade>\n        <Fade in={!isSearchOn} timeout={200} mountOnEnter unmountOnExit>\n          <StyledAppBar elevation={2}>\n            {this.getToolbarDefaultContent()}\n          </StyledAppBar>\n        </Fade>\n        {this.getDrawer()}\n      </Fragment>\n    );\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree).\n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    // Pass App Bar height to owner.\n    if (this.props.handleAppBarResize)\n      this.props.handleAppBarResize(this.toolbarDivRef.current.offsetHeight);\n  }\n\n  /**\n   * Force the component to re-render when the window is resized.\n   * @private\n   */\n  handleWindowResize() {\n    super.handleWindowResize();\n\n    // Pass App Bar height to owner.\n    if (this.props.handleAppBarResize)\n      this.props.handleAppBarResize(this.toolbarDivRef.current.offsetHeight);\n\n    // Close the mobile drawer (small screens) when screen is resized larger, so that it does not\n    // reappear when the screen is resized smaller.\n    if (isBreakpointGreaterOrEqualTo(Breakpoints.MD) && this.props.isMobileDrawerOpen)\n      this.props.handleMobileDrawerMenuClick();\n  }\n\n  /**\n   * Return the elements for the search toolbar based on the current breakpoint.\n   * @return {Object} The elements for the search toolbar based on the current breakpoint.\n   * @private\n   */\n  getToolbarSearchContent() {\n    return (\n      <SearchToolbar variant='dense'>\n        <Grid container direction='row' justify='space-between' alignItems='flex-start' wrap='nowrap'>\n          <Grid item style={{ flexGrow: '1' }}>\n            <Downshift\n              onStateChange={this.handleDownshiftStateChange}\n              onChange={this.handleDownshiftChange}\n              selectedItem={this.state.searchQuery}\n            >\n              {({\n                getInputProps,\n                getItemProps,\n                getMenuProps,\n                isOpen,\n                inputValue,\n                highlightedIndex,\n              }) => (\n                <div>\n                  <form onSubmit={this.handleSearchSubmit}>\n                    <InputSearch\n                      {...getInputProps({\n                        autoFocus: true,\n                        disableUnderline: true,\n                        fullWidth: true,\n                        placeholder: 'Search for block, transaction, or address'\n                      })}\n                    />\n                  </form>\n                  <Query\n                    query={querySearchAutoComplete}\n                    variables={{ query: inputValue, first: this.maxSearchAutoCompleteItems }}\n                  >\n                    {({ loading, error, data }) => {\n                      if (loading || error || !data.searchAutoComplete || !isOpen)\n                        return <ListSearch />;\n                      return (    \n                        <ListSearch {...getMenuProps()}>\n                          {data.searchAutoComplete.items.map((item, index) => (\n                            <ListItemSearch\n                              disableGutters\n                              // Use number for highlighted prop instead of boolean to prevent\n                              // \"non-boolean attribute\" warning.\n                              highlighted={highlightedIndex === index ? 1 : 0}\n                              {...getItemProps({\n                                key: item,\n                                index,\n                                item\n                              })}\n                            >\n                              <ListItemIcon>\n                                <SearchIconListSearch />\n                              </ListItemIcon>\n                              {item}\n                            </ListItemSearch>\n                          ))}\n                        </ListSearch>\n                      );\n                    }}\n                  </Query>\n                </div>\n              )}\n            </Downshift>\n          </Grid>\n          <Grid item>\n            <Zoom in={true} timeout={300}>\n              <IconButton onClick={this.handleCloseClick}>\n                <StyledCloseIcon />\n              </IconButton>\n            </Zoom>\n          </Grid>\n        </Grid>\n      </SearchToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the toolbar based on the current breakpoint.\n   * @return {Object} The elements for the toolbar based on the current breakpoint.\n   * @private\n   */\n  getToolbarDefaultContent() {\n    return (\n      <StyledToolbar>\n        <Grid container alignItems='center' wrap='nowrap'>\n          <Grid item>\n            {this.getMenuButton()}\n          </Grid>\n          {this.getAppTitle()}\n          <Grid container alignItems='center' justify='flex-end' wrap='nowrap'>\n            <Grid item>\n              {this.getSearchButton()}\n            </Grid>\n          </Grid>\n        </Grid>\n      </StyledToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the menu button on the current breakpoint.\n   * @return {Object} The elements for the menu button based on the current breakpoint.\n   * @private\n   */\n  getMenuButton() {\n    const { handleMobileDrawerMenuClick, handleDesktopDrawerMenuClick } = this.props;\n    return (\n      <Zoom in={true} timeout={300}>\n        <StyledIconButton\n          onClick={\n            isBreakpointLessOrEqualTo(Breakpoints.SM) ?\n              handleMobileDrawerMenuClick: handleDesktopDrawerMenuClick\n          }\n        >\n          <StyledMenuIcon />\n        </StyledIconButton>\n      </Zoom>\n    );\n  }\n\n  /**\n   * Return the elements for the app title based on the current breakpoint.\n   * @return {Object} The elements for the app title based on the current breakpoint.\n   * @private\n   */\n  getAppTitle() {\n    return (\n      <Link\n        style={{ textDecoration: 'none' }}\n        to='/'\n      >\n        <Grid container alignItems='center' justify='flex-start' wrap='nowrap'>\n          <RevealFade timeout={500}>\n            <Grid item>\n              <ImgProductIcon\n                src={dfinityExplorerLogo}\n                height={this.getProductIconHeight()}\n                alt='logo'\n              >\n              </ImgProductIcon>\n            </Grid>\n            <Grid item>\n              <TypographyDfinity>DFINITY</TypographyDfinity>\n            </Grid>\n            <RevealZoom timeout={350}>\n              <Grid item>\n                <TypographyBorder />\n              </Grid>\n            </RevealZoom>\n            <Grid item>\n              <TypographyExplorer>ExpIorer</TypographyExplorer>\n            </Grid>\n          </RevealFade>\n        </Grid>\n      </Link>\n    );\n  }\n\n  /**\n   * Return the height of the product icon based on the current breakpoint.\n   * @return {Number} The height of the product icon based on the current breakpoint.\n   * @private\n   */\n  getProductIconHeight() {\n    if (isBreakpointLessOrEqualTo(Breakpoints.XS))\n      return 23.8;\n    else\n      return 34;\n  }\n\n  /**\n   * Return the elements for the drawer based on the current breakpoint.\n   * @return {Object} The elements for the drawer based on the current breakpoint.\n   * @private\n   */\n  getDrawer() {\n    // The Material Design documentation states: \"Modal drawer: In a responsive layout grid, at a\n    // defined minimum breakpoint of at least 600dp width, a standard drawer should be replaced with\n    // a modal drawer.\" We use a modal drawer for breakpoints xs and sm (i.e., up to 960px).\n    if (isBreakpointLessOrEqualTo(Breakpoints.SM)) {\n      return (\n        <StyledSwipeableDrawer\n          open={this.props.isMobileDrawerOpen}\n          onOpen={this.props.handleMobileDrawerMenuClick}\n          onClose={this.props.handleMobileDrawerMenuClick}\n        >\n          <div onClick={this.props.handleMobileDrawerMenuClick}>\n            {this.getDrawerContent()}\n          </div>\n        </StyledSwipeableDrawer>\n      );\n    }\n    else {\n      return (\n        <StyledDrawer variant='persistent' open={this.props.isDesktopDrawerOpen}>\n          {this.getDrawerContent()}\n        </StyledDrawer>\n      );\n    }  \n  }\n\n  /**\n   * Return the elements for the drawer content based on the current breakpoint.\n   * @return {Object} The elements for the drawer content based on the current breakpoint.\n   * @private\n   */\n  getDrawerContent() {\n    /* Use constants for paths such as 'blocks' everywhere in code!!! */\n    return (\n      <Fragment>\n        {/* Shim to compensate for AppBar position='fixed'. */}\n        <Toolbar/>\n        <List>\n          {/* Could change this to be more generic by calling map() on an array of route objects\n              which contain info such as: path, menu text, and icon.\n              See: https://stackoverflow.com/questions/50801093/material-ui-drawer-selection-how-to-route\n          */}\n          <DrawerListItem button component={Link} to='/' selected={this.isActiveRoute('/')}>\n            <DrawerListItemIcon>\n              <HomeIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Home' selected={this.isActiveRoute('/')} />\n          </DrawerListItem>\n          <StyledDivider />\n          <DrawerListItem button component={Link} to='/blocks' selected={this.isActiveRoute('/blocks')}>\n            <DrawerListItemIcon>\n              <SvgIcon>\n                <path d={Constants.ICON_SVG_PATH_BLOCK} />\n              </SvgIcon>\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Blocks' selected={this.isActiveRoute('/blocks')} />\n          </DrawerListItem>\n          <DrawerListItem button component={Link} to='/txs' selected={this.isActiveRoute('/txs')}>\n            <DrawerListItemIcon>\n              <SvgIcon>\n                <path d={Constants.ICON_SVG_PATH_TPS} />\n              </SvgIcon>\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Transactions' />\n          </DrawerListItem>\n          <DrawerListItem button component={Link} to='/accounts' selected={this.isActiveRoute('/accounts')}>\n            <DrawerListItemIcon>\n              <AccountCircleIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Accounts' />\n          </DrawerListItem>            \n          <DrawerListItem button component={Link} to='/canisters' selected={this.isActiveRoute('/canisters')}>\n            <DrawerListItemIcon>\n              <DescriptionIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Canisters' />\n          </DrawerListItem>\n          <StyledDivider />\n          <DrawerListItem button component={Link} to='/about' selected={this.isActiveRoute('/about')}>\n            <DrawerListItemIcon>\n              <InfoIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='About' />\n          </DrawerListItem>\n        </List>\n      </Fragment>\n    );\n  }\n\n  /**\n   * Return the elements for the search button on the current breakpoint.\n   * @return {Object} The elements for the search button based on the current breakpoint.\n   * @private\n   */\n  getSearchButton() {\n    return (\n      <Zoom in={true} timeout={300}>\n        <StyledIconButton onClick={this.handleSearchClick}>\n          <StyledSearchIcon />\n        </StyledIconButton>\n      </Zoom>\n    );\n  }\n\n  /**\n   * Callback fired when the search button is clicked.\n   * @private\n   */\n  handleSearchClick() {\n    this.setState({\n      isSearchOn: true\n    });\n  }\n\n  /**\n   * Callback fired when the close button is clicked.\n   * @private\n   */\n  handleCloseClick() {\n    this.setState({\n      isSearchOn: false\n    });\n  }\n  \n /**\n   * Callback fired any time the internal state of the Downshift component changes.\n   * @param {Object} changes The properties that have changed since the last state change.\n   * @private\n   */\n  handleDownshiftStateChange(changes) {\n    const { inputValue } = changes;\n    if (inputValue) {\n      this.setState({\n        searchQuery: inputValue\n      });\n    }\n  }\n\n  /**\n   * Callback fired when the value of the Downshift component changes.\n   * @param {Object} selectedItem The item that was just selected.\n   * @private\n   */\n  handleDownshiftChange(selectedItem) {\n    this.performSearch(selectedItem);\n  }\n\n  /**\n   * Callback fired when the SearchAppBar form is submitted.\n   * @param {Object} event The event source of the callback.\n   * @private\n   */\n  handleSearchSubmit(event) {\n    event.preventDefault();\n    this.performSearch(this.state.searchQuery);\n  }\n\n  /**\n   * Perform a search based on the specified search query.\n   * @param {String} searchQuery The search quert to use for the search.\n   * @private\n   */\n  performSearch(searchQuery) {\n    this.setState({\n      isSearchOn: false,\n      searchQuery: ''\n    });\n    if (this.props.routerRef)\n      this.props.routerRef.history.push(`/search/${searchQuery}`);\n  }\n\n  /**\n   * Return true if the specified route matches the current route, false otherwise.\n   * @param {String} routeName The name of the route to check.\n   * @return {Boolean} True if the specified route matches the current route, false otherwise.\n   * @private\n   */\n  isActiveRoute(routeName) {\n    return this.props.location.pathname === routeName;\n  }\n};\n\nexport default withRouter(DEAppBar);","/**\n * @file Footer\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport { loadCSS } from 'fg-loadcss';\nimport {\n  Checkbox,\n  Grid,\n  Icon,\n  IconButton,\n  SvgIcon,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent';\nimport { Breakpoints, getBreakpoint } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst FooterToolbar = styled(Toolbar)`\n  && {\n    /*!!! position: fixed; */\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: ${Constants.FOOTER_HEIGHT + 'px'};\n    text-align: center;\n    background: ${props => props.theme.colorFooterBackground};\n    color: ${props => props.theme.colorFooterTextIcon};\n    /* This doesn't seem to do anything!!!\n    padding-left: 8;\n    padding-right: 8; */\n  }\n`;\n\nconst OneThirdGrid = styled(Grid)`\n  && {\n    width: 33.33%;\n`;\n\n// Need narrower margins for left and right grids for small screens!!!\nconst LeftThirdGrid = styled(OneThirdGrid)`\n  && {\n    margin-left: 32px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-left: 8px;\n    }\n`;\n\nconst RightThirdGrid = styled(OneThirdGrid)`\n  && {\n    margin-right: 32px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-right: 8px;\n    }\n`;\n\nconst FooterTypography = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: 12px;\n  }\n`;\n\nconst FooterA = styled.a`\n  && {\n    color: ${props => props.theme.colorFooterTextIcon};\n    text-decoration: underline;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst AwesomeIconButtonGrid = styled(Grid)`\n  && {\n    // Look into why this is needed!!!\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      min-width: 35px;\n    }\n  }\n`;\n\nconst AwesomeIconButton = styled(IconButton)`\n  && {\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: inherit;\n      }\n    }\n  }\n`;\n\nconst AwesomeIcon = styled(Icon)`\n  && {\n    font-size: 20px;\n  }\n`;\n\nconst ThemeCheckbox = styled(Checkbox)`\n  && {\n    color: ${props => props.theme.colorFooterTextIcon};\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: ${props => props.theme.colorFooterTextIcon};\n      }\n    }\n  }\n`;\n\nconst ThemeSvgIcon = styled(SvgIcon)`\n  && {\n    margin-top: -1px;\n    font-size: 17px;\n  }\n`;\n\n/**\n * The Footer provides information related to the current screen.\n */\nclass Footer extends ResponsiveComponent {\n  static propTypes = {\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired,\n    /**\n     * Callback fired when the value of the theme checkbox changes.\n     */    \n    handleThemeChange: PropTypes.func.isRequired,\n    /**\n     * Object containing information about the current react-router location.\n     */\n    location: PropTypes.object.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    loadCSS(Constants.URI_CDN_FONT_AWESOME, document.querySelector('#insertion-point-jss'));\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <FooterToolbar>\n        {/*!!! <Grid container direction='row' justify='center' alignItems='center'> */}\n          {/*!!! <Grid container direction='row' justify='center' alignItems='center' wrap='nowrap'> */}\n            <LeftThirdGrid container direction='row' justify='flex-start' alignItems='center'>\n              <Grid item>\n                <FooterTypography color='inherit'>\n                  {this.getCopyrightText()}\n                </FooterTypography>\n              </Grid>\n            </LeftThirdGrid>\n            <OneThirdGrid container direction='column' justify='center' alignItems='center'>\n              <Grid item>\n                <FooterTypography color='inherit'>\n                  {this.getSimulatedText()}\n                </FooterTypography>\n              </Grid>\n              { this.props.location.pathname === '/' &&\n                <Grid item>\n                  <FooterTypography color='inherit'>\n                    {'('}\n                    {this.getNomicsTextDescription()}\n                    <FooterA href={Constants.URI_ABOUT_NOMICS} target='_blank' rel='noopener noreferrer'>\n                      {this.getNomicsTextLink()}\n                    </FooterA>\n                    {')'}\n                  </FooterTypography>\n                </Grid>\n              }\n            </OneThirdGrid>\n            <RightThirdGrid container direction='row' justify='flex-end' alignItems='center' wrap='nowrap'>\n              <AwesomeIconButtonGrid item>\n                <AwesomeIconButton\n                  color='inherit'\n                  href={Constants.URI_DFINITY_EXPLORER_TWITTER}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <AwesomeIcon className='fa fa-twitter' />\n                </AwesomeIconButton>\n              </AwesomeIconButtonGrid>\n              <AwesomeIconButtonGrid item>\n                <AwesomeIconButton\n                  color='inherit'\n                  href={Constants.URI_DFINITY_EXPLORER_GITHUB}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <AwesomeIcon className='fa fa-github' />\n                </AwesomeIconButton>\n              </AwesomeIconButtonGrid>\n              <AwesomeIconButtonGrid item>\n                <ThemeCheckbox\n                  color='default'\n                  checked={this.props.isThemeDark}\n                  icon={\n                    <ThemeSvgIcon>\n                      <path d={Constants.ICON_SVG_PATH_THEME_LIGHT} />\n                    </ThemeSvgIcon>\n                  }\n                  checkedIcon={\n                    <ThemeSvgIcon>\n                      <path d={Constants.ICON_SVG_PATH_THEME_DARK} />\n                    </ThemeSvgIcon>\n                  }\n                  onChange={this.props.handleThemeChange}\n                />\n              </AwesomeIconButtonGrid>\n            </RightThirdGrid>\n          {/*!!! </Grid> */}\n        {/*!!! </Grid> */}\n      </FooterToolbar>\n    );\n  }\n\n  /**\n   * Return the copyright text.\n   * @return {String} the copyright text.\n   * @private\n   */\n   getCopyrightText() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return '© 2019 dfinityexplorer';\n      case Breakpoints.SM:\n        return '© 2019 dfinityexplorer contributors';\n      default:\n        return '© 2019 dfinityexplorer contributors | All rights reserved';\n    }\n  }\n\n  /**\n   * Return the \"data is simulated\" text.\n   * @return {String} The \"data is simulated\" text.\n   * @private\n   */\n  getSimulatedText() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return '(Simulated data)';\n      case Breakpoints.SM:\n        return '(Data is simulated)';\n      default:\n        return '(Network and price data is simulated)';\n    }\n  }\n\n  /**\n   * Return the Nomics attribution description text.\n   * @return {String} The Nomics attribution description text.\n   * @private\n   */\n  getNomicsTextDescription() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return 'Price data by ';\n      default:\n        return 'Price data provided by Nomics.com ';\n    }\n  }\n\n  /**\n   * Return the Nomics attribution link text.\n   * @return {String} The Nomics attribution link text.\n   * @private\n   */\n  getNomicsTextLink() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return 'Nomics.com';\n      default:\n        return 'Cryptocurrency Market Data API';\n    }\n  }\n};\n\nexport default withRouter(Footer);\n","/**\n * @file App\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport {\n  Route,\n  HashRouter\n} from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { loadCSS } from 'fg-loadcss';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { ApolloProvider } from 'react-apollo';\nimport { GlobalStyle, themeLight, themeDark } from './theme/globalStyle';\nimport HomePage from './Components/HomePage/HomePage';\nimport AccountsPage from './Components/AccountsPage/AccountsPage';\nimport BlocksPage from './Components/BlocksPage/BlocksPage';\nimport BlockDetailsPage from './Components/BlockDetailsPage/BlockDetailsPage';\nimport TransactionsPage from './Components/TransactionsPage/TransactionsPage';\nimport TransactionDetailsPage from './Components/TransactionDetailsPage/TransactionDetailsPage';\nimport CanistersPage from './Components/CanistersPage/CanistersPage';\nimport AboutPage from './Components/AboutPage/AboutPage';\nimport SearchPage from './Components/SearchPage/SearchPage';\nimport DEAppBar from './Components/DEAppBar/DEAppBar';\nimport Footer from './Components/Footer/Footer';\nimport Constants from './constants';\nimport { Breakpoints, getBreakpoint, isBreakpointGreaterOrEqualTo } from './utils/breakpoint';\n\n// Create an http link.\nconst httpLink = new HttpLink({\n  uri: Constants.URI_SERVER_HTTP\n});\n\n// Create a WebSocketLink that represents the WebSocket connection. \nconst wsLink = new WebSocketLink({\n  uri: Constants.URI_SERVER_WEB_SOCKETS,\n  options: {\n    reconnect: true\n  }\n});\n\n// Using the ability to split links, you can send data to each link depending on what kind of\n// operation is being sent.\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink, // for subscription\n  httpLink // for query or mutation\n);\n\n// Create Apollo client.\nconst apolloClient = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache({\n    // Tell Apollo to use the unique identifier object.id when normalizing the data in the store.\n    // This allows Apollo to automatically re-render the UI when objects change as the result of\n    // mutations. Using object.id only works when every object.id in the application is unique.\n    // For this to work in the app, every GraphQL query must ask for the ID of every record.\n    dataIdFromObject: object => object.id\n  })\n});\n\n// Initialize the react-ga library. We do not need user consent to be GDPR compliant. According to\n// Google: \"When using Google Analytics Advertising Features, you must also comply with the European\n// Union User Consent Policy.\" Advertising Features are not enabled for DFINITY Explorer. Under the\n// GDPR, an IP address is considered Personally Identifiable Information (PII), so we anonymize the\n// IP addresses sent to Google Analytics\nReactGA.initialize(Constants.GOOGLE_ANALYTICS_TRACKING_ID);\nReactGA.set({ anonymizeIp: true });\n\nconst ContentDiv = styled.div`\n  && {\n    margin-left: ${props => props.isDesktopDrawerOpen ? Constants.DRAWER_WIDTH + 'px' : '0px'};\n    transition: ${props =>\n      'margin-left ' +\n      (props.isDesktopDrawerOpen ? duration.enteringScreen : duration.leavingScreen) +\n      'ms ' +\n      easing.easeInOut};\n  }\n`;\n\nconst ContentGrid = styled(Grid)`\n  && {\n    /* The height of the body + footer is the total viewport height - App Bar height. */\n    min-height: calc(100vh - ${props => props.appbarheight + 'px'});\n`;\n\n/**\n * Top-level component of the app.\n */\nclass App extends Component {\n  /**\n   * Create an App object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      routerRef: null,\n      appBarHeight: 0,\n      isDesktopDrawerEnabled: true,\n      isMobileDrawerOpen: false,\n      isThemeDark: true\n    };\n\n    // Bind to make 'this' work in callbacks.\n    this.setRouterRef = this.setRouterRef.bind(this);\n    this.handleAppBarResize = this.handleAppBarResize.bind(this);\n    this.handleDesktopDrawerMenuClick = this.handleDesktopDrawerMenuClick.bind(this);\n    this.handleMobileDrawerMenuClick = this.handleMobileDrawerMenuClick.bind(this);\n    this.handleThemeChange = this.handleThemeChange.bind(this);\n  }\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Load fonts.\n    loadCSS(\n      Constants.URI_CDN_GOOGLE_FONTS,\n      document.querySelector('#insertion-point-jss')\n    );\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      appBarHeight,\n      isDesktopDrawerEnabled,\n      isMobileDrawerOpen,\n      isThemeDark,\n      routerRef\n    } = this.state;\n\n    // It seems like the >= MD logic here should be kept in one place. It's also in DEAppBar!!!\n    // Can't I somehow make this cleaner?!!!\n    const isDesktopDrawerOpen =\n      isDesktopDrawerEnabled && isBreakpointGreaterOrEqualTo(Breakpoints.MD);\n    const breakpoint = getBreakpoint(isDesktopDrawerOpen);\n\n    return (\n      <ApolloProvider client={apolloClient}>\n        <GlobalStyle theme={this.getTheme()} />\n        <ThemeProvider theme={this.getTheme()}>\n          <HashRouter ref={this.setRouterRef}>\n            <div>\n              <DEAppBar\n                handleAppBarResize={this.handleAppBarResize}\n                handleDesktopDrawerMenuClick={this.handleDesktopDrawerMenuClick}\n                handleMobileDrawerMenuClick={this.handleMobileDrawerMenuClick}\n                isDesktopDrawerOpen={isDesktopDrawerOpen}\n                isMobileDrawerOpen={isMobileDrawerOpen}\n                routerRef={routerRef}\n              />\n              <ContentDiv\n                isDesktopDrawerOpen={isDesktopDrawerOpen}\n                isMobileDrawerOpen={isMobileDrawerOpen}\n                /* Workaround to force react-parallax to update when drawer opens/closes. Perhaps */\n                /* file an issue with react-parallax that Parallax does not update when */\n                /* margin-left changes. */\n                onTransitionEnd={() => window.dispatchEvent(new Event('resize'))}\n              >\n                <ContentGrid\n                  container\n                  direction='column'\n                  justify='space-between'\n                  appbarheight={appBarHeight}\n                >                 \n                  <Route\n                    exact path='/'\n                    render={(props) => \n                      <HomePage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/blocks'\n                    render={(props) => \n                      <BlocksPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/txs'\n                    render={(props) => \n                      <TransactionsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route exact path=\"/accounts\" component={AccountsPage} />                  \n                  <Route exact path=\"/canisters\" component={CanistersPage} />\n                  <Route\n                    exact path='/about'\n                    render={(props) => \n                      <AboutPage\n                        {...props}\n                        breakpoint={breakpoint}\n                        isDesktopDrawerOpen={isDesktopDrawerOpen}\n                        isThemeDark={isThemeDark}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/block/:height'\n                    render={(props) => \n                      <BlockDetailsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path=\"/tx/:hash\"\n                    render={(props) => \n                      <TransactionDetailsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route exact path=\"/search/:query\" component={SearchPage} />\n                  <Footer                  \n                    handleThemeChange={this.handleThemeChange}\n                    isThemeDark={isThemeDark}\n                  />\n                </ContentGrid>\n              </ContentDiv>\n            </div>\n          </HashRouter>\n        </ThemeProvider>\n      </ApolloProvider>\n    );\n  }\n\n  /**\n   * Set a reference to the HashRouter element.\n   * @public\n   */\n  setRouterRef(element) {\n    this.setState({ routerRef: element });\n  };\n\n  /**\n   * Callback fired when the App Bar is resized.\n   * @private\n   */\n  handleAppBarResize(height) {\n    this.setState({\n      appBarHeight: height\n    });\n  }\n\n  /**\n   * Callback fired when the desktop drawer (large screens) menu button is clicked.\n   * @private\n   */\n  handleDesktopDrawerMenuClick(contentRect) {\n    this.setState({\n      isDesktopDrawerEnabled: !this.state.isDesktopDrawerEnabled\n    });\n  }\n\n  /**\n   * Callback fired when the mobile drawer (small screens) menu button is clicked.\n   * @private\n   */\n  handleMobileDrawerMenuClick(contentRect) {\n    this.setState({\n      isMobileDrawerOpen: !this.state.isMobileDrawerOpen\n    });\n  }\n\n  /**\n   * Callback fired when the value of the Footer component theme checkbox changes.\n   * @param {Object} event The event source of the callback.\n   * @param {Number} checked The checked value of the switch.\n   * @public\n   */\n  handleThemeChange(event, checked) {\n    this.setState({\n      isThemeDark: checked\n    });\n  }\n\n  /**\n   * Return the current theme.\n   * @return {Object} The current theme.\n   * @private\n   */\n  getTheme() {\n    return this.state.isThemeDark ? themeDark : themeLight;\n  }\n}\n\nexport default App;\n","/**\n * @file index\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\ndocument.getElementById(\"root\"));\n"],"sourceRoot":""}