{"version":3,"sources":["Components/AboutPage/banner-x-horizon.png","Components/AboutPage/dfinity-explorer-logo-large.png","Components/AboutPage/apollo-logo-dark-mode.png","Components/AboutPage/apollo-logo-light-mode.png","Components/AboutPage/dfinity-logo-dark-mode.png","Components/AboutPage/dfinity-logo-light-mode.png","Components/AboutPage/github-octocat.png","Components/AboutPage/graphql-logo.png","Components/AboutPage/material-ui-logo.png","Components/AboutPage/nomics-logo-dark-mode.png","Components/AboutPage/nomics-logo-light-mode.png","Components/AboutPage/postgresql-logo.png","Components/AboutPage/postgresql-logo-text.png","Components/AboutPage/prisma-logo-dark-mode.png","Components/AboutPage/prisma-logo-light-mode.png","Components/AboutPage/react-logo-text.png","Components/AboutPage/styled-components-logo-dark-mode.png","Components/AboutPage/styled-components-logo-light-mode.png","Components/DEAppBar/dfinity-explorer-logo.png","constants.js","theme/globalStyle.js","Components/ResponsiveComponent/ResponsiveComponent.js","Components/TrackablePage/TrackablePage.js","Components/FadeTable/FadeTable.js","graphql/queryBlocks.js","graphql/subscriptionBlock.js","Components/BlocksTable/BlocksTable.js","graphql/queryTransactions.js","graphql/subscriptionTransaction.js","utils/getHashString.js","Components/TransactionsTable/TransactionsTable.js","Components/DashCard/DashCard.js","graphql/queryNetworkStats.js","graphql/subscriptionNetworkStats.js","Components/BlockTimeCard/BlockTimeCard.js","Components/TransactionsCard/TransactionsCard.js","graphql/queryPrice.js","graphql/subscriptionPrice.js","Components/PriceCard/PriceCard.js","Components/AreaChart/AreaChart.js","graphql/queryDailyNetworkStatses.js","Components/TransactionsChart/TransactionsChart.js","graphql/queryCandles.js","Components/PriceChart/PriceChart.js","utils/breakpoint.js","Components/HomePage/HomePage.js","Components/AccountsPage/AccountsPage.js","Components/BlocksPage/BlocksPage.js","Components/BlockTransactionsTable/BlockTransactionsTable.js","graphql/queryBlock.js","Components/BlockDetailsPage/BlockDetailsPage.js","Components/TransactionsPage/TransactionsPage.js","graphql/queryTransaction.js","Components/TransactionDetailsPage/TransactionDetailsPage.js","Components/CanistersPage/CanistersPage.js","utils/getRandomInt.js","utils/getRandomNumber.js","Components/DfinitySymbolD3/DfinitySymbolD3.js","Components/ImageLinkGrid/ImageLinkGrid.js","Components/AboutPage/AboutPage.js","graphql/querySearchGetType.js","Components/SearchPage/SearchPage.js","graphql/querySearchAutoComplete.js","Components/DEAppBar/DEAppBar.js","Components/Footer/Footer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Constants","Object","freeze","URI_SERVER_HTTP","URI_SERVER_WEB_SOCKETS","URI_CDN_FONT_AWESOME","URI_CDN_GOOGLE_FONTS","URI_DFINITY_EXPLORER_TWITTER","URI_DFINITY_EXPLORER_GITHUB","URI_ABOUT_APOLLO","URI_ABOUT_NOMICS","URI_ABOUT_DFINITY","URI_ABOUT_GRAPHQL","URI_ABOUT_GRAPHQL_YOGA","URI_ABOUT_MATERIAL_UI","URI_ABOUT_POSTGRES","URI_ABOUT_PRISMA","URI_ABOUT_REACT","URI_ABOUT_STYLED_COMPONENTS","URI_GITHUB_CONTRIBUTORS","URI_GITHUB_DFINITY_EXPLORER_PROJECT","URI_GITHUB_DFINITY_EXPLORER_WIKI","URI_GITHUB_DYLAN","URI_GITHUB_MIT_LICENSE","URI_GITHUB_TODD","URI_NASA_EXPLORER","URI_TWITTER_DFINITY_EXPLORER","COLOR_DFINITY_BLACK","COLOR_DFINITY_BLACK_LIGHTER","COLOR_DFINITY_BLACK_DARKER","COLOR_DFINITY_LIGHT_ORANGE","COLOR_DFINITY_DARK_ORANGE","COLOR_DFINITY_BLUE","COLOR_DFINITY_BLUE_TRANSPARENT","COLOR_TEXT_LIGHT","COLOR_DARK_TEXT","COLOR_DARK_TEXT_FADED","COLOR_TEXT_DARKER","COLOR_TEXT_DARKEST","COLOR_LIGHT_TEXT","COLOR_LIGHT_TEXT_FADED","COLOR_DARK_DRAWER_DIVIDER_MAC_OS","COLOR_DARK_DRAWER_DIVIDER_YOUTUBE","COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE","COLOR_LIGHT_CHART_GOOGLE","COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE","COLOR_LIGHT_DRAWER_ICON_GOOGLE","COLOR_LIGHT_DRAWER_TEXT_GOOGLE","COLOR_TWITTER_BLUE","COLOR_TWITTER_GREEN","COLOR_TWITTER_ORANGE","COLOR_TWITTER_PURPLE","COLOR_GRAY_ON_WHITE","FONT_PRIMARY","MATERIAL_FONT_SIZE_H1","MATERIAL_FONT_SIZE_H2","MATERIAL_FONT_SIZE_H3","MATERIAL_FONT_SIZE_H4","MATERIAL_FONT_SIZE_H5","MATERIAL_FONT_SIZE_H6","MATERIAL_FONT_SIZE_SUBTITLE_1","MATERIAL_FONT_SIZE_SUBTITLE_2","MATERIAL_FONT_SIZE_BODY_1","MATERIAL_FONT_SIZE_BODY_2","MATERIAL_FONT_SIZE_BUTTON","MATERIAL_FONT_SIZE_CAPTION","MATERIAL_FONT_SIZE_OVERLINE","BREAKPOINT_MIN_XS","BREAKPOINT_MAX_XS","BREAKPOINT_MIN_SM","BREAKPOINT_MAX_SM","BREAKPOINT_MIN_MD","BREAKPOINT_MAX_MD","BREAKPOINT_MIN_LG","BREAKPOINT_MAX_LG","BREAKPOINT_MIN_XL","BREAKPOINT_LG_MAX_WIDTH","DRAWER_WIDTH","FOOTER_HEIGHT","ICON_SVG_PATH_TPS","ICON_SVG_PATH_VOLUME","ICON_SVG_PATH_MARKET_CAP","ICON_SVG_PATH_BLOCK","ICON_SVG_PATH_PRICE","ICON_SVG_PATH_BLOCK_TIME","ICON_SVG_PATH_THEME_LIGHT","ICON_SVG_PATH_THEME_DARK","ICON_SVG_PATH_BITCOIN","ABOUT_PAGE_MARGIN_XS","ABOUT_PAGE_MARGIN_SM","ABOUT_PAGE_MARGIN_MD","ABOUT_PAGE_MARGIN_LG","HOME_PAGE_MARGIN_XS","HOME_PAGE_MARGIN_SM_AND_UP","ABOUT_PAGE_PROJECT_ICONS_HEIGHT","COINBASE_CHECKOUT_ID","GOOGLE_ANALYTICS_TRACKING_ID","GlobalStyle","createGlobalStyle","_templateObject","props","theme","colorBodyBackground","themeLight","isDark","colorAboutBackgroundPrimary","colorAboutBackgroundSecondary","colorAboutButtonBackground","colorAboutButtonText","colorAboutButtonHoverBackground","colorAboutButtonHoverText","colorAboutHeaderText","colorAboutTwitterBackground","colorAppBarBackground","colorAppBarTextButton","colorAppBarButtonHover","colorAppBarDfinityText","colorAppBarExplorerText","colorBodyText","colorBodyTextDim","colorBodyTextLink","colorDashCardDBackground","colorDashCardCBackground","colorDashCardBBackground","colorDashCardABackground","colorDashCardIcon","colorDashCardIconOpacity","colorDrawerBackground","colorDrawerDivider","colorDrawerIcon","colorDrawerIconTextSelected","colorDrawerText","colorChartBackground","colorChartTooltipBackground","colorChartAxes","colorChartGrid","colorChartText","colorChartLine","colorChartActiveDotStroke","colorTableBackgroundPrimary","colorTableRowBorder","colorTableTextDim","colorFooterBackground","colorFooterTextIcon","colorFooterIconHover","colorSearchText","colorSearchIcon","themeDark","ResponsiveComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowResize","bind","assertThisInitialized","throttledHandleWindowResize","throttle","window","addEventListener","removeEventListener","forceUpdate","Component","TrackablePage","get","prototype","scrollTo","pathName","location","pathname","search","trackPage","prevProps","currentPathName","nextPathName","ReactGA","set","page","pageview","StyledPaper","styled","Paper","FadeTable_templateObject","TypographyTitle","Typography","_templateObject2","StyledTable","Table","_templateObject3","TableRowHeader","TableRow","_templateObject4","tableRowHeight","TableRowBody","_templateObject5","StyledTableCell","TableCell","_templateObject6","TableCellHeader","_templateObject7","StyledLink","Link","_templateObject8","TableRowFooter","_templateObject9","TableCellFooter","_templateObject10","FadeTable","react_default","a","createElement","elevation","getTitle","getColumnWidths","map","width","index","key","index_es","getHeaderRow","cell","align","isNumeric","padding","link","to","value","getBodyRowElements","getFooterRow","_this$props","expandRows","maxRows","rows","getBodyRows","slice","renderprops","items","keys","bodyRow","mapKey","from","height","opacity","enter","leave","state","style","getBodyRowElement","in","timeout","rowIndex","cells","borderBottomStyle","container","direction","justify","alignItems","Error","queryBlocks","gql","queryBlocks_templateObject","subscriptionBlock","subscriptionBlock_templateObject","BlocksTableWithData","firstBlockAdded","handleQueryCompleted","_this2","react_apollo_esm","query","variables","first","onCompleted","_ref","loading","error","data","subscribeToMore","subscribeToNewObjects","BlocksTable_BlocksTable","blocks","length","handleAddNewBlock","_this3","document","updateQuery","prev","_ref2","subscriptionData","block","node","concat","toConsumableArray","BlocksTable","date","Date","timestamp","toLocaleString","numTransactions","propTypes","PropTypes","array","isRequired","bool","number","func","queryTransactions","queryTransactions_templateObject","subscriptionTransaction","subscriptionTransaction_templateObject","getHashString","hash","maxLength","undefined","substring","substr","TransactionsTableWithData","TransactionsTable_TransactionsTable","transactions","transaction","TransactionsTable","amount","toFixed","toString","GridNoWrap","Grid","DashCard_templateObject","SvgIconCard","SvgIcon","DashCard_templateObject2","cardindex","DashCard_templateObject3","TypographyValue","DashCard_templateObject4","DashCard","cardIndex","className","svgIconPath","title","wrap","item","d","DashCard_TypographyTitle","noWrap","queryNetworkStats","queryNetworkStats_templateObject","subscriptionNetworkStats","subscriptionNetworkStats_templateObject","BlockTimeCard","secondsPerBlock","networkStats","Components_DashCard_DashCard","TransactionsCard","transactionsPerSecond","queryPrice","queryPrice_templateObject","subscriptionPrice","subscriptionPrice_templateObject","PriceCard","price","AreaChart_templateObject","AreaChart_templateObject2","StyledAreaChart","RechartsAreaChart","AreaChart_templateObject3","AreaChart","chartHeight","getData","AreaChart_StyledPaper","AreaChart_TypographyTitle","es6","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","vertical","dataKey","getDataKeyX","tick","fill","tickFormatter","getGetTickX","tickMargin","tickSize","domain","dataMin","getDomainMinY","dataMax","getDomainMaxY","getGetTickY","tickLine","labelFormatter","getGetTooltipX","formatter","getGetTooltipY","contentStyle","background","border","borderRadius","fontSize","boxShadow","shadows","itemStyle","color","labelStyle","cursor","animationDuration","type","getDataKeyY","strokeWidth","fillOpacity","activeDot","r","queryDailyNetworkStatses","queryDailyNetworkStatses_templateObject","TransactionsChartWithData","last","skip","TransactionsChart_TransactionsChart","dailyNetworkStatses","TransactionsChart","Math","floor","ceil","toLocaleDateString","k","Number","isInteger","object","withTheme","queryCandles","queryCandles_templateObject","PriceChartWithData","startDate","setDate","getDate","endDate","start","toISOString","end","PriceChart_PriceChart","candles","PriceChart","Breakpoints","XS","SM","MD","LG","XL","getBreakpoint","isDesktopDrawerOpen","drawerWidth","matchMedia","matches","isBreakpointGreaterOrEqualTo","breakpoint","isBreakpointLessOrEqualTo","BREAKPOINT_MAX_XL","GridSection","HomePage_templateObject","duration","standard","easing","easeInOut","GridSectionTables","HomePage_templateObject2","GridCard","HomePage_templateObject3","GridChart","HomePage_templateObject4","_ref3","GridTable","HomePage_templateObject5","_ref4","DashCardA","HomePage_templateObject6","BlockTimeCardB","HomePage_templateObject7","TransactionsCardC","HomePage_templateObject8","PriceCardD","HomePage_templateObject9","HomePage","blockHeight","getSectionCards","getSectionCharts","getSectionTables","Fade_default","delay","Components_TransactionsChart_TransactionsChart","Components_PriceChart_PriceChart","Components_BlocksTable_BlocksTable","Components_TransactionsTable_TransactionsTable","setState","TypographyHeading","AccountsPage_templateObject","TypographyBody","AccountsPage_templateObject2","AccountsPage","marginTop","marginLeft","BlocksPage_templateObject","BlocksPage_templateObject2","BlocksPage","BlocksPage_TypographyHeading","BlocksPage_TypographyBody","BlockTransactionsTable","queryBlock","queryBlock_templateObject","BlockDetailsPage_templateObject","BlockDetailsPage_templateObject2","BlockDetailsPage_templateObject3","BlockDetailsPage_templateObject4","BlockDetailsPage","parseInt","match","params","BlockDetailsPage_GridSection","BlockDetailsPage_TypographyHeading","BlockDetailsPage_TypographyBody","react","BlockDetailsPage_GridTable","Components_BlockTransactionsTable_BlockTransactionsTable","TransactionsPage_templateObject","TransactionsPage_templateObject2","TransactionsPage","TransactionsPage_TypographyHeading","TransactionsPage_TypographyBody","queryTransaction","queryTransaction_templateObject","TransactionDetailsPage_templateObject","TransactionDetailsPage_templateObject2","TransactionDetailsPage_templateObject3","TransactionDetailsPage_templateObject4","TransactionDetailsPage","hashMaxLength","TransactionDetailsPage_GridSection","TransactionDetailsPage_TypographyHeading","TransactionDetailsPage_TypographyBody","TransactionDetailsPage_StyledLink","CanistersPage_templateObject","CanistersPage_templateObject2","CanistersPage","CanistersPage_TypographyHeading","CanistersPage_TypographyBody","getRandomInt","random","getRandomNumber","DfinitySymbolD3","dragStarted","dragged","dragEnded","rotate","stage","renderer","linksGraphics","simulationWidth","logoMode","simulationHeight","scaleSimulationToPixi","centerX","centerY","scaleToWindow","numSymbolNodes","numVertices","numNodes","forceManyBodyStrengthSymbolNodes","forceManyBodyStrengthNonSymbolNodes","linkDistance","nodeStrokeWidth","nodeRadius","nodeRadiusSelected","nodeSelectedFillColorArray","nodeSelectedStrokeColorArray","nodeOpacity","nodeOpacitySelected","linkStrokeWidth","linkStrokeWidthIncreaseAtMagnitude","symbolHeightMultiplier","rotateOffset","rotateTimeMs","rotateAmount","selectedNodeIndex","newBlockNodeStartTime","newBlockLinksStartTime","newBlockNodeTimerMs","newBlockLinksTimerMs","draw","destroy","pixiResizeRenderer","nodesData","forEach","pixiDrawNode","ref","el","element","addNodes","addLinks","createSimulation","pixiSetup","i","pos","getNodePosition","push","fx","fy","_fx","_fy","linkCount","t","PI","scale","cos","sin","linksData","indexSymbol","indexSymbolNext","addLink","vertexShapeTop","indexShapeTop","indexShapeTopNext","indexShapeAlmostTop","j","indexShapeNext","indexSpiralNext","indexSource","indexTarget","strength","source","target","_strength","_opacity","_this4","simulation","d3","force","link_force","min","distance","on","alphaDecay","_this5","PIXI","skipHello","antialias","transparent","resolution","autoResize","appendChild","view","graphics","addChild","subject","find","x","y","resize","position","nodeStrokeColor","nodeFillColor","selectedNodeMagnitude","arguments","rgbNumberFromArray","gradientColor","getNodeStrokeColorArray","clear","lineStyle","beginFill","filters","drawCircle","linkMagnitude","linkOpacity","alpha","getColorArray","moveTo","lineTo","numIndices","purple","pink","darkOrange","lightOrange","blue","transitionIndicesSmall","transitionIndicesGradual","lastPurpleIndex","lastPinkIndex","lastDarkOrangeIndex","lastLightOrangeIndex","lastBlueIndex","percentage","color1","color2","percent","p1","p2","round","active","alphaTarget","restart","_this6","pixiMoveNode","elapsedMs","pixiDrawLink","endFill","render","elapsed","ImageLinkGrid","widths","maxHeight","calculateMaxImageDimensions","arePropsChanged","imageLinks","imageLink","src","justifyRow","marginBetweenRows","perRow","containerHeight","imageLinkGrid","maxWidthColumn","Array","row","isShortRow","max","columnIndex","href","rel","alt","img","Image","onload","event","_event$currentTarget","currentTarget","naturalWidth","naturalHeight","prevState","PaperParallax","AboutPage_templateObject","GridParallax","AboutPage_templateObject2","TypographyParallax","AboutPage_templateObject3","AboutPage_templateObject4","GridSectionPrimary","AboutPage_templateObject5","GridSectionSecondary","AboutPage_templateObject6","GridItem","AboutPage_templateObject7","GridImageLeft","AboutPage_templateObject8","GridImageRight","AboutPage_templateObject9","_ref5","GridSymbolLeft","AboutPage_templateObject10","_ref6","GridText","_templateObject11","_ref7","GridTextLeft","_templateObject12","_ref8","GridTextRight","_templateObject13","_ref9","_templateObject14","_ref10","_templateObject15","StyledA","_templateObject16","ImgSection","_templateObject17","ButtonSubscribe","Button","_templateObject18","MailIconButton","MailIcon","_templateObject19","SpanHeart","span","_templateObject20","ButtonDonate","CoinbaseCommerceButton","_templateObject21","SvgIconButton","_templateObject22","PaperTwitter","_templateObject23","_ref11","ImageLinkGridThanks","_templateObject24","AboutPage","getHeader","getSectionMission","getSectionOpenSource","getSectionCommunity","getSectionContributors","getSectionThanks","dist","bgImage","bannerXHorizon","bgImageAlt","bgImageStyle","isThemeDark","Components_DfinitySymbolD3_DfinitySymbolD3","getDfinitySymbolD3Width","AboutPage_TypographyHeading","AboutPage_TypographyBody","Flip_default","dfinityExplorerLogo","_this$props2","dist_index_es","sourceType","screenName","options","noFooter","action","method","name","noValidate","aria-hidden","tabIndex","defaultValue","checkoutId","LightSpeed_default","githubOctocat","imagesPerRow","_this$props3","reactHeight","styledComponentsHeight","materialUiHeight","nomicsHeight","apolloHeight","graphqlHeight","prismaHeight","postgresHeight","dfinityHeight","reactLogo","styledComponentsLogoDark","styledComponentsLogoLight","materialUiLogo","nomicsLogoDark","nomicsLogoLight","apolloLogoDark","apolloLogoLight","graphqlLogo","prismaLogoDark","prismaLogoLight","postgresLogoDark","postgresLogoLight","dfinityLogoDark","dfinityLogoLight","_this$props4","contentWidth","innerWidth","querySearchGetType","querySearchGetType_templateObject","StyledTypography","SearchPage_templateObject","ExplorerTypography","SearchPage_templateObject2","SearchPage","searchGetType","Redirect","querySearchAutoComplete","querySearchAutoComplete_templateObject","StyledAppBar","AppBar","DEAppBar_templateObject","zIndex","drawer","SearchAppBar","DEAppBar_templateObject2","StyledToolbar","Toolbar","DEAppBar_templateObject3","SearchToolbar","DEAppBar_templateObject4","ImgProductIcon","DEAppBar_templateObject5","TypographyAppName","DEAppBar_templateObject6","TypographyDfinity","DEAppBar_templateObject7","TypographyBorder","div","DEAppBar_templateObject8","TypographyExplorer","DEAppBar_templateObject9","InputSearch","Input","DEAppBar_templateObject10","ListSearch","List","DEAppBar_templateObject11","ListItemSearch","ListItem","DEAppBar_templateObject12","highlighted","SearchIconListSearch","SearchIcon","DEAppBar_templateObject13","StyledIconButton","IconButton","DEAppBar_templateObject14","StyledMenuIcon","MenuIcon","DEAppBar_templateObject15","StyledSearchIcon","DEAppBar_templateObject16","StyledCloseIcon","CloseIcon","DEAppBar_templateObject17","StyledSwipeableDrawer","other","esm_extends","assign","classes","paper","DEAppBar_templateObject18","StyledDrawer","DEAppBar_templateObject19","StyledDivider","Divider","DEAppBar_templateObject20","DrawerListItemIcon","ListItemIcon","DEAppBar_templateObject21","DrawerListItemText","primary","DEAppBar_templateObject22","DrawerListItem","DEAppBar_templateObject23","selected","DEAppBar","isSearchOn","searchQuery","toolbarDivRef","React","createRef","maxSearchAutoCompleteItems","handleSearchClick","handleCloseClick","handleDownshiftStateChange","handleDownshiftChange","handleSearchSubmit","isActiveRoute","mountOnEnter","unmountOnExit","getToolbarSearchContent","getToolbarDefaultContent","getDrawer","handleAppBarResize","current","offsetHeight","isMobileDrawerOpen","handleMobileDrawerMenuClick","variant","flexGrow","downshift_esm","onStateChange","onChange","selectedItem","getInputProps","getItemProps","getMenuProps","isOpen","inputValue","highlightedIndex","onSubmit","autoFocus","disableUnderline","fullWidth","placeholder","searchAutoComplete","disableGutters","onClick","getMenuButton","getAppTitle","getSearchButton","handleDesktopDrawerMenuClick","textDecoration","getProductIconHeight","Zoom_default","open","onOpen","onClose","getDrawerContent","button","component","Home_default","AccountCircle_default","Description_default","Info_default","changes","performSearch","preventDefault","routerRef","history","routeName","withRouter","FooterToolbar","Footer_templateObject","OneThirdGrid","Footer_templateObject2","LeftThirdGrid","Footer_templateObject3","RightThirdGrid","Footer_templateObject4","FooterTypography","Footer_templateObject5","FooterA","Footer_templateObject6","AwesomeIconButtonGrid","Footer_templateObject7","AwesomeIconButton","Footer_templateObject8","fade","AwesomeIcon","Icon","Footer_templateObject9","ThemeCheckbox","Checkbox","Footer_templateObject10","ThemeSvgIcon","Footer_templateObject11","Footer","loadCSS","querySelector","getCopyrightText","getSimulatedText","getNomicsTextDescription","getNomicsTextLink","checked","icon","checkedIcon","handleThemeChange","httpLink","HttpLink","uri","wsLink","WebSocketLink","reconnect","split","_getMainDefinition","getMainDefinition","kind","operation","apolloClient","ApolloClient","cache","InMemoryCache","dataIdFromObject","initialize","anonymizeIp","ContentDiv","App_templateObject","enteringScreen","leavingScreen","ContentGrid","App_templateObject2","appbarheight","App","appBarHeight","isDesktopDrawerEnabled","setRouterRef","_this$state","client","getTheme","styled_components_browser_esm","HashRouter","Components_DEAppBar_DEAppBar","onTransitionEnd","dispatchEvent","Event","Route","exact","path","Components_HomePage_HomePage","Components_AboutPage_AboutPage","Components_BlockDetailsPage_BlockDetailsPage","Components_TransactionDetailsPage_TransactionDetailsPage","Components_Footer_Footer","contentRect","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.c89763e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-x-horizon.78a73653.png\";","module.exports = __webpack_public_path__ + \"static/media/dfinity-explorer-logo-large.6854aee0.png\";","module.exports = __webpack_public_path__ + \"static/media/apollo-logo-dark-mode.ff872a8a.png\";","module.exports = __webpack_public_path__ + \"static/media/apollo-logo-light-mode.d4f0ec1b.png\";","module.exports = __webpack_public_path__ + \"static/media/dfinity-logo-dark-mode.03f02872.png\";","module.exports = __webpack_public_path__ + \"static/media/dfinity-logo-light-mode.5a960076.png\";","module.exports = __webpack_public_path__ + \"static/media/github-octocat.c833384a.png\";","module.exports = __webpack_public_path__ + \"static/media/graphql-logo.8d2ae7fd.png\";","module.exports = __webpack_public_path__ + \"static/media/material-ui-logo.1d6a085f.png\";","module.exports = __webpack_public_path__ + \"static/media/nomics-logo-dark-mode.a32c7cc9.png\";","module.exports = __webpack_public_path__ + \"static/media/nomics-logo-light-mode.6f5390ee.png\";","module.exports = __webpack_public_path__ + \"static/media/postgresql-logo.42af44c0.png\";","module.exports = __webpack_public_path__ + \"static/media/postgresql-logo-text.f2ba6272.png\";","module.exports = __webpack_public_path__ + \"static/media/prisma-logo-dark-mode.590aa2e2.png\";","module.exports = __webpack_public_path__ + \"static/media/prisma-logo-light-mode.9d9ad809.png\";","module.exports = __webpack_public_path__ + \"static/media/react-logo-text.24432c06.png\";","module.exports = __webpack_public_path__ + \"static/media/styled-components-logo-dark-mode.3b3add6f.png\";","module.exports = __webpack_public_path__ + \"static/media/styled-components-logo-light-mode.33f922e4.png\";","module.exports = __webpack_public_path__ + \"static/media/dfinity-explorer-logo.52c54b15.png\";","/**\n * @file constants\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nconst Constants = Object.freeze({\n  // Development server URIs\n  // URI_SERVER_HTTP: 'http://localhost:4000',\n  // URI_SERVER_WEB_SOCKETS: 'ws://localhost:4000',\n  // Production server URIs\n  URI_SERVER_HTTP: 'https://dfinityexplorer-server.herokuapp.com/',\n  URI_SERVER_WEB_SOCKETS: 'wss://dfinityexplorer-server.herokuapp.com/',\n  URI_CDN_FONT_AWESOME:\n    'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css',\n  // Remove any fonts that aren't used!!!\n  URI_CDN_GOOGLE_FONTS:\n    'https://fonts.googleapis.com/css?family=Istok+Web:400|Muli:200,300,400',\n  URI_DFINITY_EXPLORER_TWITTER: 'https://twitter.com/dfinityexplorer',\n  URI_DFINITY_EXPLORER_GITHUB: 'https://github.com/dfinityexplorer/dfinityexplorer',\n  URI_ABOUT_APOLLO: 'https://www.apollographql.com/',\n  URI_ABOUT_NOMICS: 'https://p.nomics.com/cryptocurrency-bitcoin-api',\n  URI_ABOUT_DFINITY: 'https://dfinity.org/',\n  URI_ABOUT_GRAPHQL: 'https://graphql.org/',\n  URI_ABOUT_GRAPHQL_YOGA: 'https://github.com/prisma/graphql-yoga',\n  URI_ABOUT_MATERIAL_UI: 'https://material-ui.com/',\n  URI_ABOUT_POSTGRES: 'https://www.postgresql.org/',\n  URI_ABOUT_PRISMA: 'https://www.prisma.io/',\n  URI_ABOUT_REACT: 'https://reactjs.org/',\n  URI_ABOUT_STYLED_COMPONENTS: 'https://www.styled-components.com/',\n  URI_GITHUB_CONTRIBUTORS: 'https://github.com/orgs/dfinityexplorer/people',\n  URI_GITHUB_DFINITY_EXPLORER_PROJECT: 'https://github.com/dfinityexplorer/dfinityexplorer',\n  URI_GITHUB_DFINITY_EXPLORER_WIKI: 'https://github.com/dfinityexplorer/dfinityexplorer/wiki',\n  URI_GITHUB_DYLAN: 'https://github.com/dylancm4',\n  URI_GITHUB_MIT_LICENSE: 'https://github.com/dfinityexplorer/dfinityexplorer/blob/master/LICENSE',\n  URI_GITHUB_TODD: 'https://github.com/toddkitchens',\n  URI_NASA_EXPLORER: 'https://nssdc.gsfc.nasa.gov/multi/explorer.html',\n  URI_TWITTER_DFINITY_EXPLORER: 'https://twitter.com/dfinityexplorer',\n  COLOR_DFINITY_BLACK: 'rgb(41, 42, 46)', // from dfinity.org/press\n  COLOR_DFINITY_BLACK_LIGHTER: 'rgb(73, 75, 82)', //  COLOR_DFINITY_BLACK scaled lighter\n  COLOR_DFINITY_BLACK_DARKER: 'rgb(27, 28, 31)', // COLOR_DFINITY_BLACK scaled darker\n  COLOR_DFINITY_LIGHT_ORANGE: 'rgb(251, 176, 59)', // from dfinity.org style guide\n  COLOR_DFINITY_DARK_ORANGE: 'rgb(241, 90, 36)', // from dfinity.org style guide\n  COLOR_DFINITY_BLUE: 'rgb(0, 129, 255)', // from dfinity.org/press\n  COLOR_DFINITY_BLUE_TRANSPARENT: 'rgba(0, 129, 255, 0.75)',\n  COLOR_TEXT_LIGHT: 'white', // This should be removed, replaced with COLOR_DARK_TEXT!!!\n  COLOR_DARK_TEXT: 'white',\n  COLOR_DARK_TEXT_FADED: 'rgb(190, 191, 192)', // rgba(255, 255, 255, 0.7) on COLOR_DFINITY_BLACK, matches Material-UI Tab opacity\n  COLOR_TEXT_DARKER: 'rgb(148, 149, 151)', // rgba(255, 255, 255, 0.5) on COLOR_DFINITY_BLACK\n  COLOR_TEXT_DARKEST: 'rgb(106, 106, 109)', // rgba(255, 255, 255, 0.3) on COLOR_DFINITY_BLACK\n  COLOR_LIGHT_TEXT: 'black',\n  COLOR_LIGHT_TEXT_FADED: 'rgb(77, 77, 77)', // rgba(0, 0, 0, 0.7) on white, matches Material-UI Tab opacity\n  COLOR_DARK_DRAWER_DIVIDER_MAC_OS: '#4B4B4B', // Calendar, Messages\n  COLOR_DARK_DRAWER_DIVIDER_YOUTUBE: '#333333',\n  COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE: '#5F6368', // About, Account, Contacts, Docs, Drive, Gmail, Material\n  COLOR_LIGHT_CHART_GOOGLE: '#9E9E9E', // Analytics, Firebase\n  COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE: '#E3E3E3', // Docs, Sheets\n  COLOR_LIGHT_DRAWER_ICON_GOOGLE: '#5F6368', // Account, Docs, Drive, Calendar, Keep, Photos, Sheets\n  COLOR_LIGHT_DRAWER_TEXT_GOOGLE: '#3C4043', // Account, Docs, Calendar, News, Photos, Sheets\n  COLOR_TWITTER_BLUE: 'rgb(100, 164, 224)',\n  COLOR_TWITTER_GREEN: 'rgb(131, 175, 97)',\n  COLOR_TWITTER_ORANGE: 'rgb(244, 174, 78)',\n  COLOR_TWITTER_PURPLE: 'rgb(165, 144, 211)',\n  COLOR_GRAY_ON_WHITE: 'rgb(235, 235, 235)', // matches Material-UI IconButton hover\n  FONT_PRIMARY: '\\'Muli\\', sans-serif',\n  MATERIAL_FONT_SIZE_H1: '6rem', // 96px\n  MATERIAL_FONT_SIZE_H2: '3.75rem', // 60px\n  MATERIAL_FONT_SIZE_H3: '3rem', // 48px\n  MATERIAL_FONT_SIZE_H4: '2.125rem', // 34px\n  MATERIAL_FONT_SIZE_H5: '1.5rem', // 24px\n  MATERIAL_FONT_SIZE_H6: '1.25rem', // 20px\n  MATERIAL_FONT_SIZE_SUBTITLE_1: '1rem', // 16px\n  MATERIAL_FONT_SIZE_SUBTITLE_2: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_BODY_1: '1rem', // 16px\n  MATERIAL_FONT_SIZE_BODY_2: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_BUTTON: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_CAPTION: '0.75rem', // 12px\n  MATERIAL_FONT_SIZE_OVERLINE: '0.625rem', // 10px\n  BREAKPOINT_MIN_XS: 0,\n  BREAKPOINT_MAX_XS: 599,\n  BREAKPOINT_MIN_SM: 600,\n  BREAKPOINT_MAX_SM: 959,\n  BREAKPOINT_MIN_MD: 960,\n  BREAKPOINT_MAX_MD: 1279,\n  BREAKPOINT_MIN_LG: 1280,\n  BREAKPOINT_MAX_LG: 1919,\n  BREAKPOINT_MIN_XL: 1920,\n  BREAKPOINT_LG_MAX_WIDTH: 1140, // from Bootstrap\n  DRAWER_WIDTH: 256,\n  FOOTER_HEIGHT: 96,\n  ICON_SVG_PATH_TPS: 'M16 8V4l8 8-8 8v-4h-5V8h5zM9 8H7v8h2V8zM4.986 8H3v8h1.986V8zM1 8H0v8h1V8z',\n  ICON_SVG_PATH_VOLUME: 'M24 14.182h-6.545v7.636H24zm-8.727-12H8.727v19.636h6.546zM6.545 21.818H0v-12h6.545z',\n  ICON_SVG_PATH_MARKET_CAP: 'M24 3.621l-7.21 1.467 2.062 2.053-6.43 6.438-3.606-3.607L0 18.675l1.694 1.703 7.117-7.01 3.594 3.597 8.149-8.126 2.003 1.995z',\n  ICON_SVG_PATH_BLOCK: 'M12 0L1 6v12.131L12 24l11-5.869V6.065L12 0zm7.91 6.646l-7.905 4.218L4.133 6.57l7.862-4.289 7.915 4.365zM3 8.23l8 4.363V21.2l-8-4.268V8.23zM13 21.2v-8.6l8-4.269v8.6L13 21.2z',\n  ICON_SVG_PATH_PRICE: 'M19 16.166c0-4.289-4.465-5.483-7.887-7.091-2.079-1.079-1.816-3.658 1.162-3.832 1.652-.1 3.351.39 4.886.929l.724-3.295c-1.814-.551-3.437-.803-4.885-.841V0h-2v2.134c-3.89.535-5.968 2.975-5.968 5.7 0 4.876 5.693 5.62 7.556 6.487 2.54 1.136 2.07 3.5-.229 4.021-1.993.451-4.538-.337-6.45-1.079L5 20.551c1.787.923 3.931 1.417 6 1.453V24h2v-2.105c3.313-.464 6.005-2.293 6-5.729z',\n  ICON_SVG_PATH_BLOCK_TIME: 'M13 12l-.688-4h-.609L11 12a1.99 1.99 0 0 0-1 1.723 2 2 0 0 0 4 0A1.99 1.99 0 0 0 13 12zm-1-8C6.478 4 2 8.477 2 14s4.478 10 10 10 10-4.477 10-10S17.522 4 12 4zm0 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8zM10 2.181V0h4v2.181c-1.438-.243-2.592-.238-4 0zm9.179 2.226L20.586 3 22 4.414l-1.321 1.321a12.134 12.134 0 0 0-1.5-1.328z',\n  ICON_SVG_PATH_THEME_LIGHT: 'M.307 13.306a11.99 11.99 0 0 0 4.489 8.072 11.999 11.999 0 0 0 11.637 1.883 12.038 12.038 0 0 0 5.316-3.839 12.04 12.04 0 0 0 1.895-3.402.67.67 0 0 0-1.018-.775 9.122 9.122 0 0 1-2.15 1.124 9.114 9.114 0 0 1-8.842-1.43 9.11 9.11 0 0 1-3.412-6.136 9.11 9.11 0 0 1 1.926-6.751c.245-.308.52-.61.818-.9a.67.67 0 0 0-.572-1.144A12.044 12.044 0 0 0 2.84 4.425a11.987 11.987 0 0 0-2.533 8.88zm3.584-8.047a10.7 10.7 0 0 1 4.723-3.41l.027-.01a10.433 10.433 0 0 0-1.752 7.118 10.444 10.444 0 0 0 3.912 7.033 10.448 10.448 0 0 0 10.135 1.64c.196-.072.39-.15.583-.232A10.697 10.697 0 0 1 15.975 22 10.665 10.665 0 0 1 5.63 20.327a10.656 10.656 0 0 1-3.99-7.174A10.653 10.653 0 0 1 3.89 5.259z',\n  ICON_SVG_PATH_THEME_DARK: 'M.307 13.306a11.99 11.99 0 0 0 4.489 8.072 11.999 11.999 0 0 0 11.637 1.883 12.038 12.038 0 0 0 5.316-3.839 12.04 12.04 0 0 0 1.895-3.402.67.67 0 0 0-1.018-.775 9.122 9.122 0 0 1-2.15 1.124 9.114 9.114 0 0 1-8.842-1.43 9.11 9.11 0 0 1-3.412-6.136 9.11 9.11 0 0 1 1.926-6.751c.245-.308.52-.61.818-.9a.67.67 0 0 0-.572-1.144A12.044 12.044 0 0 0 2.84 4.425a11.987 11.987 0 0 0-2.533 8.88z',\n  ICON_SVG_PATH_BITCOIN: 'M21.018 9.648c.377-2.521-1.543-3.877-4.168-4.781l.852-3.416-2.08-.519-.829 3.326a86.982 86.982 0 0 0-1.666-.392l.835-3.348L11.884 0l-.852 3.415a69.57 69.57 0 0 1-1.328-.312l.002-.01-2.867-.717-.554 2.221s1.543.354 1.51.376c.843.21.995.767.97 1.21l-.97 3.89c.058.016.133.037.216.07l-.22-.054-1.36 5.451c-.103.256-.364.64-.953.494.02.03-1.511-.377-1.511-.377l-1.033 2.38 2.706.675c.504.126.997.258 1.483.382l-.86 3.455 2.076.519.853-3.419c.567.154 1.118.296 1.657.43l-.85 3.403 2.08.518.86-3.449c3.546.671 6.212.4 7.335-2.807.904-2.582-.045-4.071-1.91-5.042 1.358-.314 2.381-1.207 2.654-3.054zm-4.75 6.663c-.643 2.582-4.991 1.186-6.4.836l1.141-4.578c1.41.352 5.93 1.049 5.258 3.742zm.642-6.7c-.586 2.349-4.205 1.156-5.378.863l1.035-4.152c1.174.293 4.954.84 4.343 3.29z',\n  ABOUT_PAGE_MARGIN_XS: 8,\n  ABOUT_PAGE_MARGIN_SM: 48,\n  ABOUT_PAGE_MARGIN_MD: 64,\n  ABOUT_PAGE_MARGIN_LG: 128,\n  HOME_PAGE_MARGIN_XS: 8,\n  HOME_PAGE_MARGIN_SM_AND_UP: 32,\n  ABOUT_PAGE_PROJECT_ICONS_HEIGHT: 55,\n  COINBASE_CHECKOUT_ID: '0d82d9e4-06c8-44b5-8f81-ef296be643e6',\n  GOOGLE_ANALYTICS_TRACKING_ID: 'UA-138212575-1'\n});\n\nexport default Constants;\n","/**\n * @file globalStyle\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport { createGlobalStyle } from 'styled-components';\nimport Constants from '../constants';\n\n/**\n * StyledComponent that handles global styles.\n */\nexport const GlobalStyle = createGlobalStyle`\n   body {\n    margin: 0;\n    padding: 0;\n    background: ${props => props.theme.colorBodyBackground};\n   }\n`;\n\n/**\n * The styled-components ThemeProvider light theme.\n */\nexport const themeLight = {\n  // Should use constants for all!!!\n  isDark: false,\n  colorAboutBackgroundPrimary: 'white',\n  colorAboutBackgroundSecondary: '#F8F9FA', // Google Analytics (verified), Wikipedia (verified)\n  //!!!colorAboutBackgroundSecondary: '#FAFAFA', // YouTube (verified), Google Translate (verified), DFINITY\n  colorAboutButtonBackground: '#007DBC',\n  colorAboutButtonText: Constants.COLOR_TEXT_LIGHT,\n  colorAboutButtonHoverBackground: '#009DDD',\n  colorAboutButtonHoverText: Constants.COLOR_TEXT_LIGHT,\n  colorAboutHeaderText: 'white',\n  colorAboutTwitterBackground: 'white',\n  colorAppBarBackground: 'white',\n  colorAppBarTextButton: Constants.COLOR_LIGHT_TEXT_FADED, // (#4D4D4D)\n  colorAppBarButtonHover: 'black',\n  colorAppBarDfinityText: 'black', // consider matching to colorBodyText!!!\n  colorAppBarExplorerText: '#007DBC', //'#F98E00', // use constant for \"500\" version of light orange!!! //'#FA9F00', is 400\n  colorBodyBackground: '#F8F9FA', // Wikipedia (verified)\n  colorBodyText: '#202124', // Google text (verified)\n  colorBodyTextDim: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorBodyTextLink: '#007DBC',\n  // It seems odd to use an array for the icon color, but not the background color. Could remove array completely if not needed!!!\n  colorDashCardDBackground: 'white',//'#F07200', //'#D54C1C', //'#E3531F', //'#D54C1C', //'#BB4015', //Constants.COLOR_TWITTER_BLUE,\n  colorDashCardCBackground: 'white',//'#C40059', //'#AF0056', //'#C40059', //'#AF0056', //'#89004F', //Constants.COLOR_TWITTER_PURPLE,\n  colorDashCardBBackground: 'white',//'#722B8D', //'#632684', //'#722B8D', //'#632684', //'#471E73', //Constants.COLOR_TWITTER_GREEN,\n  colorDashCardABackground: 'white',//'#007DBC', //'#006DA8', //'#004E88', //Constants.COLOR_TWITTER_ORANGE,\n  // Remove extraneous colorDashCardIcon settings once finalized!!!\n  //!!!colorDashCardIcon: ['#007DBC', '#722B8D', '#C40059', '#F07200'],\n  //!!!colorDashCardIcon: ['rgba(0, 125, 188, 1)', 'rgba(114, 43, 141, 0.8)', 'rgba(196, 0, 89, 0.8)', 'rgba(240, 114, 0, 0.8)'],\n  //!!!colorDashCardIcon: ['#007DBC', '#843196', '#DA005E', '#F68200'],\n  colorDashCardIcon: ['#007DBC', '#9440A6', '#DA005E', '#F79308'], // Ori's purple and orange\n  // Actual DFINITY symbol colors.\n  //!!!colorDashCardIcon: ['rgb(41, 171, 226)', 'rgb(99, 38, 132)', 'rgb(237, 30, 121)', 'rgb(251, 176, 59)'],\n  colorDashCardIconOpacity: 1.0,\n  colorDrawerBackground: 'white',\n  colorDrawerDivider: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorDrawerIcon: Constants.COLOR_LIGHT_DRAWER_ICON_GOOGLE,\n  colorDrawerIconTextSelected: '#007DBC',//!!!Constants.COLOR_DFINITY_BLUE,\n  colorDrawerText: Constants.COLOR_LIGHT_DRAWER_TEXT_GOOGLE,\n  colorChartBackground: 'white',\n  colorChartTooltipBackground: 'rgba(255, 255, 255, 0.96)',\n  colorChartAxes: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorChartGrid: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorChartText: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorChartLine: '#007DBC',\n  colorChartActiveDotStroke: 'white',\n  colorTableBackgroundPrimary: 'white',\n  colorTableRowBorder: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE, // Google Maps drawer divider (verified)\n  colorTableTextDim: '#909090', // YouTube, footer text dim (verified)\n  colorFooterBackground: '#F5F5F5',\n  colorFooterTextIcon: '#909090', // YouTube (verified)\n  colorFooterIconHover: 'white',\n  colorSearchText: '#202124', // Google text (verified)\n  colorSearchIcon: '#9E9E9E' //  Material Design icon(verified)\n}\n\n/**\n * The styled-components ThemeProvider dark theme.\n */\nexport const themeDark = {\n  isDark: true,\n  // Remove any of these colorAbout's that aren't used!!!\n  // These two colors are actually pretty close to DFINITY darker and dark!!!\n  colorAboutBackgroundPrimary: '#1B1B1B', // MacOS Finder, etc.\n  colorAboutBackgroundSecondary: '#262626', // MacOS Finder\n  colorAboutButtonBackground: '#007DBC',\n  colorAboutButtonText: '#DCDCDC',\n  colorAboutButtonHoverBackground: '#009DDD',\n  colorAboutButtonHoverText: Constants.COLOR_TEXT_LIGHT,\n  colorAboutHeaderText: 'white',\n  colorAboutTwitterBackground: '#262626',\n  colorAppBarBackground: '#262626', //!!!Constants.COLOR_DFINITY_BLACK,\n  colorAppBarTextButton: Constants.COLOR_DARK_TEXT_FADED,\n  colorAppBarButtonHover: Constants.COLOR_DARK_TEXT,\n  colorAppBarDfinityText: Constants.COLOR_DARK_TEXT,\n  colorAppBarExplorerText: Constants.COLOR_DFINITY_LIGHT_ORANGE, // '#0090CF'!!!\n  colorBodyBackground: '#1B1B1B', // MacOS Finder, etc.\n  colorBodyText: '#DCDCDC', // MacOS Calendar, iTunes\n  colorBodyTextDim: '#DCDCDC', // MacOS Calendar, iTunes\n  colorBodyTextLink: '#0090CF',\n  colorDashCardABackground: '#262626', //!!!Constants.COLOR_DFINITY_BLACK,\n  colorDashCardBBackground: '#262626', //!!!Constants.COLOR_DFINITY_BLACK,\n  colorDashCardCBackground: '#262626', //!!!Constants.COLOR_DFINITY_BLACK,\n  colorDashCardDBackground: '#262626', //!!!Constants.COLOR_DFINITY_BLACK,\n  colorDashCardIcon: ['white', 'white', 'white', 'white'],\n  colorDashCardIconOpacity: 0.5,\n  colorDrawerBackground: '#262626', //!!!Constants.COLOR_DFINITY_BLACK,\n  colorDrawerDivider: Constants.COLOR_DARK_DRAWER_DIVIDER_YOUTUBE,\n  colorDrawerIcon: Constants.COLOR_DARK_TEXT_FADED,\n  colorDrawerIconTextSelected: 'white',\n  colorDrawerText: Constants.COLOR_DARK_TEXT_FADED,\n  colorChartBackground: '#262626',\n  colorChartTooltipBackground: 'rgba(38, 38, 38, 0.96)',\n  colorChartAxes: '#808080',\n  colorChartGrid: Constants.COLOR_DARK_DRAWER_DIVIDER_MAC_OS,\n  colorChartText: Constants.COLOR_DARK_TEXT_FADED,\n  colorChartLine: '#0090CF',\n  colorChartActiveDotStroke: '#262626',\n  colorTableBackgroundPrimary: '#262626', // MacOS Finder\n  colorTableRowBorder: Constants.COLOR_DARK_DRAWER_DIVIDER_YOUTUBE,\n  colorTableTextDim: '#717171', // YouTube (Dark), footer text dim (verified)\n  colorFooterBackground: '#262626', //!!!Constants.COLOR_DFINITY_BLACK\n  colorFooterTextIcon: '#808080', // Netflix (verified)\n  colorFooterIconHover: 'white',\n  colorSearchText: '#202124', // Google text (verified)\n  colorSearchIcon: '#9E9E9E' //  Material Design icon (verified)\n}\n","/**\n * @file ResponsiveComponent\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport { Component } from 'react';\nimport { throttle } from 'throttle-debounce';\n\n/**\n * Base class component which re-renders when the window is resized.\n */\nclass ResponsiveComponent extends Component {\n  /**\n   * Create a ResponsiveComponent object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n\n    // Throttle the calls to handleWindowResize() so that we're not constantly re-rendering.\n    this.throttledHandleWindowResize = throttle(200, true, this.handleWindowResize);\n  }\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree).\n   * @public\n   */\n  componentDidMount() {\n    window.addEventListener('resize', this.throttledHandleWindowResize);\n  }\n\n  /**\n   * Invoked by React immediately before a component is unmounted and destroyed.\n   * @public\n   */\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.throttledHandleWindowResize);\n  }\n\n  /**\n   * Force the component to re-render when the window is resized.\n   * @private\n   */\n  handleWindowResize() {\n    this.forceUpdate();\n  }\n};\n\nexport default ResponsiveComponent;\n","/**\n * @file TrackablePage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport ReactGA from 'react-ga';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent';\n\n/**\n * Base class component for a page which is trackable by react-ga.\n */\nclass TrackablePage extends ResponsiveComponent {\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    // Scroll to the top on every page change.\n    window.scrollTo(0, 0);\n\n    const pathName = this.props.location.pathname + this.props.location.search;\n    this.trackPage(pathName);\n}\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @param {Object} prevProps The previous props.\n   * @public\n   */\n  componentDidUpdate(prevProps) {\n    const currentPathName = prevProps.location.pathname + prevProps.location.search;\n    const nextPathName = this.props.location.pathname + this.props.location.search;\n\n    if (currentPathName !== nextPathName)\n      this.trackPage(nextPathName);\n  }\n\n  /**\n   * Track the page using react-ga.\n   * @param {String} pathName The path name of the page.\n   * @private\n   */\n  trackPage(pathName) {\n    // Track production build, but not development build.\n    if (process.env.NODE_ENV === 'production') {\n      ReactGA.set({ page: pathName });\n      ReactGA.pageview(pathName);\n    }\n  }\n}\n\nexport default TrackablePage;\n","/**\n * @file FadeTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  Fade,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { Transition } from 'react-spring/renderprops';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorTableBackgroundPrimary};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 4px;\n    padding-left: 11px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    }\n  }\n`;\n\nconst StyledTable = styled(Table)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    /* Needed for footer border-top to work. */\n    border-collapse: separate;\n  }\n`;\n\n// For some reason, tableRowHeight needs to be an odd number for expanding to work correctly on the\n// first row. If it's set to an even number, the slide in has a 1px stutter following the animation.\nconst tableRowHeight = 39;\nconst TableRowHeader = styled(TableRow)`\n  && {\n    height: ${tableRowHeight + 'px'};\n  }\n`;\n\n// The height for the table body rows is set dynamically, so that we can perform expand/collapse\n// animations.\nconst TableRowBody = styled(TableRow)`\n  && {\n    height: auto;\n  }\n`;\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    border-color: ${props => props.theme.colorTableRowBorder};\n    color: ${props => props.theme.colorBodyText};\n    font-size: 15px;\n    white-space: nowrap;\n    /* Reducing the font size for narrow page widths seems sufficient for resizing the table when\n       Grid spacing is 0 and padding={'checkbox'}. Other settings, such as 'overflow: hidden' and\n       'max-width: 0px', were also helpful in improving the table at narrow page widths, but do\n       not seem to be necessary with the current settings. Another useful setting is\n       'text-overflow: ellipsis', though we reduce the font size rather than using ellipsis. */\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      font-size: 11px;\n    }\n  }\n`;\n\nconst TableCellHeader = styled(StyledTableCell)`\n  && {\n    border-bottom-style: solid;\n    border-bottom-width: 2px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst TableRowFooter = styled(TableRow)`\n  && {\n    height: 20px;\n  }\n`;\n\nconst TableCellFooter = styled(StyledTableCell)`\n  && {\n    border-top-style: solid;\n    border-top-width: 1px;\n    color: ${props => props.theme.colorTableTextDim};\n    font-size: 9px;\n  }\n`;\n\n/**\n * Base class that implements a table component where new rows fade in.\n */\nclass FadeTable extends Component { // rename to DynamicTable?!!!\n  static propTypes = {\n    /**\n     * Indicates whether rows should expand when they are created and collapse when they are\n     * destroyed.\n     */\n    expandRows: PropTypes.bool, // rename to slide!!!\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    // BUG: Screen scrolls due to expanding collapsing. Possibly try to set the paper height or min-height to avoid this!!!\n    // Happens when collapsing row is on screen but expanding row is off screen, common with mobile!!!\n    return (\n      <StyledPaper elevation={1}>\n      {/*!!! <StyledPaper elevation={1} style={{ height: 500 }}> */}\n        <TypographyTitle>{this.getTitle()}</TypographyTitle>\n        <StyledTable>\n          <colgroup>\n            {this.getColumnWidths().map((width, index) => {\n              // The column width settings seem to be ignored in many cases, depending on cell\n              // length. That is, when cell lengths are long, the widths are ignored.\n              return (\n                <col key={index} width={width} />\n              );\n            })}\n          </colgroup>\n          <TableHead>\n            <TableRowHeader>\n              {this.getHeaderRow().map((cell, index) => {\n                return (\n                  // Using index as the key is fine here and for cells in other rows, since we never\n                  // add, remove, reorder, or filter items in the cell arrays.\n                  <TableCellHeader\n                    key={index}\n                    align={cell.isNumeric ? 'right' : 'inherit'}\n                    padding={'checkbox'}\n                  >\n                  {cell.link != null ?\n                    <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                    cell.value\n                  }\n                  </TableCellHeader>\n                );\n              })}\n            </TableRowHeader>\n          </TableHead>\n          <TableBody>\n            {this.getBodyRowElements()}\n          </TableBody>\n          <TableFooter>\n            <TableRowFooter>\n              {this.getFooterRow().map((cell, index) => {\n                return (\n                  <TableCellFooter\n                    key={index}\n                    align={cell.isNumeric ? 'right' : 'inherit'}\n                    padding={'checkbox'}\n                  >\n                  {cell.link != null ?\n                    <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                    cell.value\n                  }\n                  </TableCellFooter>\n                );\n              })}\n            </TableRowFooter>\n          </TableFooter>\n        </StyledTable>\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the elements for all of the body rows.\n   * @return {Object} The elements for all of the body rows.\n   * @private\n   */\n  getBodyRowElements() {\n    const { expandRows, maxRows } = this.props;\n    let rows = this.getBodyRows().slice(0, maxRows);\n    if (expandRows) {\n      // Use a Transition element to expand (and fade in) entering rows and collapse (and fade out)\n      // leaving rows.\n      return (\n        <Transition\n          items={rows}\n          keys={bodyRow => bodyRow.mapKey}\n          from={{ height: 0, opacity: 0 }}\n          enter={{ height: tableRowHeight, opacity: 1 }}\n          leave={{ height: 0, opacity: 0 }}\n        >\n          {/* Function signature: (item, state, index) => props => ReactNode */}\n          {(bodyRow, state, index) => style => this.getBodyRowElement(bodyRow, state, index, style)}\n        </Transition>\n      );\n    }\n    else {\n      return rows.map((bodyRow, index) => {\n        // When not expanding/collapsing rows, use a Fade element to fade in and fade out.\n        return (\n          <Fade\n            key={bodyRow.mapKey}\n            in={true}\n            timeout={500}\n          >\n            {this.getBodyRowElement(bodyRow, 'update', index, { height: tableRowHeight })}\n          </Fade>\n        );\n      });  \n    }\n  }\n\n  /**\n   * Return the element for the specified body row.\n   * @param {Object} bodyRow Object that describes the body row.\n   * @param {String} state The item's transition state: enter, leave, or update.\n   * @param {Number} rowIndex The item's row index. \n   * @param {Object} style The style to apply to the table cell Grid, specifying the height.\n   * @return {Object} The element for the specified body row.\n   * @private\n   */\n  getBodyRowElement(bodyRow, state, rowIndex, style) {\n    return (\n      <TableRowBody>\n        {bodyRow.cells.map((cell, index) => {\n          return (\n            <StyledTableCell\n              key={index}\n              padding={'checkbox'}\n              // Hide the border on rows that are leaving, so that table height remains consistent.\n              style={state === 'leave' ? {borderBottomStyle: 'hidden'} : null}\n            >\n              <Grid container\n                direction='row'\n                justify={cell.isNumeric ? 'flex-end' : 'flex-start'}\n                alignItems='center'\n                style={style}\n              >\n                {cell.link != null ?\n                  <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                  cell.value\n                }\n              </Grid>\n            </StyledTableCell>\n          );\n        })}\n      </TableRowBody>\n    );\n  }\n\n  /**\n   * Return the title of the table.\n   * @return {String} The title of the table.\n   * @protected\n   */\n  getTitle() {\n    throw new Error('FadeTable.getTitle() not implemented.');\n  }\n\n  /**\n   * Return an array that specifies the column widths of the table.\n   * @return {Array} An array that specifies the column widths of the table.\n   * @protected\n   */\n  getColumnWidths() {\n    throw new Error('FadeTable.getColumnWidths() not implemented.');\n  }\n\n  /**\n   * Return an array of objects that describe the cells of the header row.\n   * @return {Array} An array of objects that describe the cells of the header row.\n   * @protected\n   */\n  getHeaderRow() {\n    throw new Error('FadeTable.getHeaderRow() not implemented.');\n  }\n\n  /**\n   * Return an array of objects that describe the body rows.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    throw new Error('FadeTable.getBodyRows() not implemented.');\n  }\n\n  /**\n   * Return an array of objects that describe the cells of the footer row.\n   * @return {Array} An array of objects that describe the cells of the footer row.\n   * @protected\n   */\n  getFooterRow() {\n    throw new Error('FadeTable.getFooterRow() not implemented.');\n  }\n}\n\nexport default FadeTable;\n","/**\n * @file queryBlocks\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get blocks.\n * @return {Array} The array of Block objects.\n */\nconst queryBlocks = gql`\n  query Blocks($first: Int) {\n    blocks(first: $first, orderBy: height_DESC) {\n      id\n      height\n      timestamp\n      numTransactions\n    }\n  }\n`;\n\nexport default queryBlocks;\n","/**\n * @file subscriptionBlock\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL subscription to receive a new block.\n * @return {Object} The new Block object.\n */\nconst subscriptionBlock = gql`\n  subscription {\n    block {\n      node {\n        id\n        height\n        timestamp\n        numTransactions\n      }\n    }\n  }\n`;\n\nexport default subscriptionBlock;\n","/**\n * @file BlocksTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport FadeTable from '../FadeTable/FadeTable';\nimport queryBlocks from '../../graphql/queryBlocks';\nimport subscriptionBlock from '../../graphql/subscriptionBlock';\n\n/**\n * This component displays a table of Block objects with data retrieved via GraphQL.\n */\nclass BlocksTableWithData extends Component {\n  static propTypes = {\n    /**\n     * Callback fired when a new block is added.\n     */\n    handleAddNewBlock: PropTypes.func,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a BlocksTableWithData object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.firstBlockAdded = false;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleQueryCompleted = this.handleQueryCompleted.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <Query\n        query={queryBlocks}\n        variables={{ first: this.props.maxRows }}\n        onCompleted={this.handleQueryCompleted}\n      >\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n          if (loading)\n            return (\n              <BlocksTable\n                blocks={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                maxRows={this.props.maxRows}\n                loading\n              />\n            );\n          else if (error)\n            return (\n              <BlocksTable\n                blocks={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                maxRows={this.props.maxRows}\n                error\n              />\n            );\n          else {\n            return (\n              <BlocksTable\n                blocks={data.blocks}\n                subscribeToNewObjects={subscribeToNewObjects}\n                maxRows={this.props.maxRows}\n                expandRows\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Callback fired when the Query is completed.\n   * @param {Object} data The query data.\n   * @private\n   */\n  handleQueryCompleted(data) {\n    if (!this.firstBlockAdded && data.blocks.length) {\n      this.firstBlockAdded = true;\n\n      // Add a new block to the parent.\n      if (this.props.handleAddNewBlock)\n        this.props.handleAddNewBlock(data.blocks[0]);\n    }\n  }\n\n  /**\n   * Subscribe to receive new objects of the body of the table using subscribeToMore and update the\n   * query's store by merging the subscription data with the previous data.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionBlock,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n\n        // Add a new block to the parent.\n        if (this.props.handleAddNewBlock)\n          this.props.handleAddNewBlock(subscriptionData.data.block.node);\n\n        // Add the new block to the front of the blocks[] array, keeping at most this.props.maxRows\n        // blocks.\n        return {\n          blocks: [\n            subscriptionData.data.block.node,\n            ...prev.blocks\n          ].slice(0, this.props.maxRows)\n        };\n      }\n    });\n\n  }\n}\n\n/**\n * This component displays a table of Block objects.\n */\nclass BlocksTable extends FadeTable {\n  static propTypes = {\n    /**\n     * Array of block objects.\n     */\n    blocks: PropTypes.array.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Indicates whether rows should expand when they are created and collapse when they are\n     * destroyed.\n     */\n    expandRows: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the body of the table.\n     */\n    subscribeToNewObjects: PropTypes.func\n  };\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the body of the table.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n\n  /**\n   * Return the title of the table.\n   * @return {String} The title of the table.\n   * @protected\n   */\n  getTitle() {\n    return 'Blocks';\n  }\n\n  /**\n   * Return an array that specifies the column widths of the table.\n   * @return {Array} An array that specifies the column widths of the table.\n   * @protected\n   */\n  getColumnWidths() {\n    return ['30%', '40%', '30%'];\n  }\n\n  /**\n   * Return an array of objects that describe the cells of the header row.\n   * @return {Array} An array of objects that describe the cells of the header row.\n   * @protected\n   */\n  getHeaderRow() {\n    return [\n      {value: 'Height', isNumeric: false, link: null},\n      {value: 'Timestamp', isNumeric: false, link: null},\n      {value: 'Transactions', isNumeric: true, link: null}\n    ];\n  }\n\n  /**\n   * Return an array of objects that describe the body rows.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { blocks, loading, error } = this.props;\n    if (loading)\n      return [{mapKey: 'LOADING', cells: [{value: 'Loading...', isNumeric: false, link: null}]}];\n    else if (error)\n      return [{mapKey: 'ERROR', cells: [{value: 'Network error', isNumeric: false, link: null}]}];\n    else {\n      let bodyRows = blocks.map((block) => {\n        const date = new Date(block.timestamp);\n        return {\n          mapKey: block.height,\n          cells: [\n            {\n              value: block.height.toLocaleString(),\n              isNumeric: false,\n              link: `/block/${block.height}`\n            },\n            {value: date.toLocaleString(), isNumeric: false, link: null},\n            {value: block.numTransactions.toLocaleString(), isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n  }\n\n  /**\n   * Return an array of objects that describe the cells of the footer row.\n   * @return {Array} An array of objects that describe the cells of the footer row.\n   * @protected\n   */\n  getFooterRow() {\n    return [\n      {value: null, isNumeric: false, link: null},\n      {value: null, isNumeric: false, link: null},\n      {value: '(simulated data)', isNumeric: true, link: null}\n    ];\n  }\n}\n\nexport default BlocksTableWithData;\n","/**\n * @file queryTransactions\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get transactions.\n * @return {Array} The array of Transaction objects.\n */\nconst queryTransactions = gql`\n  query Transactions($first: Int) {\n    transactions(first: $first, orderBy: createdAt_DESC) {\n      id\n      hash\n      amount\n    }\n  }\n`;\n\nexport default queryTransactions;\n","/**\n * @file subscriptionTransaction\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL subscription to receive a new transaction.\n * @return {Object} The new Transaction object.\n */\nconst subscriptionTransaction = gql`\n  subscription {\n    transaction {\n      node {\n        id\n        hash\n        amount\n      }\n    }\n  }\n`;\n\nexport default subscriptionTransaction;\n","/**\n * @file getHashString\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\n/**\n * Return a string containing the hash which has been modified for display.\n * @param {String} hash The hash to modify for display.\n * @param {Number} maxLength The maximum length of the hash string.\n * @return {Array} A string containing the hash which has been modified for display.\n * @protected\n */\nexport default function getHashString(hash, maxLength) {\n  if (maxLength === undefined)\n    maxLength = 24;\n  hash = \"0x\" + hash;\n  if (maxLength !== 0 && hash.length > maxLength) {\n    const first = hash.substring(0, maxLength - 4);\n    const last = hash.substr(hash.length - 4);\n    return first + \"...\" + last;\n  }\n  else\n    return hash;\n}\n\n","/**\n * @file TransactionsTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport FadeTable from '../FadeTable/FadeTable';\nimport queryTransactions from '../../graphql/queryTransactions';\nimport subscriptionTransaction from '../../graphql/subscriptionTransaction';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a table of Transaction objects with data retrieved via GraphQL.\n */\nclass TransactionsTableWithData extends Component {\n  static propTypes = {\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <Query query={queryTransactions} variables={{ first: this.props.maxRows }}>\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n          if (loading)\n            return (\n              <TransactionsTable\n                transactions={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                maxRows={this.props.maxRows}\n                loading\n              />\n            );\n          else if (error)\n            return (\n              <TransactionsTable\n                transactions={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                maxRows={this.props.maxRows}\n                error\n              />\n            );\n          else {\n            return (\n              <TransactionsTable\n                transactions={data.transactions}\n                subscribeToNewObjects={subscribeToNewObjects}\n                maxRows={this.props.maxRows}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new objects of the body of the table using subscribeToMore and update the\n   * query's store by merging the subscription data with the previous data.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionTransaction,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n\n        // Add the new transaction to the front of the transactions[] array, keeping at most\n        // this.props.maxRows transactions.\n        return {\n          transactions: [\n            subscriptionData.data.transaction.node,\n            ...prev.transactions\n          ].slice(0, this.props.maxRows)\n        };\n      }\n    });\n  }\n}\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass TransactionsTable extends FadeTable { \n  static propTypes = {\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the body of the table.\n     */\n    subscribeToNewObjects: PropTypes.func,\n    /**\n     * Array of transaction objects.\n     */\n    transactions: PropTypes.array.isRequired\n  };\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the body of the table.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n\n  /**\n   * Return the title of the table.\n   * @return {String} The title of the table.\n   * @protected\n   */\n  getTitle() {\n    return 'Transactions';\n  }\n\n  /**\n   * Return an array that specifies the column widths of the table.\n   * @return {Array} An array that specifies the column widths of the table.\n   * @protected\n   */\n  getColumnWidths() {\n    return ['60%', '40%'];\n  }\n\n  /**\n   * Return an array of objects that describe the cells of the header row.\n   * @return {Array} An array of objects that describe the cells of the header row.\n   * @protected\n   */\n  getHeaderRow() {\n    return [\n      {value: 'Hash', isNumeric: false, link: null},\n      {value: 'Amount', isNumeric: true, link: null}\n    ];\n  }\n\n  /**\n   * Return an array of objects that describe the body rows.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { transactions, loading, error } = this.props;\n    if (loading)\n      return [{mapKey: 'LOADING', cells: [{value: 'Loading...', isNumeric: false, link: null}]}];\n    else if (error)\n      return [{mapKey: 'ERROR', cells: [{value: 'Network error', isNumeric: false, link: null}]}];\n    else {\n      let bodyRows = transactions.map((transaction) => {\n        return {\n          mapKey: transaction.hash,\n          cells: [\n            {\n              value: getHashString(transaction.hash),\n              isNumeric: false,\n              link: `/tx/0x${transaction.hash}`\n            },\n            {value: transaction.amount.toFixed(8).toString() + ' DFN', isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n  }\n\n  /**\n   * Return an array of objects that describe the cells of the footer row.\n   * @return {Array} An array of objects that describe the cells of the footer row.\n   * @protected\n   */\n  getFooterRow() {\n    return [\n      {value: null, isNumeric: false, link: null},\n      {value: '(simulated data)', isNumeric: true, link: null}\n    ];\n  }\n}\n\nexport default TransactionsTableWithData;\n","/**\n * @file DashCard\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Paper,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport Constants from '../../constants';\n\nconst GridNoWrap = styled(Grid)`\n  && {\n    /* Setting min-width to 0px allows the Grid to narrow past the implied width of its children. */\n    min-width: 0px;\n  }\n`;\n\nconst SvgIconCard = styled(SvgIcon)`\n  && {\n    /* The combination of margin, padding, and font-size explicitly set the height of the card. */\n    margin: 30px;\n    font-size: 42px;\n    opacity: ${props => props.theme.colorDashCardIconOpacity};\n    color: ${props => props.theme.colorDashCardIcon[props.cardindex]};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-weight: 300;\n    font-size: 14px;\n  }\n`;\n\nconst TypographyValue = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-weight: 200;\n    font-size: 28px;\n  }\n`;\n\n/**\n * This component displays a dashboard card.\n */\nclass DashCard extends Component { \n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string,\n    /**\n     * The d attribute of the SvgIcon path.\n     */\n    svgIconPath: PropTypes.string.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the card using GraphQL.\n     */\n    subscribeToNewObjects: PropTypes.func,\n    /**\n     * The title string of the card.\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * The value string of the card.\n     */\n    value: PropTypes.string.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the card using GraphQL.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let {\n      cardIndex,\n      className,\n      svgIconPath,\n      title,\n      value\n    } = this.props;\n\n    return (\n      <Paper className={className} elevation={1}>\n        <Grid container direction='row' justify='flex-start' alignItems='center' wrap='nowrap'>\n          <Grid item>\n            <SvgIconCard cardindex={cardIndex}>\n              <path d={svgIconPath} />\n            </SvgIconCard>\n          </Grid>\n          <GridNoWrap container direction='column' justify='center' alignItems='flex-start'>\n            {/* The usage of Grid elements here is required to get Typography noWrap to work. */}\n            <Grid container direction='row' justify='flex-start' alignItems='center'>\n              <GridNoWrap item>\n                <TypographyTitle className={className} noWrap>\n                  {title}\n                </TypographyTitle>\n              </GridNoWrap>\n            </Grid>\n            <Grid container direction='row' justify='flex-start' alignItems='center'>\n              <GridNoWrap item>\n                <TypographyValue className={className} noWrap>\n                  {value}\n                </TypographyValue>\n              </GridNoWrap>\n            </Grid>\n          </GridNoWrap>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default DashCard;\n","/**\n * @file queryNetworkStats\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get the current NetworkStats object.\n * @return {Number} The current NetworkStats object.\n */\nconst queryNetworkStats = gql`\n  {\n    networkStats {\n      secondsPerBlock\n      transactionsPerSecond\n    }\n  }\n`;\n\nexport default queryNetworkStats;\n","/**\n * @file subscriptionNetworkStats\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL subscription to receive a NetworkStats updates.\n * @return {Object} The updated NetworkStats object.\n */\nconst subscriptionNetworkStats = gql`\n  subscription {\n    networkStats {\n      node {\n        secondsPerBlock\n        transactionsPerSecond\n      }\n    }\n  }\n`;\n\nexport default subscriptionNetworkStats;\n","/**\n * @file BlockTimeCard\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryNetworkStats from '../../graphql/queryNetworkStats';\nimport subscriptionNetworkStats from '../../graphql/subscriptionNetworkStats';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with seconds per block retrieved via GraphQL.\n */\nclass BlockTimeCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query query={queryNetworkStats}>\n      {({ loading, error, data, subscribeToMore }) => {\n        const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n        let secondsPerBlock;\n        if (loading)\n          secondsPerBlock = 'Loading...';\n        else if (error)\n          secondsPerBlock = 'Network error';\n        else\n          secondsPerBlock = data.networkStats.secondsPerBlock.toFixed(1) + ' s';\n        return (\n          <DashCard\n            className={className}\n            cardIndex={cardIndex}\n            title='Avg Block Time'\n            value={secondsPerBlock}\n            svgIconPath={Constants.ICON_SVG_PATH_BLOCK_TIME}\n            subscribeToNewObjects={subscribeToNewObjects}\n          />\n        );\n      }}\n    </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new NetworkStats objects using subscribeToMore, and update the query's\n   * store by replacing the previous NetworkStats Object with the new NetworkStats object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionNetworkStats,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {networkStats: subscriptionData.data.networkStats.node};\n      }\n    });\n  }\n}\n\nexport default BlockTimeCard;\n","/**\n * @file TransactionsCard\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryNetworkStats from '../../graphql/queryNetworkStats';\nimport subscriptionNetworkStats from '../../graphql/subscriptionNetworkStats';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with transactions per second retrieved via GraphQL.\n */\nclass TransactionsCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query query={queryNetworkStats}>\n      {({ loading, error, data, subscribeToMore }) => {\n        const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n        let transactionsPerSecond;\n        if (loading)\n          transactionsPerSecond = 'Loading...';\n        else if (error)\n          transactionsPerSecond = 'Network error';\n        else\n          transactionsPerSecond = data.networkStats.transactionsPerSecond.toFixed(1) + ' tps';\n        return (\n          <DashCard\n            className={className}\n            cardIndex={cardIndex}\n            title='Avg Transactions'\n            value={transactionsPerSecond}\n            svgIconPath={Constants.ICON_SVG_PATH_TPS}\n            subscribeToNewObjects={subscribeToNewObjects}\n          />\n        );\n      }}\n    </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new NetworkStats objects using subscribeToMore, and update the query's\n   * store by replacing the previous NetworkStats Object with the new NetworkStats object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionNetworkStats,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {networkStats: subscriptionData.data.networkStats.node};\n      }\n    });\n  }\n}\n\nexport default TransactionsCard;\n","/**\n * @file queryPrice\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get the the current price.\n * @return {Object} The current Price object.\n */\nconst queryPrice = gql`\n  {\n    price {\n      price\n    }\n  }\n`;\n\nexport default queryPrice;\n","/**\n * @file subscriptionPrice\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL subscription to receive price updates.\n * @return {Object} The updated Price object.\n */\nconst subscriptionPrice = gql`\n  subscription {\n    price {\n      node {\n        price\n      }\n    }\n  }\n`;\n\nexport default subscriptionPrice;\n","/**\n * @file PriceCard\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryPrice from '../../graphql/queryPrice';\nimport subscriptionPrice from '../../graphql/subscriptionPrice';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with price data retrieved via GraphQL.\n */\nclass PriceCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query query={queryPrice}>\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n          let price;\n          if (loading)\n            price = 'Loading...';\n          else if (error)\n            price = 'Network error';\n          else\n            price = '$' + data.price.price.toFixed(2);\n          return (\n            <DashCard\n              className={className}\n              cardIndex={cardIndex}\n              title='Price'\n              value={price}\n              svgIconPath={Constants.ICON_SVG_PATH_PRICE}\n              subscribeToNewObjects={subscribeToNewObjects}\n            />\n          );\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new Price objects using subscribeToMore, and update the query's store by\n   * replacing the previous Price Object with the new Price object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionPrice,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {price: subscriptionData.data.price.node};\n      }\n    });\n  }\n}\n\nexport default PriceCard;\n","/**\n * @file AreaChart\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Paper,\n  Typography\n} from '@material-ui/core';\nimport shadows from '@material-ui/core/styles/shadows';\nimport {\n  Area,\n  AreaChart as RechartsAreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorChartBackground};\n    padding-right: 16px;\n    padding-bottom: 16px;\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 8px;\n    padding-left: 11px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    }\n  }\n`;\n\nconst StyledAreaChart = styled(RechartsAreaChart)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n    font-weight: 400;\n  }\n`;\n\n/**\n * Base class that implements an area chart component.\n */\nclass AreaChart extends Component {\n  static propTypes = {\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { chartHeight, theme } = this.props;\n    const data = this.getData();\n    const tooltipElevation = 2;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle>{this.getTitle()}</TypographyTitle>\n        { data.length > 0 &&\n          <ResponsiveContainer width='100%' height={chartHeight}>\n            <StyledAreaChart\n              data={data}\n              margin={{ top: 0, right: 0, left: 4, bottom: 0 }}\n              // Setting width to 0 here is a workaround for a problem where ResponsiveContainer\n              // does not resize correctly from large to small.\n              // https://github.com/recharts/recharts/issues/172\n              style={{width: 0}}\n            >\n              <defs>\n                <linearGradient id='colorY' x1='0' y1='0' x2='0' y2='1'>\n                  <stop offset='5%' stopColor={theme.colorChartLine} stopOpacity={0.2}/>\n                  <stop offset='95%' stopColor={theme.colorChartLine} stopOpacity={0.1}/>\n                </linearGradient>\n              </defs>\n              <CartesianGrid\n                stroke={theme.colorChartGrid}\n                vertical={false}\n              />\n              <XAxis\n                dataKey={this.getDataKeyX()}\n                stroke={theme.colorChartAxes}\n                tick={{ fill: theme.colorChartText }}\n                tickFormatter={(tick) => this.getGetTickX(tick)}\n                tickMargin={8}\n                tickSize={6}\n              />\n              <YAxis\n                domain={[\n                  dataMin => this.getDomainMinY(dataMin),\n                  dataMax => this.getDomainMaxY(dataMax)\n                ]}\n                stroke={theme.colorChartAxes}\n                tick={{ fill: theme.colorChartText }}\n                tickFormatter={(tick) => this.getGetTickY(tick)}\n                tickLine={false}\n              />\n              <Tooltip\n                labelFormatter={(value) => this.getGetTooltipX(value)}\n                formatter={(value) => [this.getGetTooltipY(value)]}\n                contentStyle={{\n                  background: theme.colorChartTooltipBackground,\n                  border: null,\n                  borderRadius: 4,\n                  fontSize: Constants.MATERIAL_FONT_SIZE_BODY_2,\n                  boxShadow: shadows[tooltipElevation]\n                }}\n                itemStyle={{ color: theme.colorChartLine }}\n                labelStyle={{ color: theme.colorBodyText }}\n                cursor={{ stroke: theme.colorChartGrid }}\n                animationDuration={300}\n              />\n              <Area\n                type='monotone'\n                dataKey={this.getDataKeyY()}\n                stroke={theme.colorChartLine}\n                strokeWidth={2}\n                fillOpacity={1}\n                fill='url(#colorY)'\n                activeDot={{ stroke: theme.colorChartActiveDotStroke, r: 5 }}\n                animationDuration={1000}\n              />\n            </StyledAreaChart>\n          </ResponsiveContainer>\n        }\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    throw new Error('AreaChart.getTitle() not implemented.');\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    throw new Error('AreaChart.getData() not implemented.');\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    throw new Error('AreaChart.getDataKeyX() not implemented.');\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    throw new Error('AreaChart.getDataKeyY() not implemented.');\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    throw new Error('AreaChart.getDomainMinY() not implemented.');\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    throw new Error('AreaChart.getDomainMaxY() not implemented.');\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    throw new Error('AreaChart.getGetTickX() not implemented.');\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    throw new Error('AreaChart.getGetTickY() not implemented.');\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    throw new Error('AreaChart.getGetTooltipX() not implemented.');\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    throw new Error('AreaChart.getGetTooltipY() not implemented.');\n  }\n}\n\nexport default AreaChart;\n","/**\n * @file queryDailyNetworkStatses\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get daily DFINITY network stats for the specified number of days.\n * @return {Array} The array of DailyNetworkStats objects.\n */\nconst queryDailyNetworkStatses = gql`\n  query DailyNetworkStatses($last: Int, $skip: Int) {\n    dailyNetworkStatses(last: $last, skip: $skip, orderBy: date_ASC) {\n      date\n      numBlocks\n      numTransactions\n    }\n  }\n`;\n\nexport default queryDailyNetworkStatses;\n","/**\n * @file TransactionsChart\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { Query } from \"react-apollo\";\nimport AreaChart from '../AreaChart/AreaChart';\nimport queryDailyNetworkStatses from '../../graphql/queryDailyNetworkStatses';\n\n/**\n * This component displays a number of transactions chart with data retrieved via GraphQL.\n */\nclass TransactionsChartWithData extends Component {\n  static propTypes = {\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { chartHeight, theme } = this.props;\n    return (\n      <Query\n        query={queryDailyNetworkStatses}\n        // To get the last 14 days of complete data, we skip the current day.\n        variables={{ last: 14, skip: 1 }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                loading\n              />\n            );\n          }\n          else if (error) {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                error\n              />\n            );\n          }\n          else {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={data.dailyNetworkStatses}\n                chartHeight={chartHeight}\n                theme={theme}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass TransactionsChart extends AreaChart { \n  static propTypes = {\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * Array of DailyNetworkStatses objects.\n     */\n    dailyNetworkStatses: PropTypes.array.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n  \n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    const { error } = this.props;\n    let title = 'Transaction History';\n    if (error)\n      title += ' - Network Error'\n    return title;\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    const { dailyNetworkStatses } = this.props;\n    return dailyNetworkStatses;\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    return 'date';\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    return 'numTransactions';\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    return Math.floor(dataMin / 10000) * 10000;\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    return Math.ceil(dataMax / 10000) * 10000;\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    return new Date(value).toLocaleDateString();\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    if (value >= 1000) {\n      const k = value / 1000;\n      return k.toFixed(Number.isInteger(k) ? 0 : 1) + 'k';\n    }\n    else\n      return value;\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    return new Date(value).toLocaleDateString();\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    return `Transactions: ${value.toLocaleString()}`;\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(TransactionsChartWithData);\n","/**\n * @file queryCandles\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get DFN OHLCV candles for the specified date range.\n * @return {Array} The array of Candle objects.\n */\nconst queryCandles = gql`\n  query Candles($start: DateTime!, $end: DateTime!) {\n    candles(start: $start, end: $end) {\n      timestamp\n      open\n      high\n      low\n      close\n      volume\n    }\n  }\n`;\n\nexport default queryCandles;\n","/**\n * @file PriceChart\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { Query } from \"react-apollo\";\nimport AreaChart from '../AreaChart/AreaChart';\nimport queryCandles from '../../graphql/queryCandles';\n\n/**\n * This component displays a chart of Candle objects with data retrieved via GraphQL.\n */\nclass PriceChartWithData extends Component {\n  static propTypes = {\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Create a PriceChartWithData object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n \n    this.startDate = new Date();\n    this.startDate.setDate(this.startDate.getDate() - 14);\n    this.endDate = new Date();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { chartHeight, theme } = this.props;\n    return (\n      <Query\n        query={queryCandles}\n        variables={{ start: this.startDate.toISOString(), end: this.endDate.toISOString() }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) {\n            return (\n              <PriceChart\n                candles={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                loading\n              />\n            );\n          }\n          else if (error) {\n            return (\n              <PriceChart\n                candles={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                error\n              />\n            );\n          }\n          else {\n            return (\n              <PriceChart\n                candles={data.candles}\n                chartHeight={chartHeight}\n                theme={theme}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass PriceChart extends AreaChart { \n  static propTypes = {\n    /**\n     * Array of Candle objects.\n     */\n    candles: PropTypes.array.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n  \n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    const { error } = this.props;\n    let title = 'Price History';\n    if (error)\n      title += ' - Network Error'\n    return title;\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    const { candles } = this.props;\n    return candles;\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    return 'timestamp';\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    return 'close';\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    return Math.floor(dataMin);\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    return Math.ceil(dataMax);\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    return new Date(value).toLocaleDateString();\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    return `$${value.toFixed(2)}`;\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    return new Date(value).toLocaleDateString();\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    return `DFN Price: $${value.toFixed(2)}`;\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(PriceChartWithData);\n","/**\n * @file breakpoint\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport Constants from '../constants';\n\nexport const Breakpoints = Object.freeze({\n  XS: 0,\n  SM: 1,\n  MD: 2,\n  LG: 3,\n  XL: 4\n});\n\n/**\n * Return the current breakpoint.\n * @param {Boolean} isDesktopDrawerOpen True if the desktop drawer (large screens) is open and\n *  caller wants the breakpoint to be calculated based on the non-drawer width of the window.\n * @return {Number} The current breakpoint.\n * @private\n */\nexport function getBreakpoint(isDesktopDrawerOpen) {\n  // Look at calls to this function and see if passing in isDesktopDrawerOpen is appropriate!!!\n  const drawerWidth =  isDesktopDrawerOpen ? Constants.DRAWER_WIDTH : 0;\n  if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_XS + drawerWidth) + 'px)').matches)\n    return Breakpoints.XS;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_SM + drawerWidth) + 'px)').matches)\n    return Breakpoints.SM;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_MD  + drawerWidth) + 'px)').matches)\n    return Breakpoints.MD;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_LG + drawerWidth) + 'px)').matches)\n    return Breakpoints.LG;\n  else\n    return Breakpoints.XL;\n}\n\n/**\n * Return true if the current breakpoint is greater than or equal to the specified breakpoint.\n * @param {Number} breakpoint The breakpoint to compare to the current breakpoint.\n * @return {Boolean} True if the current breakpoint is greater than or equal to the specified\n *  breakpoint.\n * @private\n */\nexport function isBreakpointGreaterOrEqualTo(breakpoint) {\n  switch (breakpoint) {\n    case Breakpoints.XS:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_XS + 'px)').matches;\n    case Breakpoints.SM:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_SM + 'px)').matches;\n    case Breakpoints.MD:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_MD + 'px)').matches;\n    case Breakpoints.LG:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_LG + 'px)').matches;\n    case Breakpoints.XL:\n    default:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_XL + 'px)').matches;\n  }\n}\n\n/**\n * Return true if the current breakpoint is less than or equal to the specified breakpoint.\n * @param {Number} breakpoint The breakpoint to compare to the current breakpoint.\n * @return {Boolean} True if the current breakpoint is less than or equal to the specified\n *  breakpoint.\n * @private\n */\nexport function isBreakpointLessOrEqualTo(breakpoint) {\n  switch (breakpoint) {\n    case Breakpoints.XS:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_XS + 'px)').matches;\n    case Breakpoints.SM:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_SM + 'px)').matches;\n    case Breakpoints.MD:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_MD + 'px)').matches;\n    case Breakpoints.LG:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_LG + 'px)').matches;\n    case Breakpoints.XL:\n    default:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_XL + 'px)').matches;\n  }\n}\n","/**\n * @file HomePage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport BlocksTable from '../BlocksTable/BlocksTable';\nimport TransactionsTable from '../TransactionsTable/TransactionsTable';\nimport DashCard from '../DashCard/DashCard';\nimport BlockTimeCard from '../BlockTimeCard/BlockTimeCard';\nimport TransactionsCard from '../TransactionsCard/TransactionsCard';\nimport PriceCard from '../PriceCard/PriceCard';\nimport TransactionsChart from '../TransactionsChart/TransactionsChart';\nimport PriceChart from '../PriceChart/PriceChart';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridSectionTables = styled(GridSection)`\n  && {\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n  }\n`;\n\nconst GridCard = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        width: calc(25% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP*3/4 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.MD || breakpoint === Breakpoints.SM) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridChart = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG || breakpoint === Breakpoints.MD) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridTable = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG || breakpoint === Breakpoints.MD) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst DashCardA = styled(DashCard)`\n  && {\n    background: ${props => props.theme.colorDashCardABackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst BlockTimeCardB = styled(BlockTimeCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst TransactionsCardC = styled(TransactionsCard)`\n  && {\n    background: ${props => props.theme.colorDashCardCBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst PriceCardD = styled(PriceCard)`\n  && {\n    background: ${props => props.theme.colorDashCardDBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\n/**\n * Component for the home page.\n */\nclass HomePage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a HomePage object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      blockHeight: 0\n    };\n\n    // Bind to make 'this' work in callbacks.\n    this.handleAddNewBlock = this.handleAddNewBlock.bind(this);\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.getSectionCards()}\n        {this.getSectionCharts()}\n        {this.getSectionTables()}\n      </div>\n    );\n  }\n\n  /**\n   * Return the elements for the Cards section based on the current breakpoint.\n   * @return {Object} The elements for the Cards section based on the current breakpoint.\n   * @private\n   */\n  getSectionCards()\n  {\n    const { breakpoint } = this.props;\n    const { blockHeight } = this.state;\n\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <DashCardA\n              cardIndex={0}\n              title='Blocks'\n              value={blockHeight ? blockHeight.toLocaleString() : 'Loading...'}\n              svgIconPath={Constants.ICON_SVG_PATH_BLOCK}\n            />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <BlockTimeCardB cardIndex={1} />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={100}\n            timeout={500}\n          >\n            <TransactionsCardC cardIndex={2} />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={150}\n            timeout={500}\n          >\n            <PriceCardD cardIndex={3} />\n          </Fade>\n        </GridCard>\n      </GridSection>\n    );\n  }\n\n  /**\n   * Return the elements for the Charts section based on the current breakpoint.\n   * @return {Object} The elements for the Charts section based on the current breakpoint.\n   * @private\n   */\n  getSectionCharts()\n  {\n    const { breakpoint } = this.props;\n\n    const chartHeight = 352;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridChart item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <TransactionsChart chartHeight={chartHeight} />\n          </Fade>\n        </GridChart>\n        <GridChart item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <PriceChart chartHeight={chartHeight} />\n          </Fade>\n        </GridChart>\n      </GridSection>\n    );\n  }\n\n  /**\n   * Return the elements for the Tables section based on the current breakpoint.\n   * @return {Object} The elements for the Tables section based on the current breakpoint.\n   * @private\n   */\n  getSectionTables()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionTables container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridTable item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <BlocksTable\n              maxRows={8}\n              handleAddNewBlock={this.handleAddNewBlock}\n            />\n          </Fade>\n        </GridTable>\n        <GridTable item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <TransactionsTable maxRows={8} />\n          </Fade>\n        </GridTable>\n      </GridSectionTables>\n    );\n  }\n\n  /**\n   * Callback fired when a block is added.\n   * @param {Object} block The block object being added.\n   * @private\n   */\n  handleAddNewBlock(block) {\n    this.setState({\n      blockHeight: block.height\n    });\n  }\n}\n\nexport default HomePage;\n","/**\n * @file AccountsPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport Constants from '../../constants';\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nclass AccountsPage extends TrackablePage {\n  render() {\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading>Accounts</TypographyHeading>\n        <TypographyBody>Accounts page coming soon.</TypographyBody>\n      </div>\n    );\n  }\n}\n\nexport default AccountsPage;\n","/**\n * @file BlocksPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport Constants from '../../constants';\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nclass BlocksPage extends TrackablePage {\n  render() {\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading>Blocks</TypographyHeading>\n        <TypographyBody>Blocks page coming soon.</TypographyBody>\n      </div>\n    );\n  }\n}\n\nexport default BlocksPage;\n","/**\n * @file BlockTransactionsTable\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport PropTypes from 'prop-types';\nimport FadeTable from '../FadeTable/FadeTable';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass BlockTransactionsTable extends FadeTable { \n  static propTypes = {\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Array of transaction objects.\n     */\n    transactions: PropTypes.array.isRequired\n  };\n\n  /**\n   * Return the title of the table.\n   * @return {String} The title of the table.\n   * @protected\n   */\n  getTitle() {\n    return 'Transactions';\n  }\n\n  /**\n   * Return an array that specifies the column widths of the table.\n   * @return {Array} An array that specifies the column widths of the table.\n   * @protected\n   */\n  getColumnWidths() {\n    return ['60%', '40%'];\n  }\n\n  /**\n   * Return an array of objects that describe the cells of the header row.\n   * @return {Array} An array of objects that describe the cells of the header row.\n   * @protected\n   */\n  getHeaderRow() {\n    return [\n      {value: 'Hash', isNumeric: false, link: null},\n      {value: 'Amount', isNumeric: true, link: null}\n    ];\n  }\n\n  /**\n   * Return an array of objects that describe the body rows.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { transactions } = this.props;\n    if (transactions) {\n      let bodyRows = transactions.map((transaction) => {\n        return {\n          mapKey: transaction.hash,\n          cells: [\n            {\n              value: getHashString(transaction.hash),\n              isNumeric: false,\n              link: `/tx/0x${transaction.hash}`\n            },\n            {value: transaction.amount.toFixed(8).toString() + ' DFN', isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n    else\n      return [];\n  }\n\n  /**\n   * Return an array of objects that describe the cells of the footer row.\n   * @return {Array} An array of objects that describe the cells of the footer row.\n   * @protected\n   */\n  getFooterRow() {\n    return [\n      {value: null, isNumeric: false, link: null},\n      {value: '(simulated data)', isNumeric: true, link: null}\n    ];\n  }\n}\n\nexport default BlockTransactionsTable;\n","/**\n * @file queryBlock\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get a block.\n * @param {Number} height The height of the block to fetch.\n * @return {Object} The Block object with the specified height.\n */\nconst queryBlock = gql`\n  query Block($height: Int!) {\n    block(height: $height) {\n      id\n      height\n      timestamp\n      numTransactions\n      transactions {\n        id\n        hash\n        amount\n      }\n    }\n  }\n`;\n\nexport default queryBlock;\n","/**\n * @file BlockDetailsPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport BlockTransactionsTable from '../BlockTransactionsTable/BlockTransactionsTable'\nimport queryBlock from '../../graphql/queryBlock';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\n/**\n * The Block Details Page shows details about a block.\n */\nclass BlockDetailsPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n\n    const height = parseInt(this.props.match.params.height, 10);\n    return (\n      <GridSection container\n        direction='column'\n        justify='flex-start'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <Grid item>\n          <TypographyHeading breakpoint={breakpoint}>Block Details</TypographyHeading>\n        </Grid>\n        <Query query={queryBlock} variables={{ height }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <Grid item>\n                  <TypographyBody>Searching...</TypographyBody>\n                </Grid>\n              );\n            else if (error)\n              return (\n                <Grid item>\n                  <TypographyBody>Network error</TypographyBody>\n                </Grid>\n              );\n            else if (data.block) {\n              const date = new Date(data.block.timestamp);\n              return (\n                <Fragment>\n                  <Grid item>\n                    <TypographyBody>\n                      Height: {data.block.height.toLocaleString()}\n                    </TypographyBody>\n                    <TypographyBody>\n                      Timestamp: {date.toLocaleString()}\n                    </TypographyBody>\n                  </Grid>\n                  <br />\n                  <GridTable item>\n                    <BlockTransactionsTable\n                      maxRows={100}\n                      transactions={data.block.transactions}\n                    />\n                  </GridTable>\n                </Fragment>\n              );\n            }\n            else\n              return (\n                <Grid item>\n                  <TypographyBody>Block not found.</TypographyBody>\n                </Grid>\n              );\n          }}\n        </Query>\n      </GridSection>\n    );\n  }\n}\n\nexport default BlockDetailsPage;\n","/**\n * @file TransactionsPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport Constants from '../../constants';\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nclass TransactionsPage extends TrackablePage {\n render() {\n   return (\n     <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n       <TypographyHeading>Transactions</TypographyHeading>\n       <TypographyBody>Transactions page coming soon.</TypographyBody>\n     </div>\n   );\n }\n}\n\nexport default TransactionsPage;\n","/**\n * @file queryTransaction\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get a transaction.\n * @param {String} id The hash of the transaction to fetch.\n * @return {Object} The Transaction object with the specified hash.\n */\nconst queryTransaction = gql`\n  query Transaction($hash: String!) {\n    transaction(hash: $hash) {\n      id\n      hash\n      amount\n      block {\n        id\n        height\n      }\n    }\n  }\n`;\n\nexport default queryTransaction;\n","/**\n * @file TransactionDetailsPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport queryTransaction from '../../graphql/queryTransaction';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport getHashString from '../../utils/getHashString';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n/**\n * The Transaction Details Page shows details about a transaction.\n */\nclass TransactionDetailsPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    const { hash } = this.props.match.params;\n\n    const hashMaxLength = breakpoint === Breakpoints.XS || breakpoint === Breakpoints.SM ? 24 : 0;\n    return (\n      <GridSection container\n        direction='column'\n        justify='flex-start'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <TypographyHeading breakpoint={breakpoint}>Transaction Details</TypographyHeading>\n        <Query query={queryTransaction} variables={{ hash }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <Grid item>\n                  <TypographyBody>Searching...</TypographyBody>\n                </Grid>\n              );\n            else if (error)\n              return (\n                <Grid item>\n                  <TypographyBody>Network error</TypographyBody>\n                </Grid>\n              );\n            else if (data.transaction)\n              return (\n                <Grid item>\n                  <TypographyBody>\n                    {'Hash: '}\n                    {getHashString(data.transaction.hash, hashMaxLength)}\n                  </TypographyBody>\n                  <TypographyBody>\n                    {'Amount: '}\n                    {data.transaction.amount.toFixed(8).toString()}\n                    {' DFN'}\n                  </TypographyBody>\n                  <TypographyBody>\n                    {'Block Height: '}\n                    <StyledLink to={`/block/${data.transaction.block.height}`}>\n                      {data.transaction.block.height.toLocaleString()}\n                    </StyledLink>\n                  </TypographyBody>\n                </Grid>\n              );\n            else\n              return (\n                <Grid item>\n                  <TypographyBody>Transaction not found.</TypographyBody>\n                </Grid>\n              );\n          }}\n        </Query>\n      </GridSection>\n    );\n  }\n}\n\nexport default TransactionDetailsPage;\n","/**\n * @file CanistersPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport Constants from '../../constants';\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nclass CanistersPage extends TrackablePage {\n  render() {\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading>Canisters</TypographyHeading>\n        <TypographyBody>Canisters page coming soon.</TypographyBody>\n      </div>\n    );\n  }\n}\n\nexport default CanistersPage;\n","/**\n * @file getRandomInt\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\nimport getRandomNumber from './getRandomNumber'\n\n/**\n * Return a random integer between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random integer.\n * @private\n */\nexport default function getRandomInt(start, end) {\n  return Math.floor(getRandomNumber(start, end));\n}\n","/**\n * @file getRandomNumber\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\n /**\n * Return a random number between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random number.\n * @private\n */\nexport default function getRandomNumber(start, end) {\n  return Math.random() * (end - start) + start;\n}\n","/**\n * @file DfinitySymbolD3\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport * as PIXI from 'pixi.js';\nimport * as filters from 'pixi-filters';\nimport getRandomInt from '../../utils/getRandomInt';\n\n/**\n * This class draws the DFINITY logo infinity symbol using a d3 force-directed graph.\n */\nclass DfinitySymbolD3 extends Component  {\n  static propTypes = {\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired,\n    /**\n     * True for logo mode, where the symbol is shaped more like the DFINITY logo, and various\n     * adjustments are made with the intention of rendering at small sizes (e.g., in an app bar).\n     */\n    logoMode: PropTypes.bool,\n    /**\n     * The width of the component, or 0 for use built-in simulationWidth.\n     */\n    width: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a DfinitySymbolD3 object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n\n    // Bind to make 'this' work in callbacks.\n    this.dragStarted = this.dragStarted.bind(this);\n    this.dragged = this.dragged.bind(this);\n    this.dragEnded = this.dragEnded.bind(this);\n    this.tick = this.tick.bind(this);\n    this.rotate = this.rotate.bind(this);\n\n    // A force-directed graph can be a difficult beast to tame. Most changes to settings in this\n    // class will likely change the shape of the graph and require changing other settings through\n    // trial and error in order to get the graph back to the DFINITY logo shape. Any number of the\n    // settings below could be made into constructor parameters. Another idea would be to pre-define\n    // different groups of settings that produce a shape which approximates the DFINITY logo\n    // shape, and then allow the caller to specify which group of settings to use. Since there is\n    // currently only one group of settings defined, settings groups would not currently be useful.\n\n    // PixiJS members.\n    this.stage = null;\n    this.renderer = null;\n    this.linksGraphics = null;\n\n    // Code is customized for this window size. Modifying these values will cause the d3 force-\n    // directed graph to change shape unless scaleToWindow is adjusted to keep the object the same\n    // size.\n    this.simulationWidth = this.props.logoMode ? 780 : 800;\n    this.simulationHeight = 400;\n    this.scaleSimulationToPixi = 1.0;\n\n    this.centerX = this.simulationWidth / 2;\n    this.centerY = this.simulationHeight / 2;\n    this.scaleToWindow = this.simulationWidth / 2 * 0.8;\n\n    // Specify the number of symbol nodes and the number of vertices for each symbol node. The\n    // current values of 36 symbol nodes and 8 vertices (octagon) was arrived at after trial and\n    // error to produce a shape which resembles the DFINITY logo.\n    this.numSymbolNodes = this.props.logoMode ? 41 : 36;\n    this.numVertices = this.props.logoMode ? 10 : 8;\n    this.numNodes = this.numSymbolNodes * this.numVertices;\n\n    // Specify the charge of the symbol nodes and the non-symbol nodes. \"A positive value causes\n    // nodes to attract each other, similar to gravity, while a negative value causes nodes to\n    // repel each other, similar to electrostatic charge.\" The default value is -30, but we specify\n    // much lower in magnitude values because we do not want the nodes to repel very much. For the\n    // fixed nodes which draw the infinity symbol, we do not want any force at all.\n    this.forceManyBodyStrengthSymbolNodes = 0;\n    this.forceManyBodyStrengthNonSymbolNodes = this.props.logoMode ? -3.75 : -9;\n\n    // Specify the link distance. \"The link force pushes linked nodes together or apart according to\n    // the desired link distance.\" The default value is 30.\n    this.linkDistance = this.props.logoMode ? 19 : 14;\n\n    // Specify node and link drawing properties.\n    this.nodeStrokeWidth = 1;\n    this.nodeRadius = 4.5;\n    this.nodeRadiusSelected = this.props.logoMode ? 11 : 5.5;\n    // DCM 01.mar.2019: Always use same node fill color as stroke color.\n    //this.nodeFillColorArray = [127, 127, 127];\n    this.nodeSelectedFillColorArray = [255, 255, 255];\n    this.nodeSelectedStrokeColorArray = [255, 255, 255];\n    this.nodeOpacity = 0.5;\n    this.nodeOpacitySelected = 0.75;\n    this.linkStrokeWidth = this.props.logoMode ? 3 : 2; // why do lines get blurry when this is increased?\n    this.linkStrokeWidthIncreaseAtMagnitude = this.props.logoMode ? 1.5 : 0;\n\n    // Adjust the symbolHeightMultiplier to make the symbol shorter or taller. A value of 1.0\n    // represents normal height.\n    this.symbolHeightMultiplier = this.props.logoMode ? 1.325 : 1.111111;\n\n    // The initial rotateOffset does two things: it determines which part of the symbol goes in\n    // front (blue is on top in the DFINITY logo), and it makes a small adjustment to align the\n    // colors correctly.\n    this.rotateOffset = this.numSymbolNodes / 2 - 1.2;\n\n    // The rotate interval frequency.\n    this.rotateTimeMs = 33.3; // 30 frames/sec max\n\n    // The amount of rotation for every rotate interval.\n    this.rotateAmount = this.props.logoMode ? 0 : 0.000015;\n\n    // The currently selected node index.\n    this.selectedNodeIndex = -1;\n\n    // New block timer members.\n    this.newBlockNodeStartTime = null;\n    this.newBlockLinksStartTime = null;\n    this.newBlockNodeTimerMs = 1000;\n    this.newBlockLinksTimerMs = 1500;\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Set the value of scaleSimulationToPixi based on the width prop. We scale the force-directed\n    // graph by keeping the d3 simulation as is, since it is finely tuned to appear in a certain\n    // way, and instead scaling coordinates from simulation space to PixiJS space when rendering.\n    // In this way, the graph can be scaled to any width by changing the widths prop. A width prop\n    // of 0 indicates no scaling. Note that drag/drop is not currently implemented when scaling.\n    this.scaleSimulationToPixi = this.props.width ? this.props.width / this.simulationWidth : 1.0;\n\n    // Draw the DFINITY logo infinity symbol.\n    this.draw();\n  }\n\n  /**\n   * Invoked by React immediately before a component is unmounted and destroyed.\n   * @public\n   */\n  componentWillUnmount() {\n    // Cleanup PixiJS properties.\n    this.renderer.destroy();\n    this.stage.destroy();\n  }\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @public\n   */\n  componentDidUpdate() {\n    // Make the necessary PixiJS adjustments when the width prop changes.\n    const scaleSimulationToPixi = this.props.width ? this.props.width / this.simulationWidth : 1.0;\n    if (this.scaleSimulationToPixi !== scaleSimulationToPixi) {\n      this.scaleSimulationToPixi = scaleSimulationToPixi;\n\n      // Resize the renderer.\n      this.pixiResizeRenderer();\n\n      // Draw circles for the nodes.\n      if (this.nodesData) {\n        this.nodesData.forEach((node) => { this.pixiDrawNode(node); });\n      }\n    }\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return <div ref={(el) => { this.element = el }}/>;\n  }\n\n  /**\n   * Draw the DFINITY logo infinity symbol.\n   * @public\n   */\n  draw() {\n    // Set up the nodes and links of the graph.\n    this.addNodes();\n    this.addLinks();\n\n    // Create the d3 simulation.\n    this.createSimulation();\n\n    // Set up PixiJS to draw the simulation.\n    this.pixiSetup();\n  }\n\n  /**\n   * Add a new block.\n   * @public\n   */\n  addNewBlock() {\n    // If there is a selected node still animating, stop the animation and return it to normal.\n    if (this.newBlockNodeStartTime) {\n        const node = this.nodesData[this.selectedNodeIndex];\n        this.pixiDrawNode(node);\n    }\n\n    // Select node and enable new block timers.\n    this.selectedNodeIndex = getRandomInt(0, this.numNodes - 1);\n    this.newBlockNodeStartTime = this.newBlockLinksStartTime = new Date();\n  }\n\n  /**\n   * Populate nodesData[] with the nodes of the graph.\n   * @private\n   */\n  addNodes() {\n    // Add the symbol nodes to nodesData[] at fixed positions (fx, fy). _fx and _fy save the fixed\n    // position across drag/drop operations, linkCount is used to calculate the strength of the\n    // force of a link.\n    this.nodesData = [];\n    for (let i = 0; i < this.numSymbolNodes; i++) {\n      const pos = this.getNodePosition(i);\n      this.nodesData.push({\n        'fx' : pos[0],\n        'fy' : pos[1],\n        '_fx' : pos[0],\n        '_fy' : pos[1],\n        'linkCount' : 0});\n    }\n\n    // Add the non-symbol nodes at non-fixed positions.\n    for (let i = this.numSymbolNodes; i < this.numNodes; i++) {\n      this.nodesData.push({'linkCount' : 0});\n    }\n  }\n\n  /**\n   * Get the position of the node with the specified index.\n   * @param {Number} index The node index.\n   * @return {Array} An array containing the [x, y] position of the node.\n   * @private\n   */\n  getNodePosition(index) {\n    const t =\n      2 * Math.PI * ((index + this.rotateOffset) % this.numSymbolNodes) / this.numSymbolNodes;\n    const scale = 2 / (3 - Math.cos(2 * t));\n    const fx = this.centerX + scale * Math.cos(t) * this.scaleToWindow;\n    const fy =\n      this.centerY +\n      scale * Math.sin(2 * t) * this.symbolHeightMultiplier / 2 * this.scaleToWindow;\n    return [fx, fy];\n  }\n\n  /**\n   * Populate linksData[] with the links of the graph.\n   * @private\n   */\n  addLinks() {\n    this.linksData = [];\n    for (let i = 0; i < this.numSymbolNodes; i++) {   \n      // Define the ith link of the symbol.\n      const indexSymbol = i;\n      const indexSymbolNext = (i + 1) % this.numSymbolNodes;\n      this.addLink(indexSymbol, indexSymbolNext, 0, 1);\n           \n      // Link at top of shape, parallel to symbol link, invisible.\n      const vertexShapeTop = this.numVertices / 2;\n      const indexShapeTop = vertexShapeTop * this.numSymbolNodes + i;\n      const indexShapeTopNext =\n        vertexShapeTop * this.numSymbolNodes + (i + 1) % this.numSymbolNodes;\n      this.addLink(indexShapeTop, indexShapeTopNext, 1, 0);\n      \n      // Cross bar, invisible. This pulls the graph in and provides stability. Rather than linking\n      // the cross bar from the link at top of shape to the symbol index, we link it from the shape\n      // node prior. Found that this produces a more interesting graph. Note that previously this\n      // code was in the for loop below and executed when j === 3, but with the same parameters to\n      // addLink(). This produced a slightly different/thicker graph.\n      const vertexShapeAlmostTop = vertexShapeTop - 1;\n      const indexShapeAlmostTop = vertexShapeAlmostTop * this.numSymbolNodes + i;\n      this.addLink(indexShapeAlmostTop, indexSymbol, 1, 0);\n      \n      for (let j = 0; j < this.numVertices; j++) {     \n        // Define the jth link of the shape (e.g., if numVertices is 6, shape is 6-sided polygon).\n        const index = j * this.numSymbolNodes + i;\n        const indexShapeNext = (index + this.numSymbolNodes) % this.numNodes;\n        this.addLink(index, indexShapeNext, 0, 0.7);\n      \n        // Define the jth link of the spiral which spirals around the shapes. Two spirals are used\n        // for better stability.\n        const indexSpiralNext =\n          (j + 1) % this.numVertices * this.numSymbolNodes + (i + 1) % this.numSymbolNodes;            \n        this.addLink(index, indexSpiralNext, 0.65, 0.5);\n        this.addLink(index, indexSpiralNext, 0.65, 0.5);\n      }\n    }\n  }\n\n  /**\n   * Add a link of the graph to linksData[].\n   * @param {Number} indexSource The index of the source node of the link.\n   * @param {Number} indexTarget The index of the target node of the link.\n   * @param {Number} The strength of the link, or 0 for use default strength.\n   * @param {Number} opacity The opacity of the link.\n   * @private\n   */\n  addLink(indexSource, indexTarget, strength, opacity) {\n    this.linksData.push({\n      'source': indexSource.toString(),\n      'target': indexTarget.toString(),\n      '_strength' : strength,\n      'opacity' : opacity,\n      '_opacity' : opacity});\n    this.nodesData[indexSource].linkCount++;\n    this.nodesData[indexTarget].linkCount++;\n  }\n\n  /**\n   * Create the d3 simulation of the force-directed graph. Nodes and links must be added before\n   * calling this function.\n   * @private\n   */\n  createSimulation() {\n    // Create a new simulation containing the nodes.\n    this.simulation = d3.forceSimulation(this.nodesData);\n\n    // Add a charge to each node and a centering force.\n    this.simulation\n      .force('charge', d3.forceManyBody()\n        .strength((d) => {\n          return d.index < this.numSymbolNodes ?\n            this.forceManyBodyStrengthSymbolNodes : this.forceManyBodyStrengthNonSymbolNodes;\n        }))\n      .force('center', d3.forceCenter(this.simulationWidth / 2, this.simulationHeight / 2));\n\n    // Add the links, with the strength of the force of a link optionally specified by the link's\n    // _strength.\n    const link_force =  d3.forceLink(this.linksData)\n      .strength((d) => {\n        return d._strength > 0 ?\n          d._strength :\n          1 / Math.min(d.source.linkCount, d.target.linkCount); // default\n      })\n      .distance(this.linkDistance);        \n      this.simulation.force('links', link_force);\n\n    // Call tick() for every tick.\n    this.simulation.on('tick', this.tick);\n\n    // Set the decay rate to zero to have the simulation run forever at the current alpha.\n    this.simulation.alphaDecay(0);\n\n    // Rotate the symbol using a d3 interval.\n    if (this.rotateAmount)\n      d3.interval(this.rotate, this.rotateTimeMs);\n  }\n\n  /**\n   * Set up PixiJS to draw the simulation using WebGL (with Canvas fallback for older platforms).\n   * @private\n   */\n  pixiSetup() {\n    // Disable PIXI console log message.\n    PIXI.utils.skipHello();\n    \n    // Create PixiJS WebGL renderer element to hold the force-directed graph. We set the resolution\n    // to 3, then auto-resize the window back down to the correct size in order to increase the\n    // resolution. With resolution set to 1, it looks low resolution and pixelated.\n    this.stage = new PIXI.Container();\n    this.renderer = PIXI.autoDetectRenderer(\n      this.simulationWidth * this.scaleSimulationToPixi,\n      this.simulationHeight * this.scaleSimulationToPixi,\n      {antialias: true, transparent: true, resolution: 3}\n    );\n    this.renderer.autoResize = true;\n    this.pixiResizeRenderer();\n    this.element.appendChild(this.renderer.view);\n\n    // Draw circles for the nodes.\n    this.nodesData.forEach((node) => {\n      node.graphics = new PIXI.Graphics();\n      this.pixiDrawNode(node);\n      this.stage.addChild(node.graphics);\n    });\n\n    // Set up drag/drop.\n    d3.select(this.renderer.view)\n      .call(d3.drag()\n        .container(this.renderer.view)\n        .subject(() => this.simulation.find(d3.event.x, d3.event.y))\n        .on('start', this.dragStarted)\n        .on('drag', this.dragged)\n        .on('end', this.dragEnded));\n\n    // Set up graphics for the links.\n    this.linksGraphics = new PIXI.Graphics();\n    this.stage.addChild(this.linksGraphics);\n  }\n\n  /**\n   * Resize the PixiJS renderer based on the width and height.\n   * @private\n   */\n   pixiResizeRenderer() {\n    this.renderer.resize(\n      this.simulationWidth * this.scaleSimulationToPixi,\n      this.simulationHeight * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Move the PixiJS position of the specified node.\n   * @param {Object} node The node to move the position of.\n   * @private\n   */\n  pixiMoveNode(node) {\n    let { x, y, graphics } = node;\n    graphics.position =\n      new PIXI.Point(x * this.scaleSimulationToPixi, y * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Use PixiJS to draw the circle for a node.\n   * @param {Object} node The node to draw the circle for.\n   * @param {Number} selectedNodeMagnitude If this is the currently selected node, indicates the\n   * magnitude percentage (0 - 1.0) of the selection. A value of 0 indicates that this is not the\n   * currently selected node.\n   * @private\n   */\n  pixiDrawNode(node, selectedNodeMagnitude = 0) {\n    let nodeStrokeColor;\n    let nodeFillColor;\n    let nodeOpacity;\n    let nodeRadius;\n    if (selectedNodeMagnitude) {\n      // Scale the node properties based on the magnitude.\n      nodeStrokeColor = this.rgbNumberFromArray(\n        this.gradientColor(\n          this.nodeSelectedStrokeColorArray,\n          this.getNodeStrokeColorArray(node),\n          selectedNodeMagnitude));\n      nodeFillColor = this.rgbNumberFromArray(\n        this.gradientColor(\n          this.nodeSelectedFillColorArray,\n          // DCM 01.mar.2019: Always use same node fill color as stroke color.\n          this.getNodeStrokeColorArray(node),\n          //this.props.logoMode ? this.getNodeStrokeColorArray(node) : this.nodeFillColorArray,\n          selectedNodeMagnitude));\n      nodeOpacity =\n        this.nodeOpacity + (this.nodeOpacitySelected - this.nodeOpacity) * selectedNodeMagnitude;\n      nodeRadius =\n        this.nodeRadius + (this.nodeRadiusSelected - this.nodeRadius) * selectedNodeMagnitude;\n    }\n    else {\n      nodeStrokeColor = this.rgbNumberFromArray(this.getNodeStrokeColorArray(node));\n      // DCM 01.mar.2019: Always use same node fill color as stroke color.\n      nodeFillColor = nodeStrokeColor;\n      //nodeFillColor = this.rgbNumberFromArray(\n      //  this.props.logoMode ?\n      //    this.getNodeStrokeColorArray(node) : this.nodeFillColorArray);\n\n      nodeOpacity = this.nodeOpacity;\n      nodeRadius = this.nodeRadius;\n    }\n\n    node.graphics.clear();\n    node.graphics.lineStyle(\n      this.nodeStrokeWidth * this.scaleSimulationToPixi,\n      nodeStrokeColor,\n      nodeOpacity);\n    node.graphics.beginFill(nodeFillColor, nodeOpacity);\n    if (selectedNodeMagnitude) {\n      node.graphics.filters = [\n        new filters.GlowFilter(\n          5,                          // distance\n          4 * selectedNodeMagnitude,  // outerStrength\n          0,                          // innerStrength\n          nodeStrokeColor,            // color\n          0.5)                        // quality\n      ]\n    }\n    else\n      node.graphics.filters = null;\n    node.graphics.drawCircle(0, 0, nodeRadius * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Use PixiJS to draw the line for a link between nodes.\n   * @param {Object} link The link to draw the line for.\n   * @param {Number} linkMagnitude Indicates the magnitude percentage (0 - 1.0) of the link opacity\n   * boost.\n   * @private\n   */\n  pixiDrawLink(link, linkMagnitude) {\n    let { source, target, opacity } = link;\n    const linkOpacity = opacity + 0.25 * (this.props.logoMode ? 1 : linkMagnitude);\n    this.linksGraphics.alpha = linkOpacity;\n    this.linksGraphics.lineStyle(\n      (this.linkStrokeWidth + this.linkStrokeWidthIncreaseAtMagnitude * linkMagnitude) *\n        this.scaleSimulationToPixi,\n      this.rgbNumberFromArray(this.getColorArray(link.index, this.linksData.length)));\n      this.linksGraphics.moveTo(\n        source.x * this.scaleSimulationToPixi, source.y * this.scaleSimulationToPixi);\n      this.linksGraphics.lineTo(\n        target.x * this.scaleSimulationToPixi, target.y * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Return the color based on the specified index and number of indices.\n   * @param {Number} index The index to return the color of.\n   * @param {Number} numIndices The total number of indices used to determine the color.\n   * @return {Array} The color arrayof the specified index.\n   * @private\n   */\n  getColorArray(index, numIndices) {\n    // These colors come from the DFINITY logo.\n    const purple = [99,38,132];\n    const pink = [237,30,121];\n    const darkOrange = [241,90,36];\n    const lightOrange = [251,176,59];\n    const blue = [41,171,226];\n\n    // Certain color transitions in the DFINITY logo are small, others are gradual.\n    const transitionPercentSmall = 0.02;\n    const transitionPercentGradual = 0.1;\n    const transitionIndicesSmall = numIndices * transitionPercentSmall;\n    const transitionIndicesGradual = numIndices * transitionPercentGradual;\n\n    // The number of indices of each color was determined by analyzing the DFINITY logo.\n    const lastPurpleIndex = numIndices * 0.15 - transitionIndicesGradual;\n    const lastPinkIndex =\n      lastPurpleIndex + transitionIndicesGradual + numIndices * 0.15 - transitionIndicesSmall;\n    const lastDarkOrangeIndex =\n      lastPinkIndex + transitionIndicesSmall + numIndices * 0.15 - transitionIndicesGradual;\n    const lastLightOrangeIndex =\n      lastDarkOrangeIndex + transitionIndicesGradual + numIndices * 0.15 - transitionIndicesSmall;\n    const lastBlueIndex =\n      lastLightOrangeIndex + transitionIndicesSmall + numIndices * 0.4 - transitionIndicesSmall;\n\n    // Determine the color based on the color zone the index is in.\n    if (index <= lastPurpleIndex)\n      return purple;\n    else if (index <= lastPurpleIndex + transitionIndicesGradual)\n    {\n      const percentage = (index - lastPurpleIndex) / transitionIndicesGradual;\n      return this.gradientColor(pink, purple, percentage);\n    }\n    else if (index <= lastPinkIndex)\n      return pink;\n    else if (index <= lastPinkIndex + transitionIndicesSmall)\n    {\n      const percentage = (index - lastPinkIndex) / transitionIndicesSmall;\n      return this.gradientColor(darkOrange, pink, percentage);\n    }\n    else if (index <= lastDarkOrangeIndex)\n      return darkOrange;\n    else if (index <= lastDarkOrangeIndex + transitionIndicesGradual)\n    {\n      const percentage = (index - lastDarkOrangeIndex) / transitionIndicesGradual;\n      return this.gradientColor(lightOrange, darkOrange, percentage);\n    }\n    else if (index <= lastLightOrangeIndex)\n      return lightOrange;\n    else if (index <= lastLightOrangeIndex + transitionIndicesSmall)\n    {\n      const percentage = (index - lastLightOrangeIndex) / transitionIndicesSmall;\n      return this.gradientColor(blue, lightOrange, percentage);\n    }     \n    else if (index <= lastBlueIndex)\n      return blue;\n    else\n    {\n      const percentage = (index - lastBlueIndex) / transitionIndicesSmall;\n      return this.gradientColor(purple, blue, percentage);\n    }\n  }\n\n  /**\n   * Return the gradient color based on the specified parameters.\n   * @param {Array} color1 The RGB array of color 1.\n   * @param {Array} color2 The RGB array of color 2.\n   * @param {Number} percent The percentage of the gradient.\n   * @return {Array} The RGB array of the gradient color.\n   * @private\n   */\n  gradientColor(color1, color2, percent) {\n    const p1 = percent;\n    const p2 = 1 - p1;\n    const rgb = [\n      Math.round(color1[0] * p1 + color2[0] * p2),\n      Math.round(color1[1] * p1 + color2[1] * p2),\n      Math.round(color1[2] * p1 + color2[2] * p2)];\n    return rgb;\n  }\n\n  /**\n   * Return the RGB color number corresponding to the specified RGB color array.\n   * @param {Array} array The RGB array.\n   * @return {Number} The RGB color number.\n   * @private\n   */\n  rgbNumberFromArray(array) {\n    let color = 0;\n    array.forEach(element => {\n      color = (color << 8) + element;\n    });\n    return Number(color);\n  }\n\n/**\n   * Return the stroke color of the specified node.\n   * @param {Object} node The node to return the stroke color of.\n   * @return {Array} The stroke color array of the specified node.\n   * @private\n   */\n  getNodeStrokeColorArray(node) {\n    return this.getColorArray(node.index % this.numSymbolNodes, this.numSymbolNodes)\n  }\n\n/**\n   * Start dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragStarted(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    const isSimulationRunning = this.simulation.alphaDecay() === 0;\n    if (!isSimulationRunning) {\n      if (!d3.event.active)\n        this.simulation.alphaTarget(0.3).restart();\n    }\n    d3.event.subject.fx = d3.event.subject.x;\n    d3.event.subject.fy = d3.event.subject.y;\n  }\n\n  /**\n   * Continue dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragged(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    d3.event.subject.fx = d3.event.x;\n    d3.event.subject.fy = d3.event.y;\n  }\n\n  /**\n   * Stop dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragEnded(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    const isSimulationRunning = this.simulation.alphaDecay() === 0;\n    if (!isSimulationRunning) {\n      if (!d3.event.active)\n        this.simulation.alphaTarget(0);\n    }\n    d3.event.subject.fx = d3.event.subject._fx;\n    d3.event.subject.fy = d3.event.subject._fy;\n  }\n\n  /**\n   * Update the node and link positions on each tick of the simulation.\n   * @private\n   */\n  tick() {\n    // Move the node positions.\n    this.nodesData.forEach((node) => { this.pixiMoveNode(node); });\n\n    // Animate the selected node to grow larger and change to white, then shrink smaller and change\n    // back to original colors.\n    if (this.newBlockNodeStartTime != null) {\n      const node = this.nodesData[this.selectedNodeIndex];\n      const elapsedMs = new Date() - this.newBlockNodeStartTime;\n      if (elapsedMs > this.newBlockNodeTimerMs) {\n        // Draw a normal node circle.\n        this.pixiDrawNode(node);\n\n        // Disable new block node timer.\n        this.newBlockNodeStartTime = null;\n      }\n      else {\n        // Calculate the magnitude based on the timer.\n        const selectedNodeMagnitude =\n          (elapsedMs <= this.newBlockNodeTimerMs / 2 ?\n            elapsedMs :\n            this.newBlockNodeTimerMs - elapsedMs) /\n          (this.newBlockNodeTimerMs / 2);\n\n        // Draw a modifified node circle based on the magnitude.\n        this.pixiDrawNode(node, selectedNodeMagnitude);\n      }\n    }\n\n    // Calculate link magnitude.\n    let linkMagnitude = 0;\n    if (this.newBlockLinksStartTime != null) {\n      const elapsedMs = new Date() - this.newBlockLinksStartTime;\n      if (elapsedMs > this.newBlockLinksTimerMs) {\n        // Disable new block links timer.\n        this.newBlockLinksStartTime = null;\n      }\n      else {\n        // Calculate the magnitude based on the timer.\n        linkMagnitude =\n          elapsedMs <= this.newBlockLinksTimerMs / 3 ?\n            elapsedMs / (this.newBlockLinksTimerMs / 3) :\n            (this.newBlockLinksTimerMs - elapsedMs) /\n              (this.newBlockLinksTimerMs * 2 / 3);\n      }\n    }\n\n    // Draw lines for the links.\n    this.linksGraphics.clear();\n    this.linksData.forEach((link) => {\n      this.pixiDrawLink(link, linkMagnitude);\n    });\n    this.linksGraphics.endFill();\n\n    this.renderer.render(this.stage);\n  }\n\n  /**\n   * Rotate the symbol.\n   * @param {Number} elapsed Elapsed time since the timer became active.\n   * @private\n   */\n  rotate(elapsed) {\n    // In order to increase efficiency, it might be possible to decrease the frequency at which we\n    // rotate, then use d3 transition so that the movement is smooth. The problem is, non-symbol\n    // nodes will still be moving based on the simulation, so it's unknown whether this will\n    // actually improve performance. Since it does not seem like d3.interval() can be counted on to\n    // call this function with precision, this may not be a feasible approach, since if you do not\n    // know when the next call will be, you cannot know how long to make the transition.\n    // See webpage \"D3.selectAll(...).transition() Explained\"\n    // (http://bl.ocks.org/Kcnarf/9e4813ba03ef34beac6e)\n\n    for (let i = 0; i < this.numSymbolNodes; i++) {\n      this.rotateOffset += this.rotateAmount;\n      const pos = this.getNodePosition(i);\n      this.nodesData[i].fx = this.nodesData[i]._fx = pos[0];\n      this.nodesData[i].fy = this.nodesData[i]._fy = pos[1];\n    }\n  }\n}\n\nexport default DfinitySymbolD3;\n","/**\n * @file ImageLinkGrid\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid\n} from '@material-ui/core';\nimport Fade from 'react-reveal/Fade';\n\n/**\n * This component displays a grid of images that link to other pages.\n */\nclass ImageLinkGrid extends Component {\n  static propTypes = {\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string,\n    /**\n     * An array of objects describing the image links, where each object contains:\n     *  src: The <img> src attribute.\n     *  height: The <img> height attribute.\n     *  alt: The <img> alt attribute.\n     *  href: The <a> href attribute.\n     */    \n    imageLinks: PropTypes.array.isRequired,\n    /**\n     * The Material-UI justify prop to apply to each row.\n     * @see See [Material-UI Grid documentation](https://material-ui.com/api/grid/).\n     */\n    justifyRow: PropTypes.string,\n    /**\n     * The amount of space between rows.\n     */\n    marginBetweenRows: PropTypes.number,\n    /**\n     * The number of images per row.\n     */\n    perRow: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a ImageLinkGrid object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {widths: [], maxHeight: 0};\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    this.calculateMaxImageDimensions();\n  }\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @param {Object} prevProps The previous props.\n   * @public\n   */\n  componentDidUpdate(prevProps) {\n    // Determine whether the props have changed.\n    let arePropsChanged = false;\n    const { imageLinks } = this.props;\n    if (imageLinks.length === prevProps.imageLinks.length) {\n      imageLinks.forEach((imageLink, index) => {\n        if (imageLink.src !== prevProps.imageLinks[index].src ||\n            imageLink.height !== prevProps.imageLinks[index].height)\n          arePropsChanged = true;\n      });\n    }\n    else\n      arePropsChanged = true;\n\n    // Only calculate max image dimensions if props have changed, otherwise we would cause an\n    // infinite loop of updating the state.\n    if (arePropsChanged)\n      this.calculateMaxImageDimensions();\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      className,\n      imageLinks,\n      justifyRow,\n      marginBetweenRows,\n      perRow\n    } = this.props;\n    const { widths } = this.state;\n\n    // Make the container slightly taller than the max image height to account for Grid bug where\n    // there are a few pixels of whitespace added under the image. This '+ 4' can be removed once\n    // the Grid bug is fixed.\n    const containerHeight = this.state.maxHeight + 4;\n\n    // The image grid is an array of rows, where each row is an array of image objects. Creating\n    // a two-dimensional array like this is an extra step, but makes the code below more readable.\n    // TODO: Consider an alternate approach to solve the problem of the center column of 3-item rows\n    // not being centered. Use the same maxWidth for all cells. For cells on left, left align. For\n    // cells on right, right align. For all other cells, center. To do this, we'd likely need a cell\n    // within a cell, so that columns could first be centered relative to the column, then placed\n    // in a second wrapper cell (Grid) aligned either left, right, or center. Would need to test\n    // with different row lengths and numbers of images to see what effect it has on spacing for all\n    // conditions. It seems possible this would look wrong for rows longer than 3, since the spacing\n    // at the edges could be greater because the cell within the cell at the edges is not centered.!!!\n    let imageLinkGrid = [];\n    let maxWidthColumn = Array(perRow).fill(0);\n    for (let i = 0; i < imageLinks.length;) {\n      let row = [];\n      const isShortRow = imageLinks.length - i < perRow;\n      for (var j = 0; j < perRow && i < imageLinks.length; j++) {\n        // Do not update maxWidthColumn[j] if this is a short row (last row with fewer columns).\n        if (!isShortRow && widths[i])\n          maxWidthColumn[j] = Math.max(widths[i], maxWidthColumn[j]);\n        row.push(imageLinks[i++]);\n      }\n      imageLinkGrid.push(row);\n    }\n    \n    return (\n      <div className={className}>\n        {imageLinkGrid.map((row, rowIndex) => {\n          const isShortRow = row.length < perRow;\n          return (\n            <Grid container\n              direction='row'\n              // Always set justify='space-around' for a short row (last row with fewer columns).\n              justify={isShortRow ? 'space-around' : (justifyRow || 'space-between')}\n              alignItems='center'\n              key={rowIndex}\n              style={{ marginTop: (rowIndex && marginBetweenRows) ? marginBetweenRows : 0 }}\n            >\n              {row.map((imageLink, columnIndex) => {\n                const index = rowIndex * perRow + columnIndex;\n                return (\n                  <Grid container\n                    direction='column'\n                    justify='center'\n                    alignItems='center'\n                    key={columnIndex}\n                    // Do not use maxWidthColumn[j] if this is a short row (last row with fewer\n                    // columns).\n                    style={{\n                      width: isShortRow ? widths[index] : maxWidthColumn[columnIndex],\n                      height: containerHeight\n                    }}\n                  >\n                    <Grid item>\n                      <a href={imageLink.href} target='_blank' rel='noopener noreferrer'>\n                        <Fade\n                          bottom\n                          delay={index * 50}\n                          timeout={500}\n                        >\n                          <img\n                            src={imageLink.src}\n                            height={imageLink.height}\n                            alt={imageLink.alt}>\n                          </img>\n                        </Fade>\n                      </a>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          );\n        })}\n      </div>\n    );\n  }\n\n  /**\n   * Calculate the maximum width and height of all images by loading the images. This allows us to\n   * create Grid containers for the images which are all the same size. An image will be\n   * horizontally and vertically centered in its container.\n   * @private\n   */\n  calculateMaxImageDimensions() {\n    const { imageLinks } = this.props;\n    this.setState({\n      widths: Array(imageLinks.length).fill(0),\n      maxHeight: 0\n    });\n\n    // Calculate the widths[] and maxHeight of the images by loading them.\n    imageLinks.forEach((imageLink, index) => {\n      const img = new Image();\n      img.onload = event => {\n        const { naturalWidth, naturalHeight } = event.currentTarget;\n        if (naturalHeight) {\n          // Scale width from natural width to image link width.\n          const width = imageLink.height / naturalHeight * naturalWidth;\n          this.setState(prevState => ({\n            widths: [\n              ...prevState.widths.slice(0, index),\n              width,\n              ...prevState.widths.slice(index + 1)\n            ],\n            maxHeight: Math.max(imageLink.height, prevState.maxHeight)\n          }));\n        }\n      }\n      // Setting src after we have set the onload event will cause the event to be triggered after\n      // the image has loaded.\n      img.src = imageLink.src;\n    });\n  }\n}\n\nexport default ImageLinkGrid;\n","/**\n * @file AboutPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Button,\n  Grid,\n  Paper,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport MailIcon from '@material-ui/icons/MailOutline';\nimport { Parallax } from 'react-parallax';\nimport Fade from 'react-reveal/Fade';\nimport Flip from 'react-reveal/Flip';\nimport LightSpeed from 'react-reveal/LightSpeed';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport CoinbaseCommerceButton from 'react-coinbase-commerce';\nimport 'react-coinbase-commerce/dist/coinbase-commerce-button.css';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport DfinitySymbolD3 from '../DfinitySymbolD3/DfinitySymbolD3';\nimport ImageLinkGrid from '../ImageLinkGrid/ImageLinkGrid';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\nimport bannerXHorizon from './banner-x-horizon.png';\nimport dfinityExplorerLogo from './dfinity-explorer-logo-large.png';\nimport apolloLogoDark from './apollo-logo-dark-mode.png';\nimport apolloLogoLight from './apollo-logo-light-mode.png';\nimport dfinityLogoDark from './dfinity-logo-dark-mode.png';\nimport dfinityLogoLight from './dfinity-logo-light-mode.png';\nimport githubOctocat from './github-octocat.png';\nimport graphqlLogo from './graphql-logo.png';\nimport materialUiLogo from './material-ui-logo.png';\nimport nomicsLogoDark from './nomics-logo-dark-mode.png';\nimport nomicsLogoLight from './nomics-logo-light-mode.png';\nimport postgresLogoDark from './postgresql-logo.png';\nimport postgresLogoLight from './postgresql-logo-text.png';\nimport prismaLogoDark from './prisma-logo-dark-mode.png';\nimport prismaLogoLight from './prisma-logo-light-mode.png';\nimport reactLogo from './react-logo-text.png';\nimport styledComponentsLogoDark from './styled-components-logo-dark-mode.png';\nimport styledComponentsLogoLight from './styled-components-logo-light-mode.png';\n\nconst PaperParallax = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorBodyBackground};\n    /* Allows shadow to overlap the element below it. */\n    position: relative;\n  }\n`;\n\nconst GridParallax = styled(Grid)`\n  && {\n    height: 280px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: 200px;       \n      `\n    }\n  }\n`;\n\nconst TypographyParallax = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 200;\n    color: ${props => props.theme.colorAboutHeaderText};  \n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.SM && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};\n      `)\n    }\n  }\n`;\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: 96px;\n    padding-bottom: 96px;\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.SM && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-top: 64px;\n        padding-bottom: 64px;\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n      `)\n    }\n  }\n`;\n\nconst GridSectionPrimary = styled(GridSection)`\n  && {\n    background: ${props => props.theme.colorAboutBackgroundPrimary};\n  }\n`;\n\nconst GridSectionSecondary = styled(GridSection)`\n  && {\n    background: ${props => props.theme.colorAboutBackgroundSecondary};\n  }\n`;\n\nconst GridItem = styled(Grid)`\n  && {\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        width: calc(50% - ${Constants.ABOUT_PAGE_MARGIN_LG/2 + 'px'});\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        width: calc(50% - ${Constants.ABOUT_PAGE_MARGIN_MD/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridImageLeft = styled(GridItem)`\n  && {\n    order: 1;\n  }\n`;\n\nconst GridImageRight = styled(GridItem)`\n  && {\n    order: 2;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 1;\n      `\n    }\n  }\n`;\n\nconst GridSymbolLeft = styled(GridImageLeft)`\n  && {\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-top: -32px;\n        margin-bottom: -32px;     \n      `\n    }\n  }\n`;\n\nconst GridText = styled(GridItem)`\n  && {\n    ${({ breakpoint }) =>\n    (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        margin-top: 48px;\n      `\n    }\n  }\n`;\n\nconst GridTextLeft = styled(GridText)`\n  && {\n    order: 1;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 2;\n      `\n    }\n  }\n`;\n\nconst GridTextRight = styled(GridText)`\n  && {\n    order: 2;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 2;\n      `\n    }\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 300;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\n// From the Material Design documentation: \"The ideal length for legibility of body copy is 40-60\n// characters per line.\"\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nconst StyledA = styled.a`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst ImgSection = styled.img`\n  && {\n    max-width: 100%;\n    max-height: 300px;\n  }\n`;\n\nconst ButtonSubscribe = styled(Button)`\n  && {\n    height: 48px;\n    border-radius: 24px;\n    margin-top: 24px;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n    font-weight: 400;\n    text-transform: capitalize;\n    background: ${props => props.theme.colorAboutButtonBackground};\n    color: ${props => props.theme.colorAboutButtonText};\n    &:hover {\n      background: ${props => props.theme.colorAboutButtonHoverBackground};\n      color: ${props => props.theme.colorAboutButtonHoverText};\n    }    \n  }\n`;\n\nconst MailIconButton = styled(MailIcon)`\n  && {\n    margin-right: 14px;\n  }\n`;\n\nconst SpanHeart = styled.span`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n  }\n`;\n\nconst ButtonDonate = styled(CoinbaseCommerceButton)`\n  && {\n    height: 48px;\n    border: none;\n    border-radius: 24px;\n    margin-top: 24px;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n    font-weight: 400;\n    background: ${props => props.theme.colorAboutButtonBackground};\n    color: ${props => props.theme.colorAboutButtonText};\n    &:hover {\n      cursor: pointer;\n      background: ${props => props.theme.colorAboutButtonHoverBackground};\n      color: ${props => props.theme.colorAboutButtonHoverText};\n    }    \n  }\n`;\n\nconst SvgIconButton = styled(SvgIcon)`\n  && {\n    margin-right: 14px;\n  }\n`;\n\nconst PaperTwitter = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorAboutTwitterBackground};\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        max-width: 640px;\n        margin: auto;\n      `\n    }\n  }\n`;\n\nconst ImageLinkGridThanks = styled(ImageLinkGrid)`\n  && {\n    margin-top: ${Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT/2 + 'px'};\n  }\n`;\n\n// Mailing list signup page needs DE logo rather than the DFINITY one.!!!\n/**\n * Component for the about page.\n */\nclass AboutPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * True if the desktop drawer (large screens) is open.\n     */    \n    isDesktopDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.getHeader()}\n        {this.getSectionMission()}\n        {this.getSectionOpenSource()}\n        {this.getSectionCommunity()}\n        {this.getSectionContributors()}\n        {this.getSectionThanks()}\n      </div>\n    );\n  }\n\n  /**\n   * Return the elements for the header based on the current breakpoint.\n   * @return {Object} The elements for the header based on the current breakpoint.\n   * @private\n   */\n  getHeader()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <PaperParallax elevation={2}>\n        <Fade timeout={1200}>\n          <Parallax bgImage={bannerXHorizon} bgImageAlt='banner' bgImageStyle={{marginTop: '-100px'}} strength={500}>\n            <GridParallax container direction='column' justify='center' alignItems='flex-start' breakpoint={breakpoint}>\n              <Grid item>\n                <TypographyParallax breakpoint={breakpoint}>\n                  An open-source block explorer\n                  <br />\n                  built by the DFINITY community\n                </TypographyParallax>\n              </Grid>\n            </GridParallax>\n          </Parallax>\n        </Fade>\n      </PaperParallax>\n    );\n  }\n\n  /**\n   * Return the elements for the Mission section based on the current breakpoint.\n   * @return {Object} The elements for the Mission section based on the current breakpoint.\n   * @private\n   */\n  getSectionMission()\n  {\n    const { breakpoint, isThemeDark } = this.props;\n\n    return (\n      <GridSectionPrimary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridSymbolLeft item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <DfinitySymbolD3\n              width={this.getDfinitySymbolD3Width()}\n              isThemeDark={isThemeDark}\n            />\n          </Grid>\n        </GridSymbolLeft>\n        <GridTextRight item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Mission\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Our mission is to provide a bridge between you and the '}\n              <StyledA href={Constants.URI_ABOUT_DFINITY} target='_blank' rel='noopener noreferrer'>DFINITY</StyledA>\n              {' Internet Computer, allowing you to easily search for and retrieve information '}\n              {'which is useful in a format that is understandable, with everything you want to '}\n              {'know right at your fingertips.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'DFINITY aims to build their organization into a “NASA for decentralization”. '}\n              {'There have in fact been '}\n              <StyledA href={Constants.URI_NASA_EXPLORER} target='_blank' rel='noopener noreferrer'>89 NASA “Explorer” missions</StyledA>\n              {' since 1958, carrying a wide variety of scientific investigations. We want DFINITY '}\n              {'Explorer to be the perfect vehicle to explore the DFINITY universe.'}\n              &nbsp;&nbsp;🚀\n            </TypographyBody>\n          </Fade>\n        </GridTextRight>\n      </GridSectionPrimary>\n    );\n  }\n\n  /**\n   * Return the elements for the Open Source section based on the current breakpoint.\n   * @return {Object} The elements for the Open Source section based on the current breakpoint.\n   * @private\n   */\n  getSectionOpenSource()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionSecondary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridTextLeft item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Open, Transparent, Trusted\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'DFINITY Explorer is an open-source project under the '}\n              <StyledA href={Constants.URI_GITHUB_MIT_LICENSE} target='_blank' rel='noopener noreferrer'>MIT license</StyledA>\n              {', providing transparency, reliability, and security.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'We believe that all block explorers of public blockchains should be open source. '}\n              {'If you’re going to trust a block explorer to provide timely, accurate, and '}\n              {'uncensored information, the code should be open for all to see.'}\n            </TypographyBody>\n          </Fade>\n        </GridTextLeft>\n        <GridImageRight item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <Flip right timeout={800}>\n              <ImgSection\n                src={dfinityExplorerLogo}\n                alt='logo'>\n              </ImgSection>\n            </Flip>\n          </Grid>\n        </GridImageRight>\n      </GridSectionSecondary>\n    );\n  }\n\n  /**\n   * Return the elements for the Community section based on the current breakpoint.\n   * @return {Object} The elements for the Community section based on the current breakpoint.\n   * @private\n   */\n  getSectionCommunity()\n  {\n    const { breakpoint, isThemeDark } = this.props;\n\n    const theme = isThemeDark ? 'dark' : 'light';\n    return (\n      <GridSectionPrimary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridImageLeft item breakpoint={breakpoint}>\n          <Fade timeout={2000}>\n            {/* Twitter card looks better at elevation 2 than 1, since card/body are same color. */}\n            <PaperTwitter elevation={2} breakpoint={breakpoint}>\n              <TwitterTimelineEmbed\n                sourceType='profile'\n                screenName='dfinityexplorer'\n                theme={theme}\n                options={{height: 432}}\n                // Setting key here is a bit of a hack. Since TwitterTimelineEmbed only uses the theme\n                // prop when it mounts, the TwitterTimelineEmbed theme will not change if the user changes\n                // the theme after the page has loaded. By setting key to the theme string, we can force a\n                // remount of TwitterTimelineEmbed when the theme changes, so that it picks up the change\n                // to its theme prop. \n                key={theme}\n                noFooter\n                transparent\n              />\n            </PaperTwitter>\n          </Fade>\n        </GridImageLeft>\n        <GridTextRight item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Community\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Follow '}\n              <StyledA href={Constants.URI_TWITTER_DFINITY_EXPLORER} target='_blank' rel='noopener noreferrer'>@dfinityexplorer</StyledA>\n              {' on Twitter to learn about the latest DFINITY-related news, videos, and events.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Learn more about our project on '}\n              <StyledA href={Constants.URI_GITHUB_DFINITY_EXPLORER_PROJECT} target='_blank' rel='noopener noreferrer'>GitHub</StyledA>\n              {' and in our '}\n              <StyledA href={Constants.URI_GITHUB_DFINITY_EXPLORER_WIKI} target='_blank' rel='noopener noreferrer'>wiki</StyledA>\n              {'.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Join our mailing list today to stay up to date on development of our project. '}\n              {'We’ll let you know when DFINITY Explorer goes live along with the DFINITY network '}\n              {'later in 2019.'}\n            </TypographyBody>\n            {/* Begin MailChimp Signup Form */}\n            <form action='https://dfinityexplorer.us18.list-manage.com/subscribe/post?u=059dc252f5f0cea2fec413c42&amp;id=4ebbd6c248' method='post' id='mc-embedded-subscribe-form' name='mc-embedded-subscribe-form' className='validate' target='_blank' rel='noopener noreferrer' noValidate>\n              {/* real people should not fill this in and expect good things - do not remove this or risk form bot signups  */}\n              <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden='true'>\n                <input type='text' name='b_059dc252f5f0cea2fec413c42_4ebbd6c248' tabIndex='-1' defaultValue='' />\n              </div>\n              <div className='clear'>\n                <ButtonSubscribe type='submit'>\n                  <MailIconButton />\n                  Join Our Mailing List\n                </ButtonSubscribe>\n              </div>\n            </form>\n            {/* End MailChimp Signup Form */}\n          </Fade>\n        </GridTextRight>\n      </GridSectionPrimary>\n    );\n  }\n  \n  /**\n   * Return the elements for the Contributors section based on the current breakpoint.\n   * @return {Object} The elements for the Contributors section based on the current breakpoint.\n   * @private\n   */\n  getSectionContributors()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionSecondary container\n        direction='row'\n        justify='space-between'\n        alignItems='center'\n        breakpoint={breakpoint}\n      >\n        <GridTextLeft item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Contributors\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'DFINITY Explorer is a cooperative effort, made with '}\n              <SpanHeart>♥</SpanHeart>\n              {' by '}\n              <StyledA href={Constants.URI_GITHUB_DYLAN} target='_blank' rel='noopener noreferrer'>@dylancm4</StyledA>\n              {', '}\n              <StyledA href={Constants.URI_GITHUB_TODD} target='_blank' rel='noopener noreferrer'>@toddkitchens</StyledA>\n              {', and a friendly bunch of '}\n              <StyledA href={Constants.URI_GITHUB_CONTRIBUTORS} target='_blank' rel='noopener noreferrer'>contributors</StyledA>\n              {' from the DFINITY community. We are passionate about DFINITY and we want to build '}\n              {'things to help it to succeed.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Make a donation to help support the project! Open-source development is powered '}\n              {'by the support of people like you.'}\n            </TypographyBody>\n            <ButtonDonate checkoutId={Constants.COINBASE_CHECKOUT_ID}>\n              <Grid container direction='row' justify='flex-start' alignItems='center'>\n                <Grid item>\n                  <SvgIconButton>\n                    <path d={Constants.ICON_SVG_PATH_BITCOIN} />\n                  </SvgIconButton>\n                </Grid>\n                <Grid item>\n                  Donate With Crypto\n                </Grid>\n              </Grid>\n            </ButtonDonate>\n          </Fade>\n        </GridTextLeft>\n        <GridImageRight item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <LightSpeed right timeout={800}>\n              <ImgSection\n                src={githubOctocat}\n                alt='GitHub Octocat'>\n              </ImgSection>\n            </LightSpeed>\n          </Grid>\n        </GridImageRight>\n      </GridSectionSecondary>\n    );\n  }\n\n  /**\n   * Return the elements for the Thanks section based on the current breakpoint.\n   * @return {Object} The elements for the Thanks section based on the current breakpoint.\n   * @private\n   */\n  getSectionThanks() {\n    // Possibly add: GraphQL Yoga, Recharts!!!\n    const { breakpoint, isThemeDark } = this.props;\n    \n    // Adjust heights based on the perceived size of images (i.e., some images contain smaller logos\n    // to make room for the text, so those images need to be enlarged).\n    const reactHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.3;\n    const styledComponentsHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.4;\n    const materialUiHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const nomicsHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 0.9;\n    const apolloHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const graphqlHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.4;\n    const prismaHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.0;\n    const postgresHeight =\n      Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * (isThemeDark ? 1.0 : 1.4);\n    const dfinityHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.2;\n\n    // Define the image link objects for the ImageLinkGrid.\n    const imageLinks = [\n      {\n        src: reactLogo,\n        height: reactHeight,\n        alt: 'React logo',\n        href: Constants.URI_ABOUT_REACT\n      },\n      {\n        src: isThemeDark ? styledComponentsLogoDark : styledComponentsLogoLight,\n        height: styledComponentsHeight,\n        alt: 'Styled Components logo',\n        href: Constants.URI_ABOUT_STYLED_COMPONENTS\n      },\n      {\n        src: materialUiLogo,\n        height: materialUiHeight,\n        alt: 'Material-UI logo',\n        href: Constants.URI_ABOUT_MATERIAL_UI\n      },\n      {\n        src: isThemeDark ? nomicsLogoDark : nomicsLogoLight,\n        height: nomicsHeight,\n        alt: 'Nomics logo',\n        href: Constants.URI_ABOUT_NOMICS\n      },\n      {\n        src: isThemeDark ? apolloLogoDark : apolloLogoLight,\n        height: apolloHeight,\n        alt: 'Apollo logo',\n        href: Constants.URI_ABOUT_APOLLO\n      },\n      {\n        src: graphqlLogo,\n        height: graphqlHeight,\n        alt: 'GraphQL logo',\n        href: Constants.URI_ABOUT_GRAPHQL\n      },\n      {\n        src: isThemeDark ? prismaLogoDark : prismaLogoLight,\n        height: prismaHeight,\n        alt: 'Prisma logo',\n        href: Constants.URI_ABOUT_PRISMA\n      },\n      {\n        src: isThemeDark ? postgresLogoDark : postgresLogoLight,\n        height: postgresHeight,\n        alt: 'PostgreSQL logo',\n        href: Constants.URI_ABOUT_POSTGRES\n      },\n      {\n        src: isThemeDark ? dfinityLogoDark : dfinityLogoLight,\n        height: dfinityHeight,\n        alt: 'DFINITY logo',\n        href: Constants.URI_ABOUT_DFINITY\n      }\n    ];\n\n    // Calculate images per row based on the current breakpoint.\n    let imagesPerRow;\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        imagesPerRow = 1;\n        break;\n      case Breakpoints.SM:\n        imagesPerRow = 2;\n        break;\n      default:\n        imagesPerRow = 3;\n        break;\n    }\n\n    return (\n      <GridSectionPrimary container\n        direction='column'\n        justify='flex-start'\n        alignItems='stretch'\n        breakpoint={breakpoint}\n      >\n        <Grid container direction='row' justify='center' alignItems='center'>\n          <Grid item>\n            <Fade bottom timeout={500}>\n              <TypographyHeading breakpoint={breakpoint}>Special thanks to:</TypographyHeading>\n            </Fade>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <ImageLinkGridThanks\n            imageLinks={imageLinks}\n            perRow={imagesPerRow}\n            justifyRow={breakpoint === Breakpoints.XS ? 'center' : 'space-between'}\n            marginBetweenRows={Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT / 2}\n          />\n        </Grid>\n      </GridSectionPrimary>\n    );\n  }\n\n  /**\n   * Return the width of the DfinitySymbolD3 component based on the current breakpoint.\n   * @return {Number} The width of the DfinitySymbolD3 component based on the current breakpoint.\n   * @private\n   */\n  getDfinitySymbolD3Width() {\n    const { breakpoint, isDesktopDrawerOpen } = this.props;\n    const contentWidth =  window.innerWidth - (isDesktopDrawerOpen ? Constants.DRAWER_WIDTH : 0);\n\n    let width;\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        width = contentWidth - Constants.ABOUT_PAGE_MARGIN_XS*2;\n        break;\n      case Breakpoints.SM:\n        width = contentWidth - Constants.ABOUT_PAGE_MARGIN_SM*2;\n        break;\n      case Breakpoints.MD:\n        width = contentWidth*0.5 - Constants.ABOUT_PAGE_MARGIN_MD*3/2;\n        // This is a bit of a hack, but we scale the symbol slightly larger because it does not fill\n        // its window all the way to the edges.\n        width *= 1.2;\n        break;\n      default:\n        width = contentWidth*0.5 - Constants.ABOUT_PAGE_MARGIN_LG*3/2;\n        width *= 1.2;\n        break;\n    }\n    return width;\n  }\n}\n\nexport default AboutPage;\n","/**\n * @file querySearchGetType\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get type of object being searched for based on query string.\n * @return {String} The type of object being searched for.\n */\nconst querySearchGetType = gql`\n  query SearchGetType($query: String!) {\n    searchGetType(query: $query) {\n      type\n    }\n  }\n`;\n\nexport default querySearchGetType;\n","/**\n * @file SearchPage\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport querySearchGetType from '../../graphql/querySearchGetType';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport Constants from '../../constants';\n\nconst StyledTypography = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: 1em;\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst ExplorerTypography = styled(StyledTypography)`\n  && {\n    font-weight: 400;\n    font-size: 2em;\n    /* Why is letter-spacing set to 0 here?!!! */\n    letter-spacing: 0;\n    color: ${Constants.COLOR_DFINITY_LIGHT_ORANGE};\n  }\n`;\n\n/**\n * The Search Page shows details about a search.\n */\nclass SearchPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { query } = this.props.match.params;\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <ExplorerTypography>Search</ExplorerTypography>\n        <Query query={querySearchGetType} variables={{ query }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <StyledTypography>Searching...</StyledTypography>              \n              );\n            else if (error)\n              return (\n                <StyledTypography>Network error</StyledTypography>             \n              );\n            else if (data.searchGetType.type === \"Block\")\n              return (\n                <Redirect to={{ pathname: `/block/${query}` }}/>\n              );\n            else if (data.searchGetType.type === \"Transaction\")\n              return (\n                <Redirect to={{ pathname: `/tx/${query}` }}/>\n              );\n            else\n              return (              \n                <StyledTypography>Sorry, this is an invalid search string.</StyledTypography>             \n              );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","/**\n * @file querySearchAutoComplete\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag'\n\n/**\n * GraphQL query to get auto-complete items based on query string.\n * @return {Array} The array of auto-complete items.\n */\nconst querySearchAutoComplete = gql`\n  query SearchAutoComplete($query: String!, $first: Int) {\n    searchAutoComplete(query: $query, first: $first) {\n      items\n    }\n  }\n`;\n\nexport default querySearchAutoComplete;\n","/**\n * @file DEAppBar\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Query } from 'react-apollo';\nimport styled from 'styled-components';\nimport {\n  AppBar,\n  Divider,\n  Drawer,\n  Fade,\n  Grid,\n  IconButton,\n  Input,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  SvgIcon,\n  SwipeableDrawer,\n  Toolbar,\n  Typography,\n  Zoom\n} from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport RevealFade from 'react-reveal/Fade';\nimport RevealZoom from 'react-reveal/Zoom';\nimport Downshift from 'downshift';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent'\nimport querySearchAutoComplete from '../../graphql/querySearchAutoComplete';\nimport { Breakpoints, isBreakpointLessOrEqualTo, isBreakpointGreaterOrEqualTo } from '../../utils/breakpoint';\nimport Constants from '../../constants';\nimport dfinityExplorerLogo from './dfinity-explorer-logo.png';\n\nconst StyledAppBar = styled(AppBar)`\n  && {\n    background: ${props => props.theme.colorAppBarBackground};\n    /* AppBar is above Drawer */\n    z-index: ${zIndex.drawer + 1};\n  }\n`;\n\nconst SearchAppBar = styled(AppBar)`\n  && {\n    background: white;\n    /* AppBar is above Drawer */\n    z-index: ${zIndex.drawer + 1};\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  && {\n    padding-left: 12px;\n    padding-right: 12px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      padding-left: 4px;\n      padding-right: 4px;\n    }\n  }\n`;\n\nconst SearchToolbar = styled(Toolbar)`\n  && {\n    padding-top: 4px;\n    padding-bottom: 4px;\n    padding-left: 16px;\n    padding-right: 12px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      padding-top: 4px;\n      padding-bottom: 4px;\n      padding-left: 8px;\n      padding-right: 4px;\n    }\n  }\n`;\n\nconst ImgProductIcon = styled.img`\n  && {\n    margin-left: 12px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-left: 0px;\n    }\n  }\n`;\n\n// Specify font-size in px rather than rem for app name, since it should not change based on browser\n// settings.\nconst TypographyAppName = styled(Typography)`\n  && {\n    font-family: 'Istok Web', sans-serif;\n    font-weight: bold;\n    font-size: 20px;\n    user-select: none;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst TypographyDfinity = styled(TypographyAppName)`\n  && {\n    margin-left: 12px;\n    letter-spacing: 12px;\n    color: ${props => props.theme.colorAppBarDfinityText};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-left: 8.4px;\n      letter-spacing: 8.4px;\n    }\n  }\n`;\n\n/**\n * A separate div is used for the border between DFINITY and Explorer, so that it can be\n * animated. The height is based on TypographyAppName font-size, and matches exactly what\n * \"border-right: 1px solid\" in TypographyDfinity would look like.\n */\nconst TypographyBorder = styled.div`\n  && {\n    width: 0px;\n    height: 29px;\n    border-right: ${props => '1px solid ' + props.theme.colorAppBarDfinityText};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      height: 20.3px;\n    }\n  }\n`;\n\nconst TypographyExplorer = styled(TypographyAppName)`\n  && {\n    margin-left: 14px;\n    letter-spacing: 7.5px;\n    color: ${props => props.theme.colorAppBarExplorerText};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-left: 9.8px;\n      letter-spacing: 5.25px;\n    }\n  }\n`;\n\n// Need to use new breakpoint method here and elsewhere, but probably call GetBreakpoint without drawer from render()!!!\nconst InputSearch = styled(Input)`\n  && {\n    /*\n     * margin-top is used to center the Input vertically, and depends on font-size.\n     * DCM 21.apr.2018: After updating Material-UI, margin-top had to be adjusted for all\n     * breakpoints based on trial and error.\n     */\n    margin-top: 0.65rem;\n    color: ${props => props.theme.colorSearchText};\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_SM + 'px'}) {\n      margin-top: 0.875rem;\n      /* font-size \"Body 2\" is not small enough to fit a hash, but this is smallest we should go. */\n      font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    }\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-top: 0.625rem;\n    }\n  }\n`;\n\n/**\n * List for search auto-complete list.\n */\nconst ListSearch = styled(List)`\n  && {\n    /* The List component has top and bottom padding of 8px. Remove it. */\n    padding-top: 0px;\n    padding-bottom: 0px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    color:  ${props => props.theme.colorSearchText};\n    @media (max-width: ${Constants.BREAKPOINT_MAX_SM + 'px'}) {\n      font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    }\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      /* This font size is smaller than Material Design standards, but fits a auto-complete hash. */\n      /* BUG: A full hash pushes the close button off of the screen with this font size!!! */\n      /* This bug existed in old code too, but you could see a tiny bit of the close button!!! */\n      /* It seems like this could have to do with style={{ flexGrow: '1' }}>!!! */\n      /* For now, changing the font size smaller than 0.5625rem to avoid bug!!! */\n      /* font-size: 0.5625rem; this is the size we would like!!! */\n      font-size: 7px;\n    }\n  }\n`;\n\n/**\n * ListItem for search auto-complete list.\n */\nconst ListItemSearch = styled(ListItem)`\n  && {\n    /* Use theme for the highlighted/focused color!!! */\n    background: ${props => props.highlighted ? Constants.COLOR_GRAY_ON_WHITE : 'initial'};\n  }\n`;\n\n/**\n * SearchIcon for search auto-complete list.\n */\nconst SearchIconListSearch = styled(SearchIcon)`\n  && {\n    color: ${props => props.theme.colorSearchIcon};\n    /* Sizes here are based on ListSearch font-sizes. */\n    width: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    height: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    /*\n     * DCM 21.apr.2018: After updating Material-UI, margin-right had to be adjusted for all\n     * breakpoints based on trial and error.\n     */\n    margin-right: 0px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_SM + 'px'}) {\n      width: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n      height: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    }\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      /* BUG: 0.5625rem is the size we would like (see above)!!! */\n      width: 7px;\n      height: 7px;\n      margin-right: -7px;\n    }\n  }\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  && {\n    color: ${props => props.theme.colorAppBarTextButton};\n    &:hover {\n      color: ${props => props.theme.colorAppBarButtonHover};\n    }\n  }\n`;\n\nconst StyledMenuIcon = styled(MenuIcon)`\n  && {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  && {\n    width: 32px;\n    height: 32px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  && {\n    width: 32px;\n    height: 32px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n\nconst StyledSwipeableDrawer = styled(({ ...other }) => (\n  <SwipeableDrawer {...other} classes={{ paper: 'paper' }} />\n))`\n  & .paper {\n    width: ${Constants.DRAWER_WIDTH + 'px'};\n    background: ${props => props.theme.colorDrawerBackground};\n  }\n`;\n\nconst StyledDrawer = styled(({ ...other }) => (\n  <Drawer {...other} classes={{ paper: 'paper' }} />\n))`\n  & .paper {\n    width: ${Constants.DRAWER_WIDTH + 'px'};\n    background: ${props => props.theme.colorDrawerBackground};\n    border-right:\n      ${props => props.theme.isDark ? `1px solid ${props.theme.colorBodyBackground}` : '0px'};\n  }\n`;\n\nconst StyledDivider = styled(Divider)`\n  && {\n    background: ${props => props.theme.colorDrawerDivider};\n  }\n`;\n\nconst DrawerListItemIcon = styled(ListItemIcon)``;\n\nconst DrawerListItemText = styled(({ ...other }) => (\n  <ListItemText {...other} classes={{ primary: 'primary' }} />\n))``;\n\nconst DrawerListItem = styled(ListItem)`\n  && {\n    padding-top: 12px;\n    padding-bottom: 12px;\n    ${DrawerListItemIcon} {\n      margin-left: 8px;\n      color: ${\n        props => props.selected ?\n          props.theme.colorDrawerIconTextSelected :\n          props.theme.colorDrawerIcon\n      };\n    }\n    ${DrawerListItemText} {\n      margin-left: -8px;\n      & .primary {\n        font-family: ${Constants.FONT_PRIMARY};\n        font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n        font-weight: ${props => props.selected ? 600 : 400};\n        color: ${\n          props => props.selected ?\n            props.theme.colorDrawerIconTextSelected :\n            props.theme.colorDrawerText\n        };\n      }\n    }\n  }\n`;\n\n// DCM 2019-02-02: I tried for a few hours to change the \"selected\" background color of a ListItem\n// using styled-components, but I was unsuccessful even though it seems like the code below should\n// work. I was able to change the color using the Material-UI withStyles() technique of styling:\n// https://stackoverflow.com/questions/50371315/how-to-override-material-ui-menuitem-selected-background-color\n// However, that technique does not have access to props, so it would not work well with the way\n// we're currently doing theming. There is likely a way to get this working in a way that does not\n// use styled-components, but the \"selected\" background color is not important enough to spend the\n// time on this issue right now.\n/*const DrawerListItem = styled(({ ...other }) => (\n  <ListItem classes={{ selected: 'selected' }} {...other} />\n))`\n  && {\n    background: pink;\n    &:focus {\n      background: cyan;\n    }\n    &:hover {\n      background: red;\n    }\n    // All of the above colors work, but the \"selected\" background color does not work.\n    & .selected {\n      background: blue !important;\n    }\n  }\n`;*/\n\n/**\n * The App Bar provides content and actions related to the current screen.\n */\nclass DEAppBar extends ResponsiveComponent {\n  static propTypes = {\n    /**\n     * Callback fired when the App Bar is resized.\n     */\n    handleAppBarResize: PropTypes.func,\n    /**\n     * Callback fired when the desktop drawer (large screens) menu button is clicked.\n     */\n    handleDesktopDrawerMenuClick: PropTypes.func.isRequired,\n    /**\n     * Callback fired when the mobile drawer (small screens) menu button is clicked.\n     */\n    handleMobileDrawerMenuClick: PropTypes.func.isRequired,\n    /**\n     * True if the desktop drawer (large screens) is open.\n     */    \n    isDesktopDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * True if the mobile drawer (small screens) is open.\n     */    \n    isMobileDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * Object containing information about the current react-router location.\n     */\n    location: PropTypes.object.isRequired,\n    /**\n     * Reference to the <HashRouter> element.\n     */\n    routerRef: PropTypes.object\n  };\n\n  /**\n   * Create a DEAppBar object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {\n      isSearchOn: false,\n      searchQuery: ''\n    };\n\n    this.toolbarDivRef = React.createRef();\n\n    this.maxSearchAutoCompleteItems = 6;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.handleCloseClick = this.handleCloseClick.bind(this);\n    this.handleDownshiftStateChange = this.handleDownshiftStateChange.bind(this);\n    this.handleDownshiftChange = this.handleDownshiftChange.bind(this);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.isActiveRoute = this.isActiveRoute.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { isSearchOn } = this.state;\n    return (\n      <Fragment>\n        {/* Toolbar shim to compensate for AppBar position='fixed'. */}\n        <div ref={this.toolbarDivRef}>\n          <Toolbar />\n        </div>\n        <Fade in={isSearchOn} timeout={200} mountOnEnter unmountOnExit>\n          <SearchAppBar elevation={2}>\n            {this.getToolbarSearchContent()}\n          </SearchAppBar>\n        </Fade>\n        <Fade in={!isSearchOn} timeout={200} mountOnEnter unmountOnExit>\n          <StyledAppBar elevation={2}>\n            {this.getToolbarDefaultContent()}\n          </StyledAppBar>\n        </Fade>\n        {this.getDrawer()}\n      </Fragment>\n    );\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree).\n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    // Pass App Bar height to owner.\n    if (this.props.handleAppBarResize)\n      this.props.handleAppBarResize(this.toolbarDivRef.current.offsetHeight);\n  }\n\n  /**\n   * Force the component to re-render when the window is resized.\n   * @private\n   */\n  handleWindowResize() {\n    super.handleWindowResize();\n\n    // Pass App Bar height to owner.\n    if (this.props.handleAppBarResize)\n      this.props.handleAppBarResize(this.toolbarDivRef.current.offsetHeight);\n\n    // Close the mobile drawer (small screens) when screen is resized larger, so that it does not\n    // reappear when the screen is resized smaller.\n    if (isBreakpointGreaterOrEqualTo(Breakpoints.MD) && this.props.isMobileDrawerOpen)\n      this.props.handleMobileDrawerMenuClick();\n  }\n\n  /**\n   * Return the elements for the search toolbar based on the current breakpoint.\n   * @return {Object} The elements for the search toolbar based on the current breakpoint.\n   * @private\n   */\n  getToolbarSearchContent() {\n    return (\n      <SearchToolbar variant='dense'>\n        <Grid container direction='row' justify='space-between' alignItems='flex-start' wrap='nowrap'>\n          <Grid item style={{ flexGrow: '1' }}>\n            <Downshift\n              onStateChange={this.handleDownshiftStateChange}\n              onChange={this.handleDownshiftChange}\n              selectedItem={this.state.searchQuery}\n            >\n              {({\n                getInputProps,\n                getItemProps,\n                getMenuProps,\n                isOpen,\n                inputValue,\n                highlightedIndex,\n              }) => (\n                <div>\n                  <form onSubmit={this.handleSearchSubmit}>\n                    <InputSearch\n                      {...getInputProps({\n                        autoFocus: true,\n                        disableUnderline: true,\n                        fullWidth: true,\n                        placeholder: 'Search for block, transaction, or address'\n                      })}\n                    />\n                  </form>\n                  <Query\n                    query={querySearchAutoComplete}\n                    variables={{ query: inputValue, first: this.maxSearchAutoCompleteItems }}\n                  >\n                    {({ loading, error, data }) => {\n                      if (loading || error || !data.searchAutoComplete || !isOpen)\n                        return <ListSearch />;\n                      return (    \n                        <ListSearch {...getMenuProps()}>\n                          {data.searchAutoComplete.items.map((item, index) => (\n                            <ListItemSearch\n                              disableGutters\n                              // Use number for highlighted prop instead of boolean to prevent\n                              // \"non-boolean attribute\" warning.\n                              highlighted={highlightedIndex === index ? 1 : 0}\n                              {...getItemProps({\n                                key: item,\n                                index,\n                                item\n                              })}\n                            >\n                              <ListItemIcon>\n                                <SearchIconListSearch />\n                              </ListItemIcon>\n                              {item}\n                            </ListItemSearch>\n                          ))}\n                        </ListSearch>\n                      );\n                    }}\n                  </Query>\n                </div>\n              )}\n            </Downshift>\n          </Grid>\n          <Grid item>\n            <Zoom in={true} timeout={300}>\n              <IconButton onClick={this.handleCloseClick}>\n                <StyledCloseIcon />\n              </IconButton>\n            </Zoom>\n          </Grid>\n        </Grid>\n      </SearchToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the toolbar based on the current breakpoint.\n   * @return {Object} The elements for the toolbar based on the current breakpoint.\n   * @private\n   */\n  getToolbarDefaultContent() {\n    return (\n      <StyledToolbar>\n        <Grid container alignItems='center' wrap='nowrap'>\n          <Grid item>\n            {this.getMenuButton()}\n          </Grid>\n          {this.getAppTitle()}\n          <Grid container alignItems='center' justify='flex-end' wrap='nowrap'>\n            <Grid item>\n              {this.getSearchButton()}\n            </Grid>\n          </Grid>\n        </Grid>\n      </StyledToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the menu button on the current breakpoint.\n   * @return {Object} The elements for the menu button based on the current breakpoint.\n   * @private\n   */\n  getMenuButton() {\n    const { handleMobileDrawerMenuClick, handleDesktopDrawerMenuClick } = this.props;\n    return (\n      <Zoom in={true} timeout={300}>\n        <StyledIconButton\n          onClick={\n            isBreakpointLessOrEqualTo(Breakpoints.SM) ?\n              handleMobileDrawerMenuClick: handleDesktopDrawerMenuClick\n          }\n        >\n          <StyledMenuIcon />\n        </StyledIconButton>\n      </Zoom>\n    );\n  }\n\n  /**\n   * Return the elements for the app title based on the current breakpoint.\n   * @return {Object} The elements for the app title based on the current breakpoint.\n   * @private\n   */\n  getAppTitle() {\n    return (\n      <Link\n        style={{ textDecoration: 'none' }}\n        to='/'\n      >\n        <Grid container alignItems='center' justify='flex-start' wrap='nowrap'>\n          <RevealFade timeout={500}>\n            <Grid item>\n              <ImgProductIcon\n                src={dfinityExplorerLogo}\n                height={this.getProductIconHeight()}\n                alt='logo'\n              >\n              </ImgProductIcon>\n            </Grid>\n            <Grid item>\n              <TypographyDfinity>DFINITY</TypographyDfinity>\n            </Grid>\n            <RevealZoom timeout={350}>\n              <Grid item>\n                <TypographyBorder />\n              </Grid>\n            </RevealZoom>\n            <Grid item>\n              <TypographyExplorer>ExpIorer</TypographyExplorer>\n            </Grid>\n          </RevealFade>\n        </Grid>\n      </Link>\n    );\n  }\n\n  /**\n   * Return the height of the product icon based on the current breakpoint.\n   * @return {Number} The height of the product icon based on the current breakpoint.\n   * @private\n   */\n  getProductIconHeight() {\n    if (isBreakpointLessOrEqualTo(Breakpoints.XS))\n      return 23.8;\n    else\n      return 34;\n  }\n\n  /**\n   * Return the elements for the drawer based on the current breakpoint.\n   * @return {Object} The elements for the drawer based on the current breakpoint.\n   * @private\n   */\n  getDrawer() {\n    // The Material Design documentation states: \"Modal drawer: In a responsive layout grid, at a\n    // defined minimum breakpoint of at least 600dp width, a standard drawer should be replaced with\n    // a modal drawer.\" We use a modal drawer for breakpoints xs and sm (i.e., up to 960px).\n    if (isBreakpointLessOrEqualTo(Breakpoints.SM)) {\n      return (\n        <StyledSwipeableDrawer\n          open={this.props.isMobileDrawerOpen}\n          onOpen={this.props.handleMobileDrawerMenuClick}\n          onClose={this.props.handleMobileDrawerMenuClick}\n        >\n          <div onClick={this.props.handleMobileDrawerMenuClick}>\n            {this.getDrawerContent()}\n          </div>\n        </StyledSwipeableDrawer>\n      );\n    }\n    else {\n      return (\n        <StyledDrawer variant='persistent' open={this.props.isDesktopDrawerOpen}>\n          {this.getDrawerContent()}\n        </StyledDrawer>\n      );\n    }  \n  }\n\n  /**\n   * Return the elements for the drawer content based on the current breakpoint.\n   * @return {Object} The elements for the drawer content based on the current breakpoint.\n   * @private\n   */\n  getDrawerContent() {\n    /* Use constants for paths such as 'blocks' everywhere in code!!! */\n    return (\n      <Fragment>\n        {/* Shim to compensate for AppBar position='fixed'. */}\n        <Toolbar/>\n        <List>\n          {/* Could change this to be more generic by calling map() on an array of route objects\n              which contain info such as: path, menu text, and icon.\n              See: https://stackoverflow.com/questions/50801093/material-ui-drawer-selection-how-to-route\n          */}\n          <DrawerListItem button component={Link} to='/' selected={this.isActiveRoute('/')}>\n            <DrawerListItemIcon>\n              <HomeIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Home' selected={this.isActiveRoute('/')} />\n          </DrawerListItem>\n          <StyledDivider />\n          <DrawerListItem button component={Link} to='/blocks' selected={this.isActiveRoute('/blocks')}>\n            <DrawerListItemIcon>\n              <SvgIcon>\n                <path d={Constants.ICON_SVG_PATH_BLOCK} />\n              </SvgIcon>\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Blocks' selected={this.isActiveRoute('/blocks')} />\n          </DrawerListItem>\n          <DrawerListItem button component={Link} to='/txs' selected={this.isActiveRoute('/txs')}>\n            <DrawerListItemIcon>\n              <SvgIcon>\n                <path d={Constants.ICON_SVG_PATH_TPS} />\n              </SvgIcon>\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Transactions' />\n          </DrawerListItem>\n          <DrawerListItem button component={Link} to='/accounts' selected={this.isActiveRoute('/accounts')}>\n            <DrawerListItemIcon>\n              <AccountCircleIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Accounts' />\n          </DrawerListItem>            \n          <DrawerListItem button component={Link} to='/canisters' selected={this.isActiveRoute('/canisters')}>\n            <DrawerListItemIcon>\n              <DescriptionIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Canisters' />\n          </DrawerListItem>\n          <StyledDivider />\n          <DrawerListItem button component={Link} to='/about' selected={this.isActiveRoute('/about')}>\n            <DrawerListItemIcon>\n              <InfoIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='About' />\n          </DrawerListItem>\n        </List>\n      </Fragment>\n    );\n  }\n\n  /**\n   * Return the elements for the search button on the current breakpoint.\n   * @return {Object} The elements for the search button based on the current breakpoint.\n   * @private\n   */\n  getSearchButton() {\n    return (\n      <Zoom in={true} timeout={300}>\n        <StyledIconButton onClick={this.handleSearchClick}>\n          <StyledSearchIcon />\n        </StyledIconButton>\n      </Zoom>\n    );\n  }\n\n  /**\n   * Callback fired when the search button is clicked.\n   * @private\n   */\n  handleSearchClick() {\n    this.setState({\n      isSearchOn: true\n    });\n  }\n\n  /**\n   * Callback fired when the close button is clicked.\n   * @private\n   */\n  handleCloseClick() {\n    this.setState({\n      isSearchOn: false\n    });\n  }\n  \n /**\n   * Callback fired any time the internal state of the Downshift component changes.\n   * @param {Object} changes The properties that have changed since the last state change.\n   * @private\n   */\n  handleDownshiftStateChange(changes) {\n    const { inputValue } = changes;\n    if (inputValue) {\n      this.setState({\n        searchQuery: inputValue\n      });\n    }\n  }\n\n  /**\n   * Callback fired when the value of the Downshift component changes.\n   * @param {Object} selectedItem The item that was just selected.\n   * @private\n   */\n  handleDownshiftChange(selectedItem) {\n    this.performSearch(selectedItem);\n  }\n\n  /**\n   * Callback fired when the SearchAppBar form is submitted.\n   * @param {Object} event The event source of the callback.\n   * @private\n   */\n  handleSearchSubmit(event) {\n    event.preventDefault();\n    this.performSearch(this.state.searchQuery);\n  }\n\n  /**\n   * Perform a search based on the specified search query.\n   * @param {String} searchQuery The search quert to use for the search.\n   * @private\n   */\n  performSearch(searchQuery) {\n    this.setState({\n      isSearchOn: false,\n      searchQuery: ''\n    });\n    if (this.props.routerRef)\n      this.props.routerRef.history.push(`/search/${searchQuery}`);\n  }\n\n  /**\n   * Return true if the specified route matches the current route, false otherwise.\n   * @param {String} routeName The name of the route to check.\n   * @return {Boolean} True if the specified route matches the current route, false otherwise.\n   * @private\n   */\n  isActiveRoute(routeName) {\n    return this.props.location.pathname === routeName;\n  }\n};\n\nexport default withRouter(DEAppBar);","/**\n * @file Footer\n * @copyright Copyright (c) 2018-2019 Dylan Miller and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport { loadCSS } from 'fg-loadcss';\nimport {\n  Checkbox,\n  Grid,\n  Icon,\n  IconButton,\n  SvgIcon,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent';\nimport { Breakpoints, getBreakpoint } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst FooterToolbar = styled(Toolbar)`\n  && {\n    /*!!! position: fixed; */\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: ${Constants.FOOTER_HEIGHT + 'px'};\n    text-align: center;\n    background: ${props => props.theme.colorFooterBackground};\n    color: ${props => props.theme.colorFooterTextIcon};\n    /* This doesn't seem to do anything!!!\n    padding-left: 8;\n    padding-right: 8; */\n  }\n`;\n\nconst OneThirdGrid = styled(Grid)`\n  && {\n    width: 33.33%;\n`;\n\n// Need narrower margins for left and right grids for small screens!!!\nconst LeftThirdGrid = styled(OneThirdGrid)`\n  && {\n    margin-left: 32px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-left: 8px;\n    }\n`;\n\nconst RightThirdGrid = styled(OneThirdGrid)`\n  && {\n    margin-right: 32px;\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      margin-right: 8px;\n    }\n`;\n\nconst FooterTypography = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: 12px;\n  }\n`;\n\nconst FooterA = styled.a`\n  && {\n    color: ${props => props.theme.colorFooterTextIcon};\n    text-decoration: underline;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst AwesomeIconButtonGrid = styled(Grid)`\n  && {\n    // Look into why this is needed!!!\n    @media (max-width: ${Constants.BREAKPOINT_MAX_XS + 'px'}) {\n      min-width: 35px;\n    }\n  }\n`;\n\nconst AwesomeIconButton = styled(IconButton)`\n  && {\n    &:hover {\n      background: ${props => fade(props.theme.colorFooterTextIcon, 0.2)};\n      color: ${props => props.theme.colorFooterIconHover};\n    }\n  }\n`;\n\nconst AwesomeIcon = styled(Icon)`\n  && {\n    font-size: 20px;\n  }\n`;\n\nconst ThemeCheckbox = styled(Checkbox)`\n  && {\n    color: ${props => props.theme.colorFooterTextIcon};\n    &:hover {\n      background: ${props => fade(props.theme.colorFooterTextIcon, 0.2)};\n      color: ${props => props.theme.colorFooterIconHover};\n    }\n  }\n`;\n\nconst ThemeSvgIcon = styled(SvgIcon)`\n  && {\n    margin-top: -1px;\n    font-size: 17px;\n  }\n`;\n\n/**\n * The Footer provides information related to the current screen.\n */\nclass Footer extends ResponsiveComponent {\n  static propTypes = {\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired,\n    /**\n     * Callback fired when the value of the theme checkbox changes.\n     */    \n    handleThemeChange: PropTypes.func.isRequired,\n    /**\n     * Object containing information about the current react-router location.\n     */\n    location: PropTypes.object.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    loadCSS(Constants.URI_CDN_FONT_AWESOME, document.querySelector('#insertion-point-jss'));\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <FooterToolbar>\n        {/*!!! <Grid container direction='row' justify='center' alignItems='center'> */}\n          {/*!!! <Grid container direction='row' justify='center' alignItems='center' wrap='nowrap'> */}\n            <LeftThirdGrid container direction='row' justify='flex-start' alignItems='center'>\n              <Grid item>\n                <FooterTypography color='inherit'>\n                  {this.getCopyrightText()}\n                </FooterTypography>\n              </Grid>\n            </LeftThirdGrid>\n            <OneThirdGrid container direction='column' justify='center' alignItems='center'>\n              <Grid item>\n                <FooterTypography color='inherit'>\n                  {this.getSimulatedText()}\n                </FooterTypography>\n              </Grid>\n              { this.props.location.pathname === '/' &&\n                <Grid item>\n                  <FooterTypography color='inherit'>\n                    {'('}\n                    {this.getNomicsTextDescription()}\n                    <FooterA href={Constants.URI_ABOUT_NOMICS} target='_blank' rel='noopener noreferrer'>\n                      {this.getNomicsTextLink()}\n                    </FooterA>\n                    {')'}\n                  </FooterTypography>\n                </Grid>\n              }\n            </OneThirdGrid>\n            <RightThirdGrid container direction='row' justify='flex-end' alignItems='center' wrap='nowrap'>\n              <AwesomeIconButtonGrid item>\n                <AwesomeIconButton\n                  color='inherit'\n                  href={Constants.URI_DFINITY_EXPLORER_TWITTER}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <AwesomeIcon className='fa fa-twitter' />\n                </AwesomeIconButton>\n              </AwesomeIconButtonGrid>\n              <AwesomeIconButtonGrid item>\n                <AwesomeIconButton\n                  color='inherit'\n                  href={Constants.URI_DFINITY_EXPLORER_GITHUB}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <AwesomeIcon className='fa fa-github' />\n                </AwesomeIconButton>\n              </AwesomeIconButtonGrid>\n              <AwesomeIconButtonGrid item>\n                <ThemeCheckbox\n                  color='default'\n                  checked={this.props.isThemeDark}\n                  icon={\n                    <ThemeSvgIcon>\n                      <path d={Constants.ICON_SVG_PATH_THEME_LIGHT} />\n                    </ThemeSvgIcon>\n                  }\n                  checkedIcon={\n                    <ThemeSvgIcon>\n                      <path d={Constants.ICON_SVG_PATH_THEME_DARK} />\n                    </ThemeSvgIcon>\n                  }\n                  onChange={this.props.handleThemeChange}\n                />\n              </AwesomeIconButtonGrid>\n            </RightThirdGrid>\n          {/*!!! </Grid> */}\n        {/*!!! </Grid> */}\n      </FooterToolbar>\n    );\n  }\n\n  /**\n   * Return the copyright text.\n   * @return {String} the copyright text.\n   * @private\n   */\n   getCopyrightText() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return '© 2019 dfinityexplorer';\n      case Breakpoints.SM:\n        return '© 2019 dfinityexplorer contributors';\n      default:\n        return '© 2019 dfinityexplorer contributors | All rights reserved';\n    }\n  }\n\n  /**\n   * Return the \"data is simulated\" text.\n   * @return {String} The \"data is simulated\" text.\n   * @private\n   */\n  getSimulatedText() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return '(Simulated data)';\n      case Breakpoints.SM:\n        return '(Data is simulated)';\n      default:\n        return '(Network and price data is simulated)';\n    }\n  }\n\n  /**\n   * Return the Nomics attribution description text.\n   * @return {String} The Nomics attribution description text.\n   * @private\n   */\n  getNomicsTextDescription() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return 'Price data by ';\n      default:\n        return 'Price data provided by Nomics.com ';\n    }\n  }\n\n  /**\n   * Return the Nomics attribution link text.\n   * @return {String} The Nomics attribution link text.\n   * @private\n   */\n  getNomicsTextLink() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return 'Nomics.com';\n      default:\n        return 'Cryptocurrency Market Data API';\n    }\n  }\n};\n\nexport default withRouter(Footer);\n","/**\n * @file App\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport {\n  Route,\n  HashRouter\n} from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { loadCSS } from 'fg-loadcss';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { ApolloProvider } from 'react-apollo';\nimport { GlobalStyle, themeLight, themeDark } from './theme/globalStyle';\nimport HomePage from './Components/HomePage/HomePage';\nimport AccountsPage from './Components/AccountsPage/AccountsPage';\nimport BlocksPage from './Components/BlocksPage/BlocksPage';\nimport BlockDetailsPage from './Components/BlockDetailsPage/BlockDetailsPage';\nimport TransactionsPage from './Components/TransactionsPage/TransactionsPage';\nimport TransactionDetailsPage from './Components/TransactionDetailsPage/TransactionDetailsPage';\nimport CanistersPage from './Components/CanistersPage/CanistersPage';\nimport AboutPage from './Components/AboutPage/AboutPage';\nimport SearchPage from './Components/SearchPage/SearchPage';\nimport DEAppBar from './Components/DEAppBar/DEAppBar';\nimport Footer from './Components/Footer/Footer';\nimport Constants from './constants';\nimport { Breakpoints, getBreakpoint, isBreakpointGreaterOrEqualTo } from './utils/breakpoint';\n\n// Create an http link.\nconst httpLink = new HttpLink({\n  uri: Constants.URI_SERVER_HTTP\n});\n\n// Create a WebSocketLink that represents the WebSocket connection. \nconst wsLink = new WebSocketLink({\n  uri: Constants.URI_SERVER_WEB_SOCKETS,\n  options: {\n    reconnect: true\n  }\n});\n\n// Using the ability to split links, you can send data to each link depending on what kind of\n// operation is being sent.\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink, // for subscription\n  httpLink // for query or mutation\n);\n\n// Create Apollo client.\nconst apolloClient = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache({\n    // Tell Apollo to use the unique identifier object.id when normalizing the data in the store.\n    // This allows Apollo to automatically re-render the UI when objects change as the result of\n    // mutations. Using object.id only works when every object.id in the application is unique.\n    // For this to work in the app, every GraphQL query must ask for the ID of every record.\n    dataIdFromObject: object => object.id\n  })\n});\n\n// Initialize the react-ga library. We do not need user consent to be GDPR compliant. According to\n// Google: \"When using Google Analytics Advertising Features, you must also comply with the European\n// Union User Consent Policy.\" Advertising Features are not enabled for DFINITY Explorer. Under the\n// GDPR, an IP address is considered Personally Identifiable Information (PII), so we anonymize the\n// IP addresses sent to Google Analytics\nReactGA.initialize(Constants.GOOGLE_ANALYTICS_TRACKING_ID);\nReactGA.set({ anonymizeIp: true });\n\nconst ContentDiv = styled.div`\n  && {\n    margin-left: ${props => props.isDesktopDrawerOpen ? Constants.DRAWER_WIDTH + 'px' : '0px'};\n    transition: ${props =>\n      'margin-left ' +\n      (props.isDesktopDrawerOpen ? duration.enteringScreen : duration.leavingScreen) +\n      'ms ' +\n      easing.easeInOut};\n  }\n`;\n\nconst ContentGrid = styled(Grid)`\n  && {\n    /* The height of the body + footer is the total viewport height - App Bar height. */\n    min-height: calc(100vh - ${props => props.appbarheight + 'px'});\n`;\n\n/**\n * Top-level component of the app.\n */\nclass App extends Component {\n  /**\n   * Create an App object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      routerRef: null,\n      appBarHeight: 0,\n      isDesktopDrawerEnabled: true,\n      isMobileDrawerOpen: false,\n      isThemeDark: true\n    };\n\n    // Bind to make 'this' work in callbacks.\n    this.setRouterRef = this.setRouterRef.bind(this);\n    this.handleAppBarResize = this.handleAppBarResize.bind(this);\n    this.handleDesktopDrawerMenuClick = this.handleDesktopDrawerMenuClick.bind(this);\n    this.handleMobileDrawerMenuClick = this.handleMobileDrawerMenuClick.bind(this);\n    this.handleThemeChange = this.handleThemeChange.bind(this);\n  }\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Load fonts.\n    loadCSS(\n      Constants.URI_CDN_GOOGLE_FONTS,\n      document.querySelector('#insertion-point-jss')\n    );\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      appBarHeight,\n      isDesktopDrawerEnabled,\n      isMobileDrawerOpen,\n      isThemeDark,\n      routerRef\n    } = this.state;\n\n    // It seems like the >= MD logic here should be kept in one place. It's also in DEAppBar!!!\n    // Can't I somehow make this cleaner?!!!\n    const isDesktopDrawerOpen =\n      isDesktopDrawerEnabled && isBreakpointGreaterOrEqualTo(Breakpoints.MD);\n    const breakpoint = getBreakpoint(isDesktopDrawerOpen);\n\n    return (\n      <ApolloProvider client={apolloClient}>\n        <GlobalStyle theme={this.getTheme()} />\n        <ThemeProvider theme={this.getTheme()}>\n          <HashRouter ref={this.setRouterRef}>\n            <div>\n              <DEAppBar\n                handleAppBarResize={this.handleAppBarResize}\n                handleDesktopDrawerMenuClick={this.handleDesktopDrawerMenuClick}\n                handleMobileDrawerMenuClick={this.handleMobileDrawerMenuClick}\n                isDesktopDrawerOpen={isDesktopDrawerOpen}\n                isMobileDrawerOpen={isMobileDrawerOpen}\n                routerRef={routerRef}\n              />\n              <ContentDiv\n                isDesktopDrawerOpen={isDesktopDrawerOpen}\n                isMobileDrawerOpen={isMobileDrawerOpen}\n                /* Workaround to force react-parallax to update when drawer opens/closes. Perhaps */\n                /* file an issue with react-parallax that Parallax does not update when */\n                /* margin-left changes. */\n                onTransitionEnd={() => window.dispatchEvent(new Event('resize'))}\n              >\n                <ContentGrid\n                  container\n                  direction='column'\n                  justify='space-between'\n                  appbarheight={appBarHeight}\n                >                 \n                  <Route\n                    exact path='/'\n                    render={(props) => \n                      <HomePage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route exact path=\"/blocks\" component={BlocksPage} />                 \n                  <Route exact path=\"/txs\" component={TransactionsPage} />            \n                  <Route exact path=\"/accounts\" component={AccountsPage} />                  \n                  <Route exact path=\"/canisters\" component={CanistersPage} />\n                  <Route\n                    exact path='/about'\n                    render={(props) => \n                      <AboutPage\n                        {...props}\n                        breakpoint={breakpoint}\n                        isDesktopDrawerOpen={isDesktopDrawerOpen}\n                        isThemeDark={isThemeDark}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/block/:height'\n                    render={(props) => \n                      <BlockDetailsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path=\"/tx/:hash\"\n                    render={(props) => \n                      <TransactionDetailsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route exact path=\"/search/:query\" component={SearchPage} />\n                  <Footer                  \n                    handleThemeChange={this.handleThemeChange}\n                    isThemeDark={isThemeDark}\n                  />\n                </ContentGrid>\n              </ContentDiv>\n            </div>\n          </HashRouter>\n        </ThemeProvider>\n      </ApolloProvider>\n    );\n  }\n\n  /**\n   * Set a reference to the HashRouter element.\n   * @public\n   */\n  setRouterRef(element) {\n    this.setState({ routerRef: element });\n  };\n\n  /**\n   * Callback fired when the App Bar is resized.\n   * @private\n   */\n  handleAppBarResize(height) {\n    this.setState({\n      appBarHeight: height\n    });\n  }\n\n  /**\n   * Callback fired when the desktop drawer (large screens) menu button is clicked.\n   * @private\n   */\n  handleDesktopDrawerMenuClick(contentRect) {\n    this.setState({\n      isDesktopDrawerEnabled: !this.state.isDesktopDrawerEnabled\n    });\n  }\n\n  /**\n   * Callback fired when the mobile drawer (small screens) menu button is clicked.\n   * @private\n   */\n  handleMobileDrawerMenuClick(contentRect) {\n    this.setState({\n      isMobileDrawerOpen: !this.state.isMobileDrawerOpen\n    });\n  }\n\n  /**\n   * Callback fired when the value of the Footer component theme checkbox changes.\n   * @param {Object} event The event source of the callback.\n   * @param {Number} checked The checked value of the switch.\n   * @public\n   */\n  handleThemeChange(event, checked) {\n    this.setState({\n      isThemeDark: checked\n    });\n  }\n\n  /**\n   * Return the current theme.\n   * @return {Object} The current theme.\n   * @private\n   */\n  getTheme() {\n    return this.state.isThemeDark ? themeDark : themeLight;\n  }\n}\n\nexport default App;\n","/**\n * @file index\n * @copyright Copyright (c) 2018-2019 Dylan Miller, Todd Kitchens, and dfinityexplorer contributors\n * @license MIT License\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\ndocument.getElementById(\"root\"));\n"],"sourceRoot":""}